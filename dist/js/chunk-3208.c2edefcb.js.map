{"version":3,"sources":["webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/nexmo-stitch/dist/conversationClientErrorTypes.js","webpack:///./src/views/Talk.vue?7756","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/nexmo-stitch/dist/handlers/application_events.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/nexmo-stitch/dist/modules/rtc_cache.js","webpack:///./node_modules/sdp/sdp.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/nexmo-stitch/dist/modules/rtcstats/rtcstats.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/nexmo-stitch/dist/conversationClientError.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/nexmo-stitch/dist/conversation.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/nexmo-stitch/dist/modules/cache-worker.js","webpack:///./node_modules/detect-browser/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/nexmo-stitch/dist/events/image_event.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/nexmo-stitch/dist/application.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/loglevel/lib/loglevel.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/nexmo-stitch/dist/utils.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/nexmo-stitch/dist/events/text_event.js","webpack:///./node_modules/nexmo-stitch/dist/member.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/nexmo-stitch/dist/sdk.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./src/views/Talk.vue?c30b","webpack:///src/views/Talk.vue","webpack:///./src/views/Talk.vue?e3ad","webpack:///./src/views/Talk.vue?6caa","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/nexmo-stitch/dist/modules/media.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/nexmo-stitch/dist/modules/call.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack:///./node_modules/nexmo-stitch/dist/events/event.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/wildemitter/wildemitter.js","webpack:///./node_modules/nexmo-stitch/dist/handlers/sip_events.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/nexmo-stitch/dist/handlers/conversation_events.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/nexmo-stitch/dist/events/recording.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./node_modules/loglevel-plugin-prefix/lib/loglevel-plugin-prefix.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/nexmo-stitch/dist/modules/chrome_helper.js","webpack:///./node_modules/nexmo-stitch/dist/index.js","webpack:///./node_modules/nexmo-stitch/dist/user.js","webpack:///./node_modules/has-binary2/node_modules/isarray/index.js","webpack:///./node_modules/nexmo-stitch/dist/modules/errors_emitter.js","webpack:///./node_modules/nexmo-stitch/dist/modules/rtc_helper.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/nexmo-stitch/dist/modules/rtcstats/trace-ws.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js"],"names":["global","hasCORS","__webpack_require__","module","exports","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","e","XDomainRequest","concat","join","prev","alphabet","split","length","map","seed","i","encode","num","encoded","Math","floor","decode","str","decoded","charAt","yeast","now","Date","ConversationClientErrorTypes","error:application:call:params","type","description","error:application:callPhone:params","error:call:reject","error:getUserMedia:permissions","error:media:params","error:self","error:user:relogin","error:seen:own-message","error:already-seen","error:delivered:own-message","error:already-delivered","error:fetch-image","error:missing:params","error:invite:missing:params","error:invalid:param:type","error:audio:already-connecting","error:audio:not-enabled","error:media:already-connecting","error:media:not-enabled","error:media:unsupported-browser","error:media:extension","error:media:extension-not-installed","error:media:update:streams","error:media:update:unsupported","error:media:update:invalid","error:media:stream:not-found","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Talk_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Talk_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","NodeWebSocket","Transport","parser","parseqs","inherit","debug","BrowserWebSocket","WebSocket","MozWebSocket","window","WS","forceBase64","this","supportsBinary","perMessageDeflate","usingBrowserWebSocket","forceNode","protocols","call","prototype","name","doOpen","check","uri","agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","headers","localAddress","ws","err","emit","undefined","binaryType","supports","binary","addEventListeners","self","onopen","onOpen","onclose","onClose","onmessage","ev","onData","data","onerror","onError","write","packets","writable","total","l","packet","encodePacket","options","compress","len","Buffer","byteLength","threshold","send","done","setTimeout","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","ipv6","hostname","indexOf","path","Polling","hasXHR2","xhr","responseType","poll","pause","onPause","readyState","polling","once","doPoll","callback","index","onPacket","decodePayload","socket","callbackfn","encodePayload","doWrite","sid","JSONPPolling","callbacks","rNewline","rEscapedNewline","empty","___eio","push","msg","j","document","addEventListener","script","parentNode","removeChild","form","iframe","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","fn","area","id","iframeId","className","style","position","top","left","target","method","setAttribute","complete","initIframe","html","action","replace","value","submit","attachEvent","onreadystatechange","onload","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","v1","v4","uuid","s","m","h","d","y","parse","String","match","exec","parseFloat","toLowerCase","fmtShort","round","fmtLong","plural","ceil","val","isNaN","long","Error","JSON","stringify","utils","dependencies","shimChrome","shimFirefox","shimEdge","shimSafari","hasOwnProperty","logging","log","browserDetails","detectBrowser","chromeShim","edgeShim","firefoxShim","safariShim","commonShim","adapter","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","browserShim","shimCreateObjectURL","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimMaxMessageSize","shimSendThrowTypeError","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimReplaceTrack","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","Emitter","desc","open","decodePacket","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","charCodeAt","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","Event","Call","Utils","logger","ApplicationEventsHandler","[object Object]","application","getLogger","constructor","_handleApplicationEventMap","member:joined","_processMemberJoined","member:invited","_processMemberInvited","event","conversation","conversations","cid","copied_event","Object","assign","channel","knocking_id","_call_draft_list","has","get","_setupConversationObject","_setFrom","me","delete","calls","set","_handleStatusChange","members","from","user","invited_by","media","audio","display_name","startsWith","caller","getMemberFromNameOrNull","byteToHex","toString","substr","bytesToUuid","buf","offset","bth","Cache_worker","RTC_Cache","rtc","cache_worker","worker","events_from_idb","Map","NXMO_user_data","localStorage","getItem","user_data","info","Worker","URL","createObjectURL","cache_worker_blob","attachWorkerListener","conversations_idb_count","warn","connection","io","on","cache","response","trace","process_response","login","token","_sendRequest","sendRequest","request","process_request","then","cached_response","worker_action","skip","requests","rid","invalidate","postMessage","events","Promise","resolve","setItem","removeItem","SDPUtils","generateIdentifier","localCName","splitLines","blob","trim","line","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","parseCandidate","substring","candidate","foundation","component","parseInt","protocol","priority","ip","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","toUpperCase","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","direction","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","iceParameters","password","writeIceParameters","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessionId","version","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseMLine","fmt","slice","parseOLine","username","sessionVersion","netType","addressType","address","isValidSDP","toArray","bind","hasBin","Socket","connect","connect_error","connect_timeout","connecting","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","ping","pong","nsp","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","args","arguments","unshift","apply","BINARY_EVENT","EVENT","pop","CONNECT","reason","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","sent","emitBuffered","destroy","RTCStats","isCallback","getStatsInterval","prefixesToWrap","peerconnectioncounter","isFirefox","mozRTCPeerConnection","isEdge","RTCIceGatherer","origPeerConnection","peerconnection","config","constraints","pc","optional","clientId","nullConfig","iceServers","server","credential","browserType","nativeMethod","streamInfo","getTracks","t","reject","signalingState","iceConnectionState","iceGatheringState","label","stats_interval","setInterval","getStats","res","mos","getMos","map2obj","base","deltaCompression","clearInterval","generateCertificate","defineProperty","origGetUserMedia","gum","cb","eb","dumpStream","mediaDevices","getUserMedia","entries","o","v","k","oldStats","newStats","report","timestamp","tracks","enabled","muted","jitter_time","recv_pkts","lost_pkts","average","packet_loss","effective_latency","r_value","values","packetsLost","packetsReceived","toFixed","RTCPeerConnection","_ontrack","f","removeEventListener","_ontrackpoly","receiver","streams","dispatchEvent","enumerable","configurable","RTCTrackEvent","HTMLMediaElement","mozSrcObject","pcConfig","pcConstraints","newIceServers","urls","newServer","url","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","nativeAddIceCandidate","addIceCandidate","makeMapStats","stats","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","selector","onSucc","onErr","stat","RTCRtpSender","origGetSenders","getSenders","senders","sender","_pc","origAddTrack","addTrack","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","wrapPeerConnectionEvent","srcElement","removeStream","deprecated","removeTrack","DataChannel","RTCDataChannel","shimGetDisplayMedia","preferredMediaSource","getDisplayMedia","video","DOMException","mediaSource","NexmoClientErrorTypes","decorateError","instance","message","stack","NexmoClientError","errorInput","create","NexmoApiError","process","useColors","documentElement","WebkitAppearance","console","firebug","exception","table","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","splice","lastC","Function","save","namespaces","storage","load","r","NODE_ENV","BASE_URL","DEBUG","localstorage","chrome","local","colors","formatters","enable","WildEmitter","Member","TextEvent","ImageEvent","Media","ConversationEventHandler","ConversationClientError","Conversation","sequence_number","is_video_conversation","conversationEventHandler","_updateObjectInstance","mixin","member_id","_normalise","user_id","state","member","object_params","member_object","properties","request_body","_createDefaultValues","user_name","session","getConversation","catch","del","member_id_inviting","earmuffed","invite","kick","text","text_event","fileInput","quality_ratio","medium_size_ratio","thumbnail_size_ratio","formData","FormData","append","IPS_url","ips_url","networkSend","imageRequest","upload","evt","lengthComputable","loaded","status","representations","responseText","abort","activity","_typing","events_map","includes","event_id","constructed_event","handleEvent","function","IDBTransaction","webkitIDBTransaction","READ_WRITE","READ_ONLY","indexedDB","dbReady","pendingMessages","onupgradeneeded","idb","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","onsuccess","onblocked","onabort","oncomplete","onmessageerror","tx","conversationStore","eventStore","_actionHandlerMap","conversations:invalidate","deleteDatabase","conversations:storage:add","transaction","objectStore","put","countRequest","count","conversation:storage:delete","events:storage:update","putCommand","events:storage:delete","events:storage:add","events:storage:get","Blob","lastIndexOf","detect","parseUserAgent","getNodeVersion","detectOS","userAgentString","rules","getOperatingSystemRules","detected","os","rule","isNode","platform","browsers","getBrowserRules","Boolean","bot","buildRules","ruleTuples","tuple","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","super","seen_by","delivered_to","seen","delivered","imageDataObject","networkFetch","responseArray","chunk","fromCharCode","subarray","btoa","dataUrl","re","b","source","host","authority","ipv6uri","isArray","isBuf","Encoder","types","Decoder","ERROR_PACKET","encodeAsString","attachments","payload","tryStringify","encodeAsBinary","writeEncoding","bloblessData","deconstruction","deconstructPacket","pack","buffers","removeBlobs","reconstructor","decodeString","p","next","tryParse","isPayloadValid","BinaryReconstructor","reconPack","encoding","add","base64","takeBinaryData","finishedReconstruction","binData","reconstructPacket","withNativeBlob","withNativeFile","File","hasBinary","isBuffer","ArrayBuffer","toJSON","User","SipEventHandler","sipEventHandler","applicationEventsHandler","Application","synced_conversations_count","start_sync_time","stop_sync_time","isEventFromMe","_handleSipCallEvent","_handleEvent","_handleApplicationEvent","_updateTokenInCache","processed_event","usernames","createCall","CALL_DIRECTION","OUTBOUND","phoneNumber","createPhoneCall","conv","newConversation","conversation_object","updateOrCreateConversation","getEvents","syncConversations","conversations_length","performance","getTime","fetchConversationForStorage","synced_conversations_percentage","status_payload","sync_progress","sync_progress_buffer","base64encoder","sliceBuffer","after","utf8","isAndroid","isPhantomJS","dontSendBlobs","upgrade","noop","packetslist","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","buffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","tryDecode","strict","ary","each","eachWithIndex","el","utf8encode","b64data","readAsDataURL","typed","basic","utf8decode","decodeBase64Packet","asArray","rest","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","setLengthHeader","encodeOne","doneCallback","results","decodePayloadAsBinary","chr","ret","encodedPackets","totalLength","reduce","acc","resultArray","bufferIndex","isString","ab","view","lenStr","binaryIdentifier","size","lengthAry","bufferTail","tailArray","msgLength","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","definition","undefinedType","logMethods","bindMethod","methodName","realMethod","replaceLoggingMethods","level","loggerName","methodFactory","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","factory","currentLevel","storageKey","persistLevelIfPossible","levelNum","levelName","ignore","cookie","getPersistedLevel","storedLevel","location","levels","TRACE","INFO","WARN","SILENT","getLevel","setLevel","persist","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","TypeError","_log","noConflict","getLoggers","shimError_","PermissionDeniedError","constraint","getToken","setRequestHeader","onloadstart","webpackPolyfill","deprecate","paths","children","a","edgeVersion","hasTurn","validTurn","to","mute","earmuff","invited","joined","XHR","JSONP","websocket","xd","xs","jsonp","isSSL","forceJSONP","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","_callbacks","off","removeListener","removeAllListeners","listeners","hasListeners","socket_io","ErrorsEmitter","reg","template","timestampFormatter","date","toTimeString","levelFormatter","nameFormatter","ConversationClient","bugsnag_key","enable_log_reporter","environment","forceNew","reconnection","repository","screenShareExtensionId","SDK_version","rtcstats","ws_url","emit_events","sessionReady","u","firstChild","Bugsnag","apiKey","releaseStage","appVersion","disableAutoBreadcrumbs","transports","init","retry_number","delay","errorsEmitter","emitResponseIfError","tid","allocateUUID","OS_family","OS_revision","getConversations","terminate","logoutRequest","notifyException","disablePromises","conversation_id","disable","all","updateToken","eio","Manager","nsps","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","timeout","lastPing","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","skipReconnect","openSub","errorSub","cleanup","timer","clearTimeout","onping","onpong","ondata","ondecoded","onConnecting","processPacketQueue","subsLength","sub","onreconnect","attempt","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_e","loading","_s","talk","speaker","title","venue","live","start_date","start_time","_m","end_time","caption","staticRenderFns","Talkvue_type_script_lang_js_","methods","app","setConversation","_this","loginAndGetConversation","_this2","axios_default","dist_default","rtcstats_enabled","user_jwt","mounted","_this3","slug","$route","views_Talkvue_type_script_lang_js_","componentNormalizer","__file","__webpack_exports__","managers","newConnection","multiplex","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","sdpMid","sdpMLineIndex","revokeObjectURL","nativeCreateObjectURL","nativeRevokeObjectURL","newId","dsc","getOwnPropertyDescriptor","srcObject","nativeSetAttribute","RTCSctpTransport","_sctp","sctpInDescription","some","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","maxMessageSize","origSetRemoteDescription","setRemoteDescription","canSendMMS","remoteMMS","POSITIVE_INFINITY","sctp","origCreateDataChannel","createDataChannel","dataChannel","wrapDcSend","dc","origDataChannelSend","getLocalStreams","_localStreams","getStreamById","_remoteStreams","_addTrack","addStream","getRemoteStreams","_onaddstream","_onaddstreampoly","createOffer","createAnswer","setLocalDescription","successCallback","failureCallback","promise","withCallback","webkitGetUserMedia","errcb","OrigPeerConnection","RTCTransceiver","origCreateOffer","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","find","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver","chars","arraybuffer","bytes","encoded1","encoded2","encoded3","encoded4","bufferLength","RtcHelper","TraceWS","rtcHelper","activeStream","activeStreams","eventsQueue","parentConversation","remoteMembers","rtcObjects","rtcNewPromises","streamIndex","_setScreenShareExtensionId","_initStatsReporting","_initStatsEvents","rtcStats_wsConnection","rtcStats","rtcstatsUri","emit_event","videoConstraints","audioConstraints","getUserVideo","localStream","_handleVideoSend","rtcObjectWithType","_findRtcObjectByType","_disableLeg","screenshare","sources","getUserScreen","rtc_id","func","ran","isSendOnly","createRTCPeerConnection","iceTransportPolicy","bundlePolicy","rtcpMuxPolicy","iceCandidatePoolSize","DtlsSrtpKeyAgreement","listeningToRtcEvent","setRemoveDescriptionFunc","answer","_runWhenLegInitialized","handleOfferFunc","_handleNewOffer","leg_id","_handleParticipantRtcTerminate","member_left","_handleMemberLeft","ontrack","event_to_emit","offer","localDescription","_emitEventsByRtcId","getVideoTracks","onended","promisesArray","onicecandidate","_onIceCandidate","oniceconnectionstatechange","onicegatheringstatechange","promiseArray","bodyToSend","candidates","completed","_sendIceRequest","remoteMemberObject","remote_member_id","remote_leg_id","member_leg_id","local_leg_id","video_mute","media_settings","audio_mute","remote_member","other_member_id","rtcAnswerFunc","member_legs","member_leg","remoteMember","_deleteMemberMedia","_closeStream","rtcObject","_validateUpdateParams","_handleVideo","stop","releaseGroup","csRequestPromise","closeResourcesPromise","mediaTrack","mediaType","mediaSuccess","_enableMediaTracks","_sendMuteRequest","audioType","videoType","audioSuccess","videoSuccess","_waitAllRtcNewAreCompleted","rtcObj","promises","audioTracks","getAudioTracks","audioPromise","_setMediaTracksAndMute","videoTracks","videoPromise","onoff","onClientError","_handleAudio","rtcNewPromise","getUserAudio","pc_config","onnegotiationneeded","gatheringTimer","rtc_sent","do_gatherDone","_disableActiveStream","_cleanConversationProperties","voice_name","queue","loop","ssml","format","destination_url","streamed","validity_time","beep_start","beep_stop","detect_speech","Recording","createObjectUrl","list","array","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","logDisabled_","deprecationWarnings_","uastring","expr","pos","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","bool","oldMethod","newMethod","mozGetUserMedia","selectColor","hash","createDebug","prevTime","curr","coerce","formatter","logFn","instances","names","skips","CALL_STATUS","STARTED","RINGING","ANSWERED","COMPLETED","BUSY","TIMEOUT","UNANSWERED","REJECTED","FAILED","INBOUND","freeze","MEMBER_CALL_STATES","HUNGUP","STATUS_PERMITTED_FLOW","Set","_enableStatsEvents","_hangUpIfAllLeft","current_status","hangUp","_isEventFromMe","_isOutbound","_handleStatusChangeMap","_playAudioStream","_setStatusAndEmit","member:left","member:media","sip:ringing","sip:hangup","sip_code","knocking:delete:success","_attachCallListeners","_isValidStatusTransition","newConversationAndJoin","successful_invited_members","invites","inviteWithAudio","process_invites","number","leave","freeExports","freeGlobal","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","counter","ucs2encode","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","continuationByte","decodeSymbol","byte1","byte2","byte3","byte4","MediaStreamTrack","InternalError","NotSupportedError","SecurityError","The operation is insecure.","getUserMedia_","onSuccess","constraintsToFF37_","require","ideal","exact","advanced","oc","getUserMediaPromise_","enumerateDevices","infos","deviceId","groupId","orgEnumerateDevices","getSupportedConstraints","remap","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","isWildEmitter","groupName","hasGroup","group","_groupName","item","handlers","specialCallbacks","getWildcardCallbacks","eventName","event_call","_handleSipCallEventMap","$iterators","getKeys","redefine","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","explicit","Collection","filterIceServers","shimRTCPeerConnection","origMSTEnabled","_dtmf","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","replaceTrack","setTrack","_handleEventMap","audio:record","_processAudioRecord","audio:record:done","_processAudioRecordDone","event:delete","_processDelete","image","_processImage","image:delivered","_processDelivered","image:seen","_processSeen","_processMember","_processMedia","_processText","text:delivered","text:seen","audio:mute:on","_processMuteForMedia","audio:mute:off","video:mute:on","video:mute:off","delivered_id","event_to_mark","event_to_delete","deleted","imageEvent","remote","seen_id","textEvent","ieee754","typedArraySupport","__proto__","foo","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","isEncoding","actual","fromArrayLike","byteOffset","copy","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","x","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","MAX_ARGUMENTS_LENGTH","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","hi","lo","dst","constraintsToChrome_","mandatory","cc","oldname_","mix","shimConstraints_","face","facingMode","matches","getSupportedFacingModeLies","devices","dev","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraintName","kinds","getSources","device","echoCancellation","frameRate","height","width","cs","_nodeId","_clockseq","rng","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","rnds","ii","abv","parseuri","loc","href","err_cb","bail","proxy","adapterFactory","loglevel","merge","defaults","configs","rootLogger","originalFactory","parent","logLevel","originalMethod","hasTimestamp","hasLevel","hasName","content","lname","api","requestTimeout","Request","unloadHandler","req","sendXhr","pollXhr","setDisableHeaderCheck","withCredentials","hasXDR","onLoad","contentType","getResponseHeader","requestsCount","fromError","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","getBlob","mapArrayBufferViews","BlobBuilderConstructor","bb","BlobConstructor","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","priorWebsocketSuccess","createTransport","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","getRandomValues","crypto","msCrypto","rnds8","SCREEN_SHARE_INSTALLED_MESSAGE","ChromeHelper","runtime","sendMessage","streamId","__WEBPACK_AMD_DEFINE_ARRAY__","emitter","LISTENER_GROUP","_isTypeError","browserDetect","constraintsToUse","checkBrowserRunOnHttps","checkChromeExtensionIsInstalled","getShareScreenStream","_getWindowLocationProtocol","_getBrowserName","chromeHelper","_initChromeHelper","checkScreenShareInstalled","chromeGetShareScreenStream","fireFoxGetShareScreenStream","mozMediaSource","getScreenShare","chromeMediaSource","maxWidth","screen","maxHeight","maxFrameRate","chromeMediaSourceId","Audio","autoplay","fixStatsType","dtlsRole","trackId","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","connectionState","usingBundle","_iceGatherers","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onaddstream","onremovestream","onsignalingstatechange","onconnectionstatechange","ondatachannel","_emitGatheringStateChange","getConfiguration","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","alreadyExists","_maybeFireNegotiationNeeded","clonedStream","idx","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","_gather","onlocalcandidate","cand","serializedCandidate","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","recv","encodings","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setRemoteCandidates","MediaStream","default","getCapabilities","isNewTrack","nativeTrack","newState","states","new","closed","checking","numAudioTracks","numVideoTracks","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","mediaSectionsInOffer","localTrack","hasRtx","candidateString","senderOrReceiver","allStats","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats","ws_config","PROTOCOL_VERSION","MAX_BUFFER_LENGTH","MAX_RECONNECT_RETRIES","RECONNECT_RETRY_TIMEOUT","reconnectRetriesCount","CLOSED","OPEN","withNativeBuffer","withNativeArrayBuffer","walkStats","resultSet","endsWith","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","webkitMediaStream","te","shimSenderWithDtmf","dtmf","createDTMFSender","_senders","origRemoveTrack","origAddStream","origRemoveStream","origGetStats","_srcObject","shimAddTrackRemoveTrackWithNative","_shimmedLocalStreams","existingSenders","newSenders","newSender","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replaceExternalStreamId","oldStream","isLegacyCall","origSetLocalDescription","origLocalDescription","isLocal","streamid","hasTrack","webkitRTCPeerConnection","iceTransports","errorCallback","fixChromeStats_","standardReport","reports","standardStats","successCallbackWrapper_","getSourceId","sourceId"],"mappings":"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","file":"js/chunk-3208.c2edefcb.js","sourcesContent":["// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/*\n *  Nexmo Stitch SDK\n *  Conversation Client Error Types\n *\n * Copyright (c) Nexmo Inc. 2017\n */\n\nconst ConversationClientErrorTypes = {\n\t\"error:application:call:params\": {\n\t\ttype: \"error:application:call:params\",\n\t\tdescription: \"not a valid String[] of usernames param\"\n\t},\n\t\"error:application:callPhone:params\": {\n\t\ttype: \"error:application:call:params\",\n\t\tdescription: \"not a valid String of phone number\"\n\t},\n\t\"error:call:reject\": {\n\t\ttype: \"error:call:reject\",\n\t\tdescription: \"failed to reject the call\"\n\t},\n\t\"error:getUserMedia:permissions\": {\n\t\ttype: \"error:getUserMedia:permissions\",\n\t\tdescription: \"missing getUserMedia permissions\"\n\t},\n\t\"error:media:params\": {\n\t\ttype: \"error:media:params\",\n\t\tdescription: \"currently supported params media type= {audio:{muted:false, earmuffed:false}}\"\n\t},\n\t\"error:self\": {\n\t\ttype: \"error:self\",\n\t\tdescription: \"Conversation Object is missing self (me)\"\n\t},\n\t\"error:user:relogin\": {\n\t\ttype: \"error:user:relogin\",\n\t\tdescription: \"please relogin\"\n\t},\n\t\"error:seen:own-message\": {\n\t\ttype: \"error:seen:own-message\",\n\t\tdescription: \"attempt to send seen for own message\"\n\t},\n\t\"error:already-seen\": {\n\t\ttype: \"error:already-seen\",\n\t\tdescription: \"already marked as seen\"\n\t},\n\t\"error:delivered:own-message\": {\n\t\ttype: \"error:delivered:own-message\",\n\t\tdescription: \"attempt to send delivered for own message\"\n\t},\n\t\"error:already-delivered\": {\n\t\ttype: \"error:already-delivered\",\n\t\tdescription: \"already marked as delivered\"\n\t},\n\t\"error:fetch-image\": {\n\t\ttype: \"error:fetch-image\",\n\t\tdescription: \"xhr.status received other than 200\"\n\t},\n\t\"error:missing:params\": {\n\t\ttype: \"error:missing:params\",\n\t\tdescription: \"missing parameters\"\n\t},\n\t\"error:invite:missing:params\": {\n\t\ttype: \"error:missing:params\",\n\t\tdescription: \"This invite cannot be sent to empty username and user_id\"\n\t},\n\t\"error:invalid:param:type\": {\n\t\ttype: \"error:invalid:param:type\",\n\t\tdescription: \"Invalid Object type, passed in the parameters\"\n\t},\n\t\"error:audio:already-connecting\": {\n\t\ttype: \"error:audio:already-connecting\",\n\t\tdescription: \"Audio call already in progress\"\n\t},\n\t\"error:audio:not-enabled\": {\n\t\ttype: \"error:audio:not-enabled\",\n\t\tdescription: \"Audio is not enabled\"\n\t},\n\t\"error:media:already-connecting\": {\n\t\ttype: \"error:media:already-connecting\",\n\t\tdescription: \"Media is already in progress\"\n\t},\n\t\"error:media:not-enabled\": {\n\t\ttype: \"error:media:not-enabled\",\n\t\tdescription: \"Media is not enabled\"\n\t},\n\t\"error:media:unsupported-browser\": {\n\t\ttype: \"error:media:unsupported-browser\",\n\t\tdescription: \"This action is not supported on this browser\"\n\t},\n\t\"error:media:extension\": {\n\t\ttype: \"error:media:extension\",\n\t\tdescription: \"Chrome extension has thrown an error\"\n\t},\n\t\"error:media:extension-not-installed\": {\n\t\ttype: \"error:media:extension-not-installed\",\n\t\tdescription: \"Chrome extension should be installed\"\n\t},\n\t\"error:media:update:streams\": {\n\t\ttype: \"error:media:update:streams\",\n\t\tdescription: \"cant update more than one stream\"\n\t},\n\t\"error:media:update:unsupported\": {\n\t\ttype: \"error:media:update:unsupported\",\n\t\tdescription: \"params are not valid for update - need video or screenshare\"\n\t},\n\t\"error:media:update:invalid\": {\n\t\ttype: \"error:media:update:invalid\",\n\t\tdescription: \"state of media is not supported for this update\"\n\t},\n\t\"error:media:stream:not-found\": {\n\t\ttype: \"error:media:stream:not-found\",\n\t\tdescription: \"A stream with the given index was not found\"\n\t}\n};\n\nmodule.exports = ConversationClientErrorTypes;\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Talk.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Talk.vue?vue&type=style&index=0&lang=css&\"","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const Event = require('../events/event');\nconst Call = require('../modules/call');\n\nconst Utils = require('../utils');\nconst logger = require('loglevel');\n\n/**\n * Handle Application Events\n *\n * @class ApplicationEventsHandler\n * @param {Application} application\n * @param {Conversation} conversation\n * @private\n  */\nclass ApplicationEventsHandler {\n    constructor(application) {\n        this.log = logger.getLogger(this.constructor.name);\n        this.application = application;\n        this._handleApplicationEventMap = {\n            'member:joined': this._processMemberJoined,\n            'member:invited': this._processMemberInvited\n        };\n    }\n\n    /**\n     * Handle and event.\n     *\n     * Update the event to map local generated events\n     * in case we need a more specific event to pass in the application listener\n     * or f/w the event as it comes\n     * @param {object} event\n     * @private\n     */\n    handleEvent(event) {\n        const conversation = this.application.conversations[event.cid];\n        const copied_event = Object.assign({}, event);\n\n        if (this._handleApplicationEventMap.hasOwnProperty(event.type)) {\n            return this._handleApplicationEventMap[event.type].call(this, conversation, new Event(conversation, copied_event)) || new Event(conversation, copied_event);\n        }\n        return new Event(conversation, copied_event);\n    }\n\n    /**\n     * case: call to PSTN, after knocking event we receive joined\n     * @private\n     */\n    _processMemberJoined(conversation, event) {\n        if (event.body.channel && event.body.channel.knocking_id\n            && this.application._call_draft_list.has(event.body.channel.knocking_id)) {\n            const call = this.application._call_draft_list.get(event.body.channel.knocking_id);\n            call._setupConversationObject(conversation);\n            call._setFrom(conversation.me);\n            this.application._call_draft_list.delete(event.body.channel.knocking_id);\n            // remove the knocking id for the calls list\n            // needs to be part of the call_draft_list for call.hangup to perform knocking:delete\n            delete call.knocking_id;\n            this.application.calls.set(conversation.id, call);\n            call._handleStatusChange(event);\n            this.application.emit('member:call', this.application.conversations[event.cid].members[event.from], call);\n        }\n        return event;\n    }\n\n    _processMemberInvited(conversation, event) {\n        // no need to process the event if it's not media related invite, or the member is us\n        if ((conversation.me && (conversation.me.user.name === event.body.invited_by))\n            || (!event.body.user.media || !event.body.user.media.audio)) {\n            return event;\n        }\n        // (IP - IP call)\n        if (conversation.display_name && conversation.display_name.startsWith('CALL_')) {\n            const caller = Utils.getMemberFromNameOrNull(conversation, event.body.invited_by) || 'unknown';\n            const call = new Call(this.application, conversation, caller);\n            this.application.calls.set(conversation.id, call);\n            this.application.emit('member:call', this.application.conversations[event.cid].members[event.from], call);\n            // VAPI invites (PHONE - IP)\n        } else if (!event.body.invited_by) {\n            const call = new Call(this.application, conversation, \"unknown\");\n            this.application.calls.set(conversation.id, call);\n            call._handleStatusChange(event);\n            this.application.emit('member:call', this.application.conversations[event.cid].members[event.from], call);\n        }\n        return event;\n    }\n}\nmodule.exports = ApplicationEventsHandler;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","/*\n * Nexmo Stitch SDK\n *  Conversation Cache module\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nconst Cache_worker = require('./cache-worker.js');\nconst logger = require('loglevel');\n\nclass RTC_Cache {\n\tconstructor(rtc) {\n\t\tthis.log = logger.getLogger(\"Cache\");\n\t\tthis.rtc = rtc;\n\n\t\tconst cache_worker = new Cache_worker();\n\n\t\tthis.worker = null;\n\n\t\t// placeholder object for cached data\n\t\tthis.events_from_idb = new Map();\n\n\t\t//load token from cache\n\t\tlet NXMO_user_data = null;\n\t\tif (typeof (Storage) !== 'undefined') {\n\t\t\tNXMO_user_data = localStorage.getItem('NXMO_user_data');\n\t\t\tif (NXMO_user_data) {\n\t\t\t\tthis.user_data = JSON.parse(NXMO_user_data);\n\t\t\t}\n\t\t\tthis.log.info('auto-relogin is enabled');\n\t\t} else {\n\t\t\tthis.log.info('auto-relogin could not be enabled');\n\t\t}\n\t\tif (typeof window !== 'undefined' && !!window.Worker) {\n\t\t\tthis.log.info('initialising cache with webWorker');\n\t\t\tthis.worker = new Worker(URL.createObjectURL(cache_worker.cache_worker_blob));\n\n\t\t\tthis.attachWorkerListener();\n\t\t} else {\n\t\t\tthis.log.warn('webWorker is not supported');\n\t\t\treturn;\n\t\t}\n\t\tthis.conversations_idb_count = 0;\n\t}\n\n\tinit(rtc) {\n\t\tif (!this.worker) return;\n\t\trtc.connection.io.on('packet', (packet) => {\n\t\t\tif (!rtc.cache || packet.type !== 2 || packet.data[0] === 'echo') return;\n\t\t\tconst response = packet.data[1];\n\t\t\t// Set the type of the response\n\t\t\tresponse.type = packet.data[0];\n\t\t\tthis.log.trace(\"[<--]\", response.type, response);\n\t\t\tthis.process_response(response);\n\t\t});\n\n\t\trtc.connection.io.on('reconnect', () => {\n\t\t\tif (this.user_data) {\n\t\t\t\trtc.login(rtc.cache.user_data.token);\n\t\t\t}\n\t\t});\n\n\t\tthis._sendRequest = rtc.sendRequest;\n\t\trtc.sendRequest = (request, callback) => {\n\t\t\tthis.process_request(request).then((cached_response) => {\n\t\t\t\tif (cached_response) {\n\t\t\t\t\treturn callback(cached_response);\n\t\t\t\t} else {\n\t\t\t\t\treturn this._sendRequest.call(this.rtc, request, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.log.info('cache initialised');\n\t}\n\n\tattachWorkerListener() {\n\t\tthis.worker.onmessage = (event) => {\n\t\t\tthis.log.debug('[<--] (WebWorker): ', event.type, event.data.worker_action);\n\t\t\tswitch (event.data.worker_action) {\n\t\t\t\tcase 'conversations:idb:count':\n\t\t\t\t\tthis.conversations_idb_count = event.data.conversations_idb_count;\n\t\t\t\t\tthis.log.debug(`[<--] (WebWorker): number of conversations: ${this.conversations_idb_count}`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'events:storage:get':\n\t\t\t\t\tthis.events_from_idb.set(event.data.cid, event.data);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdelete event.data.worker_action;\n\t\t};\n\t}\n\n\tprocess_response(response) {\n\t\tlet skip = false;\n\t\tif (!this.worker) return;\n\t\tswitch (response.type) {\n\t\t\tcase 'conversation:events:success':\n\t\t\t\t// Get the cid from the request object\n\t\t\t\tresponse.cid = this.rtc.requests[response.rid].request.cid;\n\n\t\t\t\tresponse.worker_action = 'events:storage:update';\n\t\t\t\tbreak;\n\t\t\tcase 'conversation:get:success':\n\t\t\t\tresponse.worker_action = 'conversations:storage:add';\n\t\t\t\tbreak;\n\t\t\t// these events trigger a worker action to update the conversation.events list\n\t\t\t// case of reload\n\t\t\tcase 'image':\n\t\t\t// FALLTHROUGH\n\t\t\tcase 'text':\n\t\t\t\tresponse.worker_action = 'events:storage:add';\n\t\t\t\tthis.events_from_idb.set(response.cid, response);\n\t\t\t\tbreak;\n\t\t\tcase 'event:delete':\n\t\t\t\tresponse.worker_action = 'events:storage:delete';\n\t\t\t\tthis.events_from_idb.delete(response.cid, response);\n\t\t\t\tbreak;\n\t\t\tcase 'conversation:delete:success':\n\t\t\t\tresponse.cid = this.rtc.requests[response.rid].request.cid;\n\t\t\t// FALLTHROUGH\n\t\t\tcase 'conversation:delete':\n\t\t\t\tresponse.worker_action = 'conversation:storage:delete';\n\t\t\t\tthis.events_from_idb.delete(response.cid, response);\n\t\t\t\tbreak;\n\t\t\tcase 'session:logged-out':\n\t\t\t// FALLTHROUGH\n\t\t\tcase 'session:terminated':\n\t\t\t\tskip = true;\n\t\t\t\tthis.invalidate();\n\t\t\tdefault:\n\t\t\t\tskip = true;\n\t\t\t\tthis.log.debug(`[--] ignoring response: ${response.type}`);\n\t\t\t\tbreak;\n\t\t}\n\t\tif (skip) return;\n\n\t\tthis.worker.postMessage(response);\n\t\tthis.log.debug(`[-->] (WebWorker): ${response.type}`, response);\n\t}\n\n\tprocess_request(request) {\n\t\tswitch (request.type) {\n\t\t\tcase 'conversation:events':\n\t\t\t\tif (this.events_from_idb.has(request.cid) && this.events_from_idb.get(request.cid).events) {\n\t\t\t\t\treturn Promise.resolve(this.events_from_idb.get(request.cid).events);\n\t\t\t\t} else {\n\t\t\t\t\tconst event = {\n\t\t\t\t\t\tworker_action: 'events:storage:get',\n\t\t\t\t\t\tcid: request.cid\n\t\t\t\t\t};\n\t\t\t\t\tthis.worker.postMessage(event);\n\t\t\t\t\tthis.log.debug('[-->] (WebWorker): ', request.type, event);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tupdateToken(user_data) {\n\t\tif (typeof (Storage) !== 'undefined') {\n\t\t\tlocalStorage.setItem('NXMO_user_data', JSON.stringify(user_data));\n\t\t}\n\t}\n\n\tinvalidate() {\n\t\tif (!this.worker) return;\n\t\tconst event = {\n\t\t\tworker_action: 'conversations:invalidate'\n\t\t};\n\t\tthis.worker.postMessage(event);\n\t\tif (typeof (Storage) !== 'undefined') {\n\t\t\tlocalStorage.removeItem('NXMO_user_data');\n\t\t}\n\t\tthis.log.debug('[-->] (WebWorker): ', event.worker_action);\n\t}\n}\nmodule.exports = RTC_Cache;\n"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: secondarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=thisisadapterortc ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","/**\n * Collect WebRTC Report data\n * Removes credential information from the STUN.TURN server configuration.\n * performs Delta compression\n *\n * if isCallback is true the report includes a MOS score : trace('mos', mos, report);\n *\n * @param {object} trace the function will be attached to the RTCPeerConnection object and will be used as a callback\n * @param {boolean} isCallback this set to true the reports will be passed uncompressed to the trace function: trace('mos', mos, res);\n * @param {number} getStatsInterval\n * @param {string} prefixesToWrap\n * @private\n */\n\nclass RTCStats {\n    constructor(trace, isCallback, getStatsInterval, prefixesToWrap) {\n        var peerconnectioncounter = 0;\n        var isFirefox = !!window.mozRTCPeerConnection;\n        var isEdge = !!window.RTCIceGatherer;\n\n        var self = this;\n\n        prefixesToWrap.forEach(function(prefix) {\n            if (!window[prefix + 'RTCPeerConnection']) {\n                return;\n            }\n            if (prefix === 'webkit' && isEdge) {\n                // dont wrap webkitRTCPeerconnection in Edge.\n                return;\n            }\n            var origPeerConnection = window[prefix + 'RTCPeerConnection'];\n            var peerconnection = function(config, constraints) {\n                var id = 'PC_' + peerconnectioncounter++;\n                var pc = new origPeerConnection(config, constraints);\n                trace('clientId', id, constraints.optional[constraints.optional.length - 1].clientId);\n\n                if (!config) {\n                    config = { nullConfig: true };\n                }\n\n                config = JSON.parse(JSON.stringify(config)); // deepcopy\n                // don't log credentials\n                ((config && config.iceServers) || []).forEach(function(server) {\n                    delete server.credential;\n                });\n\n                if (isFirefox) {\n                    config.browserType = 'moz';\n                } else if (isEdge) {\n                    config.browserType = 'edge';\n                } else {\n                    config.browserType = 'webkit';\n                }\n                trace('create', id, config);\n                // TODO: do we want to log constraints here? They are chrome-proprietary.\n                // http://stackoverflow.com/questions/31003928/what-do-each-of-these-experimental-goog-rtcpeerconnectionconstraints-do\n                if (constraints) {\n                    trace('constraints', id, constraints);\n                }\n\n                pc.trace = function(key, value) {\n                    if (key && value) {\n                        trace(key, id, value);\n                    }\n                };\n\n                ['createDataChannel', 'close', 'addTrack', 'removeTrack'].forEach(function(method) {\n                    if (origPeerConnection.prototype[method]) {\n                        var nativeMethod = pc[method];\n                        pc[method] = function() {\n                            trace(method, id, arguments);\n                            return nativeMethod.apply(pc, arguments);\n                        };\n                    }\n                });\n\n                ['addStream', 'removeStream'].forEach(function(method) {\n                    if (origPeerConnection.prototype[method]) {\n                        var nativeMethod = pc[method];\n                        pc[method] = function(stream) {\n                            var streamInfo = stream.getTracks().map(function(t) {\n                                return t.kind + ':' + t.id;\n                            });\n\n                            trace(method, id, stream.id + ' ' + streamInfo);\n                            return nativeMethod.call(pc, stream);\n                        };\n                    }\n                });\n\n                ['createOffer', 'createAnswer'].forEach(function(method) {\n                    if (origPeerConnection.prototype[method]) {\n                        var nativeMethod = pc[method];\n                        pc[method] = function() {\n                            var args = arguments;\n                            var opts;\n                            if (arguments.length === 1 && typeof arguments[0] === 'object') {\n                                opts = arguments[0];\n                            } else if (arguments.length === 3 && typeof arguments[2] === 'object') {\n                                opts = arguments[2];\n                            }\n                            trace(method, id, opts);\n                            return new Promise(function(resolve, reject) {\n                                nativeMethod.apply(pc, [\n                                    function(description) {\n                                        trace(method + 'OnSuccess', id, description);\n                                        resolve(description);\n                                        if (args.length > 0 && typeof args[0] === 'function') {\n                                            args[0].apply(null, [description]);\n                                        }\n                                    },\n                                    function(err) {\n                                        trace(method + 'OnFailure', id, err.toString());\n                                        reject(err);\n                                        if (args.length > 1 && typeof args[1] === 'function') {\n                                            args[1].apply(null, [err]);\n                                        }\n                                    }\n\n                                ]);\n                            });\n                        };\n                    }\n                });\n\n                ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function(method) {\n                    if (origPeerConnection.prototype[method]) {\n                        var nativeMethod = pc[method];\n                        pc[method] = function() {\n                            var args = arguments;\n                            trace(method, id, args[0]);\n                            return new Promise(function(resolve, reject) {\n                                nativeMethod.apply(pc, [args[0],\n                                function() {\n                                    trace(method + 'OnSuccess', id);\n                                    resolve();\n                                    if (args.length >= 2) {\n                                        args[1].apply(null, []);\n                                    }\n                                },\n                                function(err) {\n                                    trace(method + 'OnFailure', id, err.toString());\n                                    reject(err);\n                                    if (args.length >= 3) {\n                                        args[2].apply(null, [err]);\n                                    }\n                                }]\n                                );\n                            });\n                        };\n                    }\n                });\n\n                pc.addEventListener('icecandidate', function(e) {\n                    trace('onicecandidate', id, e.candidate);\n                });\n                pc.addEventListener('addstream', function(e) {\n                    trace('onaddstream', id, e.stream.id + ' ' + e.stream.getTracks().map(function(t) { return t.kind + ':' + t.id; }));\n                });\n                pc.addEventListener('removestream', function(e) {\n                    trace('onremovestream', id, e.stream.id + ' ' + e.stream.getTracks().map(function(t) { return t.kind + ':' + t.id; }));\n                });\n                pc.addEventListener('signalingstatechange', function() {\n                    trace('onsignalingstatechange', id, pc.signalingState);\n                });\n                pc.addEventListener('iceconnectionstatechange', function() {\n                    trace('oniceconnectionstatechange', id, pc.iceConnectionState);\n                });\n                pc.addEventListener('icegatheringstatechange', function() {\n                    trace('onicegatheringstatechange', id, pc.iceGatheringState);\n                });\n                pc.addEventListener('negotiationneeded', function() {\n                    trace('onnegotiationneeded', id);\n                });\n                pc.addEventListener('datachannel', function(event) {\n                    trace('ondatachannel', id, [event.channel.id, event.channel.label]);\n                });\n\n                // TODO: do we want one big interval and all peerconnections\n                //    queried in that or one setInterval per PC?\n                //    we have to collect results anyway so...\n\n                var prev = {};\n                self.stats_interval = window.setInterval(() => {\n                    if (pc.signalingState === 'closed') {\n                        window.clearInterval(self.stats_interval);\n                        return;\n                    }\n                    pc.getStats(null).then((res) => {\n                        if (isCallback) {\n                            let mos = RTCStats.getMos(res);\n                            trace('mos', mos, res);\n                        } else {\n                            var now = RTCStats.map2obj(res);\n                            var base = JSON.parse(JSON.stringify(now)); // our new prev\n                            trace('getstats', id, RTCStats.deltaCompression(prev, now));\n                            prev = base;\n                        }\n                    });\n                }, getStatsInterval);\n\n                return pc;\n            };\n            // wrap static methods. Currently just generateCertificate.\n            if (origPeerConnection.generateCertificate) {\n                Object.defineProperty(peerconnection, 'generateCertificate', {\n                    get: function() {\n                        return arguments.length ?\n                            origPeerConnection.generateCertificate.apply(null, arguments)\n                            : origPeerConnection.generateCertificate;\n                    }\n                });\n            }\n            window[prefix + 'RTCPeerConnection'] = peerconnection;\n            window[prefix + 'RTCPeerConnection'].prototype = origPeerConnection.prototype;\n        });\n\n        // getUserMedia wrappers\n        prefixesToWrap.forEach(function(prefix) {\n            var name = prefix + (prefix.length ? 'GetUserMedia' : 'getUserMedia');\n            if (!navigator[name]) {\n                return;\n            }\n            var origGetUserMedia = navigator[name].bind(navigator);\n            var gum = function() {\n                trace('getUserMedia', null, arguments[0]);\n                var cb = arguments[1];\n                var eb = arguments[2];\n                origGetUserMedia(arguments[0],\n                    function(stream) {\n                        // we log the stream id, track ids and tracks readystate since that is ended GUM fails\n                        // to acquire the cam (in chrome)\n                        trace('getUserMediaOnSuccess', null, RTCStats.dumpStream(stream));\n                        if (cb) {\n                            cb(stream);\n                        }\n                    },\n                    function(err) {\n                        trace('getUserMediaOnFailure', null, err.name);\n                        if (eb) {\n                            eb(err);\n                        }\n                    }\n                );\n            };\n            navigator[name] = gum.bind(navigator);\n        });\n\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n            var gum = function() {\n                trace('navigator.mediaDevices.getUserMedia', null, arguments[0]);\n                return origGetUserMedia.apply(navigator.mediaDevices, arguments)\n                    .then(function(stream) {\n                        trace('navigator.mediaDevices.getUserMediaOnSuccess', null, RTCStats.dumpStream(stream));\n                        return stream;\n                    }, function(err) {\n                        trace('navigator.mediaDevices.getUserMediaOnFailure', null, err.name);\n                        return Promise.reject(err);\n                    });\n            };\n            navigator.mediaDevices.getUserMedia = gum.bind(navigator.mediaDevices);\n        }\n    }\n    /**\n     * Transforms a maplike to an object. Mostly for getStats\n     * JSON.parse(JSON.stringify())\n     * @param {Map} map\n     * @returns {object}\n     */\n    static map2obj(m) {\n        if (!m.entries) {\n            return m;\n        }\n        var o = {};\n        m.forEach(function(v, k) {\n            o[k] = v;\n        });\n        return o;\n    }\n    /**\n     * Apply a delta compression to the stats report. Reduces size by ~90%.\n     * To reduce further, report keys could be compressed.\n     * @param {Stats} oldStats\n     * @param {Stats} newStats\n     */\n    static deltaCompression(oldStats, newStats) {\n        newStats = JSON.parse(JSON.stringify(newStats));\n        Object.keys(newStats).forEach(function(id) {\n            if (!oldStats[id]) {\n                return;\n            }\n            var report = newStats[id];\n            Object.keys(report).forEach(function(name) {\n                if (report[name] === oldStats[id][name]) {\n                    delete newStats[id][name];\n                }\n                delete report.timestamp;\n                if (Object.keys(report).length === 0) {\n                    delete newStats[id];\n                }\n            });\n        });\n        // TODO: moving the timestamp to the top-level is not compression but...\n        newStats.timestamp = new Date();\n        return newStats;\n    }\n\n    static dumpStream(stream) {\n        return {\n            id: stream.id,\n            tracks: stream.getTracks().map(function(track) {\n                return {\n                    id: track.id,                 // unique identifier (GUID) for the track\n                    kind: track.kind,             // `audio` or `video`\n                    label: track.label,           // identified the track source\n                    enabled: track.enabled,       // application can control it\n                    muted: track.muted,           // application cannot control it (read-only)\n                    readyState: track.readyState // `live` or `ended`\n                };\n            })\n        };\n    }\n\n    disable() {\n        if (!this.stats_interval) {\n            throw new Error('rtc stats not enabled');\n        } else {\n            window.clearInterval(this.stats_interval);\n        }\n    }\n\n    static getMos(report) {\n        let jitter_time = 0;\n        let recv_pkts = 0;\n        let lost_pkts = 0;\n        let average = 100.0\n        let packet_loss = 0.0\n        let effective_latency = 0.0\n        let r_value = 0.0;\n        let mos = 0;\n\n        for (let now of report.values()) {\n            if (now.type === \"inbound-rtp\") {\n                jitter_time = now.jitter;\n                lost_pkts = now.packetsLost;\n                recv_pkts = now.packetsReceived;\n            }\n        }\n\n        if (recv_pkts + lost_pkts > 0) {\n            packet_loss = 100.0 * (lost_pkts / (recv_pkts + lost_pkts));\n        }\n        effective_latency = (average + jitter_time * 2 + 10);\n        if (effective_latency < 160) {\n            r_value = 93.2 - (effective_latency / 40);\n        }\n        else {\n            r_value = 93.2 - (effective_latency - 120) / 10;\n        }\n        r_value = r_value - (packet_loss * 2.5);\n\n        if (r_value < 1) {\n            r_value = 1;\n        }\n        mos = 1 + (0.035) * r_value + (0.000007) * r_value * (r_value - 60) * (100 - r_value);\n        return parseFloat(mos).toFixed(6);\n    }\n\n}\nmodule.exports = RTCStats;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  },\n\n  shimSenderGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n      return;\n    }\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      return this.track ? this._pc.getStats(this.track) :\n          Promise.resolve(new Map());\n    };\n  },\n\n  shimReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender)) {\n      return;\n    }\n    if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n      return;\n    }\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        var pc = this;\n        var receivers = origGetReceivers.apply(pc, []);\n        receivers.forEach(function(receiver) {\n          receiver._pc = pc;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      return this._pc.getStats(this.track);\n    };\n  },\n\n  shimRemoveStream: function(window) {\n    if (!window.RTCPeerConnection ||\n        'removeStream' in window.RTCPeerConnection.prototype) {\n      return;\n    }\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(function(sender) {\n        if (sender.track && stream.getTracks().indexOf(sender.track) !== -1) {\n          pc.removeTrack(sender);\n        }\n      });\n    };\n  },\n\n  shimRTCDataChannel: function(window) {\n    // rename DataChannel to RTCDataChannel (native fix in FF60):\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n    if (window.DataChannel && !window.RTCDataChannel) {\n      window.RTCDataChannel = window.DataChannel;\n    }\n  },\n\n  shimGetDisplayMedia: function(window, preferredMediaSource) {\n    if ('getDisplayMedia' in window.navigator) {\n      return;\n    }\n    navigator.getDisplayMedia = function(constraints) {\n      if (!(constraints && constraints.video)) {\n        var err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return navigator.mediaDevices.getUserMedia(constraints);\n    };\n  }\n};\n","/*\n * Nexmo Stitch SDK\n *  Conversation Client - API Error wrapper\n *\n * Copyright (c) Nexmo Inc. 2017\n */\n\nconst NexmoClientErrorTypes = require('./conversationClientErrorTypes');\n\nfunction decorateError(instance, error) {\n\n\tObject.assign(instance, error);\n\tinstance.message = 'type: ' + instance.type + ', description: ' + (instance.description ? instance.description : '');\n\tinstance.stack = new Error().stack;\n}\n\n/**\n * Error constructor of an NexmoClient-error\n * @param {string} errorInput String client error\n */\nconst NexmoClientError = function(errorInput) {\n\tconst error = NexmoClientErrorTypes[errorInput];\n\t// for other errors (libs/browser APIs) re-use the Client error\n\t// to forward it but don't throw it away\n\tif (error) {\n\t\t// if error type exists in our list keep consistency\n\t\tdecorateError(this, error);\n\t} else {\n\t\t//if the structure is not as expected, f/w as much as we can get\n\t\tthis.message = (errorInput && errorInput.message) ? errorInput.message : errorInput;\n\t\tthis.stack = (errorInput && errorInput.stack) ? errorInput.stack : new Error().stack;\n\t}\n\n\t// make sure the error.name matches the class name\n\tthis.name = 'NexmoClientError';\n}\n\nNexmoClientError.prototype = Object.create(NexmoClientError.prototype);\nNexmoClientError.prototype.constructor = NexmoClientError;\n\n\n/**\n * Error constructor of an API-error\n * @param {object} error API error, always containing {type: <string>}\n */\nconst NexmoApiError = function(error) {\n\n\tdecorateError(this, error);\n\t// make sure the error.name matches the class name\n\tthis.name = 'NexmoApiError';\n}\n\nNexmoApiError.prototype = Object.create(NexmoApiError.prototype);\nNexmoApiError.prototype.constructor = NexmoApiError;\n\n\nmodule.exports = {\n\tNexmoClientError: NexmoClientError,\n\tNexmoApiError: NexmoApiError\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/*\n * Nexmo Stitch SDK\n *  Conversation Object Model\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nconst WildEmitter = require('wildemitter');\nconst logger = require('loglevel');\n\nconst Member = require('./member');\nconst Event = require('./events/event');\nconst TextEvent = require('./events/text_event');\nconst ImageEvent = require('./events/image_event');\nconst Media = require('./modules/media');\n\nconst ConversationEventHandler = require('./handlers/conversation_events');\nconst ConversationClientError = require('./conversationClientError');\nconst Utils = require('./utils');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * A single conversation Object.\n * @class Conversation\n * @property {Member} me - my Member object that belongs to this conversation\n * @property {Application} application - the parent Application\n * @property {string} name - the name of the Conversation (unique)\n * @property {string} [display_name] - the display_name of the Conversation\n * @property {object} [members] - the members of the Conversation\n * @property {Map<number,Member>} [events] - values (event.id, Member), the events of the Conversation\n * @property {number} [sequence_number] - the last event id\n */\nclass Conversation {\n\tconstructor(application, params) {\n\t\tthis.log = logger.getLogger(this.constructor.name);\n\t\tthis.application = application;\n\t\tthis.id = null;\n\t\tthis.name = null;\n\t\tthis.display_name = null;\n\t\tthis.timestamp = null;\n\t\tthis.members = {};\n\t\tthis.events = new Map();\n\t\tthis.sequence_number = 0;\n\t\tthis.is_video_conversation = false;\n\n\t\tthis.conversationEventHandler = new ConversationEventHandler(application, this);\n\n\t\tthis.media = new Media(this);\n        /**\n         * A Member Object representing the current user.\n         * Only set if the user is or has been a member of the Conversation,\n         * otherwise the value will be `null`.\n         * @type Member\n         */\n\t\tthis.me = null; // We are not in the conversation ourselves by default\n\t\t// Map the params (which includes the id)\n\t\tthis._updateObjectInstance(params);\n\t\tWildEmitter.mixin(Conversation);\n\t}\n\t/** Update Conversation object params\n\t * @property {object} params the params to update\n\t * @private\n\t */\n\t_updateObjectInstance(params) {\n\t\tfor (let key in params) {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'id':\n\t\t\t\t\tthis.id = params.id;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'name':\n\t\t\t\t\tthis.name = params.name;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'display_name':\n\t\t\t\t\tthis.display_name = params.display_name;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'members':\n\t\t\t\t\t//update the conversation javascript object\n\n\t\t\t\t\t//CASE 1 conversations:get:success,\n\t\t\t\t\t//PATCH this responds with member[0].user_id and name\n\n\t\t\t\t\t// Iterate the list\n\t\t\t\t\tparams.members.map((m) => {\n\t\t\t\t\t\tif (this.members[m.member_id]) {\n\t\t\t\t\t\t\tthis.members[m.member_id]._normalise(m);\n\t\t\t\t\t\t\tif (m.user_id === this.application.me.id && m.state !== \"LEFT\") {\n\t\t\t\t\t\t\t\tthis.me = this.members[m.member_id];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst member = new Member(this, m);\n\t\t\t\t\t\t\tif (m.user_id === this.application.me.id && m.state !== \"LEFT\") {\n\t\t\t\t\t\t\t\tthis.me = member;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.members[member.id] = member;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'timestamp':\n\t\t\t\t\tthis.timestamp = params.timestamp;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sequence_number':\n\t\t\t\t\tthis.sequence_number = params.sequence_number;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'member_id':\n\t\t\t\t\t// filter needed params to create the object\n\t\t\t\t\t// the conversation list gives us the member_id to prepare the member/this object\n\t\t\t\t\tconst object_params = {\n\t\t\t\t\t\tid: params.member_id,\n\t\t\t\t\t\tstate: params.state,\n\t\t\t\t\t\tuser: this.application.me\n\t\t\t\t\t};\n\n\t\t\t\t\t// update the member object or create a new instance\n\t\t\t\t\tlet member_object = this.members[params.member_id];\n\t\t\t\t\tif (member_object) {\n\t\t\t\t\t\tObject.assign(member_object, object_params);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst member = new Member(this, object_params);\n\t\t\t\t\t\tthis.me = member;\n\t\t\t\t\t\tthis.members[member.id] = member;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'properties':\n\t\t\t\t\tthis.is_video_conversation = params.properties.video;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n    /**\n     * Join the given user to this conversation, will typically use this to join\n     * ourselves to a conversation we create.\n     * Accept an invitation if our member has state INVITED and no user_id / user_name is given\n     *\n     * @param {object} [params = this.application.me.id] The user to join (defaults to this)\n     * @param {string} params.user_name the user_name of the user to join\n     * @param {string} params.user_id the user_id of the user to join\n     * @return {Promise<Member>}\n     *\n     * @example <caption>join a user to a conversation</caption>\n     *\n     *        conversation.join().then((member) => {\n\t * \t\t\t\tconsole.log(\"joined as member: \", member)\n\t * \t\t})\n\t */\n\tjoin(params) {\n\t\tconst request_body = {};\n\t\tconst _createDefaultValues = (params) => {\n\t\t\tif (params) {\n\t\t\t\tif (params.user_id) {\n\t\t\t\t\trequest_body.user_id = params.user_id;\n\t\t\t\t}\n\t\t\t\tif (params.user_name) {\n\t\t\t\t\trequest_body.user_name = params.user_name;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.me && this.me.id && this.me.state === 'INVITED') {\n\t\t\t\t\trequest_body.member_id = this.me.id;\n\t\t\t\t}\n\t\t\t\trequest_body.user_name = this.application.me.name;\n\t\t\t\trequest_body.user_id = this.application.me.id;\n\t\t\t}\n\t\t\treturn request_body;\n\t\t};\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst request_body = _createDefaultValues(params);\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'conversation:join',\n\t\t\t\tcid: this.id,\n\t\t\t\tbody: request_body\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'conversation:join:success') {\n\t\t\t\t\t// Create a new member object, response.body will contain all the parameters from the service\n\t\t\t\t\tconst member = new Member(this, response.body);\n\t\t\t\t\tif (response.body.user_id === this.application.me.id) {\n\t\t\t\t\t\tthis.me = member;\n\t\t\t\t\t}\n\t\t\t\t\tthis.members[member.id] = member;\n\t\t\t\t\t// We added this part because of a use case where between the time we got the conversation and the time we finished joining\n\t\t\t\t\t// the conversation object changed. We didn't find a \"clean\" solution for this right now so we get the conversation again\n\t\t\t\t\t// so we know for sure it's state is up to date\n\t\t\t\t\t// TODO: Find a more correct way to make sure the conversation is up to date(probably with changes in cs in order to get another solution)\n\t\t\t\t\treturn this.application.getConversation(this.id)\n\t\t\t\t\t\t.then(() => resolve(member))\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.log.warn('Failed getting conversation after joining');\n\t\t\t\t\t\t\treturn resolve(member);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n    /**\n     * Delete a conversation\n     *\n     * @return {Promise}\n     *\n     * @example <caption>delete the conversation</caption>\n     *\n     *        conversation.del().then(() => {\n\t * \t\t\t\tconsole.log(\"conversation deleted\");\n\t * \t\t})\n     */\n\tdel() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'conversation:delete',\n\t\t\t\tcid: this.id\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'conversation:delete:success') {\n\t\t\t\t\tdelete this.application.conversations[this.id];\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete an Event (e.g. Text)\n\t * @param {Event} event\n\t * @returns {Promise}\n\t *\n\t */\n\tdeleteEvent(event) {\n\t\treturn event.del();\n\t}\n\n    /**\n     * Invite the given user (id or name) to this conversation\n     * @param {Member} params\n     * @param {string} [params.id or username] - the id or the username of the user to invite\n     *\n     * @returns {Promise<Member>}\n     *\n     * @example <caption>invite a user to a conversation</caption>\n     *  const user_id = 'user to invite';\n     *  const user_name = 'username to invite';\n     *\n     *  conversation.invite({\n\t *          id: user_id,\n\t *          user_name: user_name\n\t *      })\n     *        .then((member) => {\n\t *            displayMessage(member.state + \" user: \" + user_id + \" \" + user_name);\n\t *       }).catch((error) => {\n\t *          console.log(error);\n\t *  });\n     *\n     */\n\tinvite(params) {\n\t\tif (!params || (!params.id && !params.user_name)) {\n\t\t\treturn Promise.reject(new NexmoClientError('error:invite:missing:params'));\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'conversation:invite',\n\t\t\t\tcid: this.id,\n\t\t\t\tbody: {\n\t\t\t\t\tuser_id: params.id,\n\t\t\t\t\tuser_name: params.user_name,\n\t\t\t\t\tmember_id_inviting: this.me.id,\n\t\t\t\t\tmedia: params.media\n\t\t\t\t}\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'conversation:invite:success') {\n\t\t\t\t\t// Create a new member object, response.body will contain all the parameters from the service\n\t\t\t\t\tconst member = new Member(this, response.body);\n\t\t\t\t\tthis.members[member.id] = member;\n\t\t\t\t\tresolve(member);\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n    /**\n     * Invite the given user (id or name) to this conversation with media audio\n     * @param {Member} params\n     * @param {string} [params.id or username] - the id or the username of the user to invite\n     *\n     * @returns {Promise<Member>}\n     *\n     * @example <caption>invite a user to a conversation</caption>\n     *  const user_id = 'user to invite';\n     *  const user_name = 'username to invite';\n     *\n     *  conversation.inviteWithAudio({\n\t *          id: user_id,\n\t *          user_name: user_name\n\t *      })\n     *        .then((member) => {\n\t *            displayMessage(member.state + \" user: \" + user_id + \" \" + user_name);\n\t *       }).catch((error) => {\n\t *          console.log(error);\n\t *  });\n\t *\n\t */\n\tinviteWithAudio(params) {\n\t\tif (!params || (!params.id && !params.user_name)) {\n\t\t\treturn Promise.reject(new NexmoClientError('error:invite:missing:params'));\n\t\t}\n\t\tparams.media = {\n\t\t\taudio: {\n\t\t\t\tmuted: false,\n\t\t\t\tearmuffed: false\n\t\t\t}\n\t\t};\n\n\t\treturn this.invite(params);\n\t}\n\n\t/**\n\t * Leave from the conversation\n\t * @returns {Promise}\n\t */\n\tleave() {\n\t\treturn this.me.kick();\n\t}\n\n    /**\n     * Send a text message to the conversation, which will be relayed to every other member of the conversation\n     * @param {string} - text the text message to be sent\n     *\n     * @returns {Promise<TextEvent>} - the text message that was sent\n     *\n     * @example <caption> sending a text </caption>\n     *    conversation.sendText(\"Hi Nexmo\").then(() => {\n\t *\t\t\tconsole.log('message was sent');\n\t *\t\t}).catch((error)=>{\n\t *\t\t\tconsole.log('error sending the message', error);\n\t *\t});\n     *\n     */\n\tsendText(text) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.me === null) {\n\t\t\t\treject(new NexmoClientError('error:self'));\n\t\t\t} else {\n\t\t\t\tconst msg = {\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tcid: this.id,\n\t\t\t\t\tfrom: this.me.id,\n\t\t\t\t\tbody: {\n\t\t\t\t\t\ttext: text\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.application.session.sendRequest(msg, (response) => {\n\t\t\t\t\tif (response.type === 'text:success') {\n\t\t\t\t\t\tmsg.id = response.body.id;\n\t\t\t\t\t\tmsg.body.timestamp = response.body.timestamp;\n\t\t\t\t\t\tconst text_event = new TextEvent(this, msg);\n\t\t\t\t\t\tresolve(text_event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n    /**\n     * Send an Image message to the conversation, which will be relayed to every other member of the conversation.\n     * implements xhr (https://xhr.spec.whatwg.org/) - this.imageRequest\n     *\n     * @param {File} file single input file (jpeg/jpg)\n     * @param {string} [params.quality_ratio = 100] a value between 0 and 100. 0 indicates 'maximum compression' and the lowest quality, 100 will result in the highest quality image\n     * @param {string} [params.medium_size_ratio = 50] a value between 1 and 100. 1 indicates the new image is 1% of original, 100 - same size as original\n     * @param {string} [params.thumbnail_size_ratio = 10] a value between 1 and 100. 1 indicates the new image is 1% of original, 100 - same size as original\n     *\n     * @returns {Promise<XMLHttpRequest>}\n     *\n     * @example <caption>sending an image</caption>\n     * conversation.sendImage(fileInput.files[0]).then((imageRequest) => {\n\t *\n\t *         imageRequest.onabort = (e) => {\n\t *            console.log(e);\n\t *          console.log(\"Image:\" + e.type);\n\t *      };\n\t *          imageRequest.onloadend = (e) => {\n\t *          console.log(\"Image:\" + e.type);\n\t *      };\n\t * });\n\t */\n\tsendImage(fileInput, params = {\n\t\tquality_ratio: 100,\n\t\tmedium_size_ratio: 50,\n\t\tthumbnail_size_ratio: 30\n\t}) {\n\n\t\tconst formData = new FormData();\n\t\tformData.append(\"file\", fileInput);\n\t\tformData.append(\"quality_ratio\", params.quality_ratio);\n\t\tformData.append(\"medium_size_ratio\", params.medium_size_ratio);\n\t\tformData.append(\"thumbnail_size_ratio\", params.thumbnail_size_ratio);\n\n\t\tconst IPS_url = this.application.session.config.ips_url;\n\t\treturn Utils.networkSend(IPS_url, formData)\n\t\t\t.then((imageRequest) => {\n\t\t\t\timageRequest.upload.addEventListener(\"progress\", (evt) => {\n\t\t\t\t\tif (evt.lengthComputable) {\n\t\t\t\t\t\tthis.log.debug(\"uploading image \" + evt.loaded + \"/\" + evt.total);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\timageRequest.onreadystatechange = () => {\n\t\t\t\t\tif (imageRequest.readyState === 4 && imageRequest.status === 200) {\n\t\t\t\t\t\tconst msg = {\n\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\tcid: this.id,\n\t\t\t\t\t\t\tfrom: this.me.id,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\trepresentations: JSON.parse(imageRequest.responseText)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.application.session.sendRequest(msg, (response) => {\n\t\t\t\t\t\t\tif (response.type !== 'image:success') {\n\t\t\t\t\t\t\t\tthis.log.debug(new NexmoApiError(response));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.log.info(imageRequest);\n\t\t\t\t\t}\n\t\t\t\t\tif (imageRequest.status !== 200) {\n\t\t\t\t\t\tthis.log.error(imageRequest);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn Promise.resolve(imageRequest);\n\t\t\t});\n\t}\n\n\t/**\n\t * Cancel sending an Image message to the conversation.\n\t *\n\t * @param {XMLHttpRequest} imageRequest\n\t *\n\t * @returns void\n\t *\n\t * @example <caption>cancel sending an image</caption>\n\t * conversation.sendImage(fileInput.files[0]).then((imageRequest) => {\n\t *    conversation.abortSendImage(imageRequest);\n\t * });\n\t */\n\tabortSendImage(imageRequest) {\n\t\tif (imageRequest instanceof XMLHttpRequest) {\n\t\t\treturn imageRequest.abort();\n\t\t} else {\n\t\t\treturn new NexmoClientError('error:invalid:param:type');\n\t\t}\n\t}\n\n\t_typing(state) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst params = {\n\t\t\t\tactivity: (state === 'on') ? 1 : 0\n\t\t\t};\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'text:typing:' + state,\n\t\t\t\tcid: this.id,\n\t\t\t\tfrom: this.me.id,\n\t\t\t\tbody: params\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'text:typing:' + state + ':success') {\n\t\t\t\t\tresolve(response.type);\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n    /**\n     * Send start typing indication\n     *\n     * @returns {Promise} - resolves the promise on successful sent\n     */\n\tstartTyping() {\n\t\treturn this._typing('on');\n\t}\n\n    /**\n     * Send stop typing indication\n     *\n     * @returns {Promise} - resolves the promise on successful sent\n     */\n\tstopTyping() {\n\t\treturn this._typing('off');\n\t}\n\n\t/**\n\t * Query the service to get a list of events in this conversation.\n\t *\n\t * @param {object} [params] - leave empty to get all the events\n\t * @param {string} params.start_id - the id of the event to begin the batch\n\t * @param {string} params.end_id - the id of the event to finish the batch\n\t *\n\t * @returns {Promise<Array<Event>>} - A promise to the Events list\n\t */\n\tgetEvents(params) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'conversation:events',\n\t\t\t\tcid: this.id,\n\t\t\t\tbody: params\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'conversation:events:success') {\n\t\t\t\t\t// Iterate and create the events\n\t\t\t\t\tconst events_map = new Map();\n\t\t\t\t\tfor (let key in response.body) {\n\t\t\t\t\t\tif (response.body.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tconst event = response.body[key];\n\t\t\t\t\t\t\tswitch (event.type) {\n\t\t\t\t\t\t\t\t// Event types with corresponding classes\n\t\t\t\t\t\t\t\tcase 'text':\n\t\t\t\t\t\t\t\t\tevents_map.set(event.id, new TextEvent(this, event));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'image':\n\t\t\t\t\t\t\t\t\tevents_map.set(event.id, new ImageEvent(this, event));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t// Events we want to be persisted, CS is sending more.\n\t\t\t\t\t\t\t\t\tif (['member:joined', 'member:left', 'member:invited', 'member:media', 'audio:dtmf',\n\t\t\t\t\t\t\t\t\t\t'audio:record', 'audio:record:done', 'audio:ringing:stop', 'say:text',\n\t\t\t\t\t\t\t\t\t\t'audio:ringing:start'].includes(event.type)) {\n\t\t\t\t\t\t\t\t\t\tevents_map.set(event.id, new Event(this, event));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//update the events Map\n\t\t\t\t\tthis.events = new Map([...this.events, ...events_map]);\n\t\t\t\t\tresolve(this.events);\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Handle and event from the cloud.\n\t * using conversationEventHandler\n\t * @param {object} event\n\t * @private\n\t */\n\t_handleEvent(event) {\n\t\tif (event.type.startsWith('rtc')) {\n\t\t\t// keep the rtc events going to the application layer, we use them in media module\n\t\t\tthis.emit(event.type, event);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sequence_number++;\n\n\t\tif (event.from && !this.members[event.from]) { //TODO - remove when CSJ-695\n\t\t\tthis.members[event.from] = new Member(this, event);\n\t\t}\n\t\t//make sure the event_id is not a string\n\t\tif (event.body && event.body.event_id && typeof event.body.event_id === \"string\") {\n\t\t\tevent.body.event_id = parseInt(event.body.event_id);\n\t\t}\n\n\t\tconst from = this.members[event.from];\n\n\t\tlet constructed_event = this.conversationEventHandler.handleEvent(event);\n\n\t\t// Unless they are typing events, add the event to the conversation.events map\n\t\tif (![\"text:typing:on\", \"text:typing:off\"].includes(event.type)) {\n\t\t\tthis.events.set(constructed_event.id, constructed_event);\n\t\t}\n\t\tthis.emit(event.type, from, constructed_event);\n\n\t}\n\n}\nmodule.exports = Conversation;\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","/*\n * Nexmo Stitch SDK\n *  Caching Service worker\n *\n * Copyright (c) Nexmo Inc. 2018\n *\n * Service worker\n * becomes Blob object and is loaded through the createObjectURL\n */\n\nmodule.exports = class Cache_worker {\n\tconstructor() {\n\t\tconst worker = {\n\t\t\tget function() {\n\t\t\t\treturn () => {\n\t\t\t\t\tconst IDBTransaction = self.IDBTransaction || self.webkitIDBTransaction;\n\t\t\t\t\tif (IDBTransaction) {\n\t\t\t\t\t\tIDBTransaction.READ_WRITE = IDBTransaction.READ_WRITE || 'readwrite';\n\t\t\t\t\t\tIDBTransaction.READ_ONLY = IDBTransaction.READ_ONLY || 'readonly';\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Create or open the database\n\t\t\t\t\t */\n\t\t\t\t\tlet request = indexedDB.open('ConversationClient', 2);\n\t\t\t\t\tlet dbReady = false;\n\t\t\t\t\tlet pendingMessages = [];\n\n\t\t\t\t\trequest.onupgradeneeded = (e) => {\n\t\t\t\t\t\t// e is an instance of IDBVersionChangeEvent\n\t\t\t\t\t\tconst idb = e.target.result;\n\n\t\t\t\t\t\t// Conversations store\n\t\t\t\t\t\tif (idb.objectStoreNames.contains('conversations')) {\n\t\t\t\t\t\t\tidb.deleteObjectStore('conversations');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tidb.createObjectStore('conversations', {\n\t\t\t\t\t\t\tkeyPath: 'cid'\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Conversation event store\n\t\t\t\t\t\tif (idb.objectStoreNames.contains('events')) {\n\t\t\t\t\t\t\tidb.deleteObjectStore('events');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidb.createObjectStore('events', {\n\t\t\t\t\t\t\tkeyPath: 'cid'\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\trequest.onsuccess = () => { /* add, update, delete, ... */\n\t\t\t\t\t\tdbReady = true;\n\t\t\t\t\t\tpendingMessages.forEach((e) => {\n\t\t\t\t\t\t\tonmessage(e);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\tworker_action: 'db:initialised'\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\trequest.onblocked = () => {\n\t\t\t\t\t\t// console.log('DB open blocked', e);\n\t\t\t\t\t};\n\t\t\t\t\trequest.onerror = () => { /* handle error */\n\t\t\t\t\t\t// console.log(e, 'error in DB', e);\n\t\t\t\t\t};\n\t\t\t\t\trequest.onabort = () => { /* handle error */\n\t\t\t\t\t\t// console.log(e, 'transaction will automatically abort due the failed request', e);\n\t\t\t\t\t};\n\t\t\t\t\trequest.oncomplete = () => {\n\t\t\t\t\t\t// All requests have succeeded and the transaction has committed.\n\t\t\t\t\t\t// console.log('oncomplete', e);\n\t\t\t\t\t};\n\t\t\t\t\t/* Worker events */\n\t\t\t\t\tonmessageerror = (error) => {\n\t\t\t\t\t\t// console.log('on message error invoked', error);\n\t\t\t\t\t};\n\t\t\t\t\tonmessage = (e) => {\n\t\t\t\t\t\tlet tx = null;\n\t\t\t\t\t\tlet conversationStore = null;\n\t\t\t\t\t\tlet eventStore = null;\n\n\t\t\t\t\t\tif (!dbReady) {\n\t\t\t\t\t\t\t// console.log('adding pending request');\n\t\t\t\t\t\t\tpendingMessages.push(e);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log('processing event: ', e.data);\n\n\t\t\t\t\t\tif (request) {\n\t\t\t\t\t\t\t// console.log('ww: ', e.data.worker_action);\n\t\t\t\t\t\t\tconst _actionHandlerMap = {\n\t\t\t\t\t\t\t\t'conversations:invalidate': () => {\n\t\t\t\t\t\t\t\t\t/* Delete iDB and shut down the service worker */\n\t\t\t\t\t\t\t\t\t/* expects - */\n\t\t\t\t\t\t\t\t\trequest = indexedDB.deleteDatabase('ConversationClient');\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\t\t\t\tworker_action: 'conversations:invalidate:success'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'conversations:storage:add': () => {\n\t\t\t\t\t\t\t\t\t/* Add a conversation in the database, respond with the conversations' count */\n\t\t\t\t\t\t\t\t\t/* expects - cid: body.id, conversation:(raw) */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('conversations', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\tconversationStore = tx.objectStore('conversations');\n\t\t\t\t\t\t\t\t\tconversationStore.put({\n\t\t\t\t\t\t\t\t\t\tcid: e.data.body.id,\n\t\t\t\t\t\t\t\t\t\tconversation: e.data\n\t\t\t\t\t\t\t\t\t}).onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\tvar countRequest = conversationStore.count();\n\t\t\t\t\t\t\t\t\t\tcountRequest.onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\t\t\t\t\t\tworker_action: 'conversations:idb:count',\n\t\t\t\t\t\t\t\t\t\t\t\tconversations_idb_count: countRequest.result\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'conversation:storage:delete': () => {\n\t\t\t\t\t\t\t\t\t/* Delete the events of a conversation and then the conversation */\n\t\t\t\t\t\t\t\t\t/* expects - cid */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('events', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\teventStore = tx.objectStore('events');\n\t\t\t\t\t\t\t\t\teventStore.delete(e.data.cid).onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\ttx = request.result.transaction('conversations', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\t\tconversationStore = tx.objectStore('conversations');\n\t\t\t\t\t\t\t\t\t\tconversationStore.delete(e.data.cid).onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\t\t// console.log('events deleted');\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'events:storage:update': () => {\n\t\t\t\t\t\t\t\t\t/* Update all the event list */\n\t\t\t\t\t\t\t\t\t/* expects - cid:cid, events:(raw) */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('events', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\teventStore = tx.objectStore('events');\n\t\t\t\t\t\t\t\t\tvar putCommand = eventStore.put({\n\t\t\t\t\t\t\t\t\t\tcid: e.data.cid,\n\t\t\t\t\t\t\t\t\t\tevents: e.data\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tputCommand.onsuccess = (event) => {\n\t\t\t\t\t\t\t\t\t\t// console.log('ww: events updated', event);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tputCommand.onerror = (event) => {\n\t\t\t\t\t\t\t\t\t\t// console.log(\"ww events: error: \" + event);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'events:storage:delete': () => {\n\t\t\t\t\t\t\t\t\t/* Delete the events of a conversation */\n\t\t\t\t\t\t\t\t\t/* expects - cid:cid  */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('events', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\teventStore = tx.objectStore('events');\n\t\t\t\t\t\t\t\t\teventStore.delete(e.data.cid).onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\t// console.log('events deleted');\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'events:storage:add': () => {\n\t\t\t\t\t\t\t\t\t/* Find the conversation and add the events */\n\t\t\t\t\t\t\t\t\t/* expects - cid:cid, events:(raw) */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('events', IDBTransaction.READ_WRITE);\n\t\t\t\t\t\t\t\t\teventStore = tx.objectStore('events');\n\t\t\t\t\t\t\t\t\teventStore.get(e.data.cid).onsuccess = (event) => {\n\t\t\t\t\t\t\t\t\t\tif (!event.target.result || !event.target.result.events.body) return;\n\t\t\t\t\t\t\t\t\t\tevent.target.result.events.body.push(e.data);\n\t\t\t\t\t\t\t\t\t\teventStore.put(event.target.result).onsuccess = () => {\n\t\t\t\t\t\t\t\t\t\t\t// console.log('event list is successfully updated');\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'events:storage:get': () => {\n\t\t\t\t\t\t\t\t\t/* Get the events of a conversation */\n\t\t\t\t\t\t\t\t\t/* expects - cid:cid */\n\t\t\t\t\t\t\t\t\ttx = request.result.transaction('events', IDBTransaction.READ_ONLY);\n\t\t\t\t\t\t\t\t\teventStore = tx.objectStore('events');\n\t\t\t\t\t\t\t\t\teventStore.get(e.data.cid).onsuccess = (event) => {\n\t\t\t\t\t\t\t\t\t\tif (!event.target.result) return;\n\t\t\t\t\t\t\t\t\t\tevent.target.result.worker_action = e.data.worker_action;\n\t\t\t\t\t\t\t\t\t\tself.postMessage(event.target.result);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (_actionHandlerMap.hasOwnProperty(e.data.worker_action)) {\n\t\t\t\t\t\t\t\treturn _actionHandlerMap[e.data.worker_action].call(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * If the Blob type is supported, create the Blob object containing the main SW function\n\t\t * The function is being processed as string and then passed to Blob constructor\n\t\t * Then the Blob boject can be used to initialise a service worker\n\t\t */\n\t\tif (typeof Blob !== 'undefined') {\n\t\t\tlet code = worker.function.toString();\n\t\t\tcode = code.substring(code.indexOf('{') + 1, code.lastIndexOf('}'));\n\t\t\tthis.cache_worker_blob = new Blob([code], {\n\t\t\t\ttype: 'application/javascript'\n\t\t\t});\n\t\t}\n\t}\n}\n","function detect() {\n  if (typeof navigator !== 'undefined') {\n    return parseUserAgent(navigator.userAgent);\n  }\n\n  return getNodeVersion();\n}\n\nfunction detectOS(userAgentString) {\n  var rules = getOperatingSystemRules();\n  var detected = rules.filter(function (os) {\n    return os.rule && os.rule.test(userAgentString);\n  })[0];\n\n  return detected ? detected.name : null;\n}\n\nfunction getNodeVersion() {\n  var isNode = typeof process !== 'undefined' && process.version;\n  return isNode && {\n    name: 'node',\n    version: process.version.slice(1),\n    os: process.platform\n  };\n}\n\nfunction parseUserAgent(userAgentString) {\n  var browsers = getBrowserRules();\n  if (!userAgentString) {\n    return null;\n  }\n\n  var detected = browsers.map(function(browser) {\n    var match = browser.rule.exec(userAgentString);\n    var version = match && match[1].split(/[._]/).slice(0,3);\n\n    if (version && version.length < 3) {\n      version = version.concat(version.length == 1 ? [0, 0] : [0]);\n    }\n\n    return match && {\n      name: browser.name,\n      version: version.join('.')\n    };\n  }).filter(Boolean)[0] || null;\n\n  if (detected) {\n    detected.os = detectOS(userAgentString);\n  }\n\n  if (/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/i.test(userAgentString)) {\n    detected = detected || {};\n    detected.bot = true;\n  }\n\n  return detected;\n}\n\nfunction getBrowserRules() {\n  return buildRules([\n    [ 'aol', /AOLShield\\/([0-9\\._]+)/ ],\n    [ 'edge', /Edge\\/([0-9\\._]+)/ ],\n    [ 'yandexbrowser', /YaBrowser\\/([0-9\\._]+)/ ],\n    [ 'vivaldi', /Vivaldi\\/([0-9\\.]+)/ ],\n    [ 'kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/ ],\n    [ 'samsung', /SamsungBrowser\\/([0-9\\.]+)/ ],\n    [ 'chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/ ],\n    [ 'phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/ ],\n    [ 'crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/ ],\n    [ 'firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/ ],\n    [ 'fxios', /FxiOS\\/([0-9\\.]+)/ ],\n    [ 'opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/ ],\n    [ 'opera', /OPR\\/([0-9\\.]+)(:?\\s|$)$/ ],\n    [ 'ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/ ],\n    [ 'ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/ ],\n    [ 'ie', /MSIE\\s(7\\.0)/ ],\n    [ 'bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/ ],\n    [ 'android', /Android\\s([0-9\\.]+)/ ],\n    [ 'ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/ ],\n    [ 'safari', /Version\\/([0-9\\._]+).*Safari/ ],\n    [ 'facebook', /FBAV\\/([0-9\\.]+)/],\n    [ 'instagram', /Instagram\\ ([0-9\\.]+)/],\n    [ 'ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/]\n  ]);\n}\n\nfunction getOperatingSystemRules() {\n  return buildRules([\n    [ 'iOS', /iP(hone|od|ad)/ ],\n    [ 'Android OS', /Android/ ],\n    [ 'BlackBerry OS', /BlackBerry|BB10/ ],\n    [ 'Windows Mobile', /IEMobile/ ],\n    [ 'Amazon OS', /Kindle/ ],\n    [ 'Windows 3.11', /Win16/ ],\n    [ 'Windows 95', /(Windows 95)|(Win95)|(Windows_95)/ ],\n    [ 'Windows 98', /(Windows 98)|(Win98)/ ],\n    [ 'Windows 2000', /(Windows NT 5.0)|(Windows 2000)/ ],\n    [ 'Windows XP', /(Windows NT 5.1)|(Windows XP)/ ],\n    [ 'Windows Server 2003', /(Windows NT 5.2)/ ],\n    [ 'Windows Vista', /(Windows NT 6.0)/ ],\n    [ 'Windows 7', /(Windows NT 6.1)/ ],\n    [ 'Windows 8', /(Windows NT 6.2)/ ],\n    [ 'Windows 8.1', /(Windows NT 6.3)/ ],\n    [ 'Windows 10', /(Windows NT 10.0)/ ],\n    [ 'Windows ME', /Windows ME/ ],\n    [ 'Open BSD', /OpenBSD/ ],\n    [ 'Sun OS', /SunOS/ ],\n    [ 'Linux', /(Linux)|(X11)/ ],\n    [ 'Mac OS', /(Mac_PowerPC)|(Macintosh)/ ],\n    [ 'QNX', /QNX/ ],\n    [ 'BeOS', /BeOS/ ],\n    [ 'OS/2', /OS\\/2/ ],\n    [ 'Search Bot', /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/ ]\n  ]);\n}\n\nfunction buildRules(ruleTuples) {\n  return ruleTuples.map(function(tuple) {\n    return {\n      name: tuple[0],\n      rule: tuple[1]\n    };\n  });\n}\n\nmodule.exports = {\n  detect: detect,\n  detectOS: detectOS,\n  getNodeVersion: getNodeVersion,\n  parseUserAgent: parseUserAgent\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","/*\n * Nexmo Stitch SDK\n *  ImageEvent Object Model\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\nconst logger = require('loglevel');\n\nconst Event = require('./event');\nconst Utils = require('./../utils');\n\nconst ConversationClientError = require('../conversationClientError');\n\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * An image event\n *\n * @class ImageEvent\n * @extends Event\n */\n\nclass ImageEvent extends Event {\n    constructor(conversation, params) {\n        super(conversation, params);\n        this.log = logger.getLogger(this.constructor.name);\n        this.type = \"image\";\n        this.conversation = conversation;\n        this.state = {\n            seen_by: {},\n            delivered_to: {}\n        };\n        if (params && params.body) {\n            if (params.body.timestamp)\n                this.timestamp = params.body.timestamp;\n        }\n        Object.assign(this, params);\n    }\n\n    /**\n     * Set the message status to 'seen'\n     */\n    seen() {\n        return super.seen();\n    }\n\n    /**\n     * Set the message status to 'delivered'\n     */\n    delivered() {\n        return super.delivered();\n    }\n\n    /**\n     * Delete the image event\n     * @returns {Promise}\n     */\n    del() {\n        return super.del();\n    }\n    /**\n     * Download an Image from Media service //3 representations\n     * @param {string} [type=\"thumbnail\"] original, medium, thumbnail,\n     * @param {string} [representations=this.body.representations]  the ImageEvent.body for the image to download\n     * @returns {string} the dataUrl \"data:image/jpeg;base64...\"\n     * @example <caption>Downloading an image from the imageEvent</caption>\n     *                 imageEvent.fetchImage().then((imagedata) => {\n     *                      var img = new Image();\n     *                      img.onload = function () {\n     *                          copyCanvas(img);\n     *                          };\n     *                      img.src = imagedata;\n     *\n     *                      // to cancel the request:\n     *                      // conversation.abortSendImage(imageRequest);\n     *                  });\n     */\n    fetchImage(type = \"thumbnail\", imageDataObject = this.body.representations) {\n        const url = imageDataObject[type].url;\n        return Utils.networkFetch(url)\n            .then((response) => {\n                const responseArray = new Uint8Array(response);\n                // Convert the int array to a binary String\n                // We have to use apply() as we are converting an *array*\n                // and String.fromCharCode() takes one or more single values, not\n                // an array.\n                //support large image files (Chunking)\n                let res = \"\";\n                const chunk = 8 * 1024;\n                let i;\n                for (i = 0; i < responseArray.length / chunk; i++) {\n                    res += String.fromCharCode.apply(null, responseArray.subarray(i * chunk, (i + 1) * chunk));\n                }\n                res += String.fromCharCode.apply(null, responseArray.subarray(i * chunk));\n                const b64 = btoa(res);\n                const dataUrl = \"data:image/jpeg;base64,\" + b64;\n                return Promise.resolve(dataUrl);\n            }).catch((error) => {\n                this.log.warn(error);\n                return Promise.reject(new NexmoClientError(\"error:fetch-image\"));\n            });\n    }\n}\nmodule.exports = ImageEvent;\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/*\n * Nexmo Stitch SDK\n *  Application Object Model\n *\n * Copyright (c) Nexmo Inc. 2015-2018\n */\n\nconst WildEmitter = require('wildemitter');\nconst logger = require('loglevel');\n\nconst User = require('./user')\nconst Conversation = require('./conversation');\nconst Call = require('./modules/call');\nconst SipEventHandler = require('./handlers/sip_events');\nconst ApplicationEventsHandler = require('./handlers/application_events');\n\nconst ConversationClientError = require('./conversationClientError');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\nlet sipEventHandler = null;\nlet applicationEventsHandler = null;\n\n/**\n * Core application class for the SDK.\n * Application is the parent object holding the list of conversations, the session object.\n * Provides methods to create conversations and retrieve a list of the user's conversations, while it holds the listeners for\n * user's invitations\n * @class Application\n * @param {ConversationClient} SDK session Object\n * @param {object} params\n * @example <caption>Accessing the list of conversations</caption>\n *   rtc.login(token).then((application) => {\n      console.log(application.conversations);\n      console.log(application.me.name, application.me.id);\n  });\n  * @emits Application#member:invited\n  * @emits Application#member:joined\n  * @emits Application#Stitch-errors\n  */\nclass Application {\n\tconstructor(session, params) {\n\t\tthis.log = logger.getLogger(this.constructor.name);\n\t\tthis.session = session;\n\t\tthis.conversations = {};\n\t\tthis.synced_conversations_count = 0;\n\t\tthis.start_sync_time = 0;\n\t\tthis.stop_sync_time = 0;\n\t\t/* conversation_id, call */\n\t\tthis.calls = new Map();\n\t\t/* knocking_id, call */\n\t\tthis._call_draft_list = new Map();\n\n\t\tsipEventHandler = new SipEventHandler(this);\n\t\tapplicationEventsHandler = new ApplicationEventsHandler(this);\n\n\t\tthis.me = null;\n\t\tObject.assign(this, params);\n\t\tWildEmitter.mixin(Application);\n\t}\n\n\t/**\n\t * Update Conversation instance or create a new one.\n\t *\n\t * Pre-created conversation exist from getConversations\n\t * like initialised templates. When we explicitly ask to\n\t * getConversation(), we receive members and other details\n\t *\n\t * @param {object} payload Conversation payload\n\t * @private\n\t */\n\tupdateOrCreateConversation(payload) {\n\t\tconst conversation = this.conversations[payload.id];\n\t\tif (conversation) {\n\t\t\tconversation._updateObjectInstance(payload);\n\t\t\tthis.conversations[payload.id] = conversation;\n\t\t} else {\n\t\t\tthis.conversations[payload.id] = new Conversation(this, payload);\n\t\t}\n\t\treturn this.conversations[payload.id];\n\t}\n\t/**\n\t * Application listening for invites.\n\t *\n\t * @event Application#member:invited\n\t *\n\t * @property {Member} member - The invited member\n\t * @property {Event} event - The invitation event\n\t *\n\t * @example <caption>listen for your invites</caption>\n\t * application.on(\"member:invited\",(member, event) => {\n\t *      console.log(\"Invited to the conversation: \" + event.conversation.display_name || event.conversation.name);\n\t *\n\t * //identify the sender.\n\t * console.log(\"Invited by: \" + member.invited_by);\n\t *\n\t * //accept an invitation.\n\t *  application.conversations[event.conversation.id].join();\n\t *\n\t * //decline the invitation.\n\t application.conversations[event.conversation.id].leave();\n\t */\n\t/**\n\t * Application listening for joins.\n\t *\n\t * @event Application#member:joined\n\t *\n\t * @property {Member} member - the member that joined the conversation\n\t * @property {Event} event - the join event\n\t *\n\t * @example <caption>listen join events in Application level</caption>\n\t *  application.on(\"member:joined\",(member, event) => {\n\t *              console.log(\"JOINED\", \"Joined conversation: \" + event.conversation.display_name || event.conversation.name);\n\t *              });\n\t *      });\n\t */\n\n\t/**\n\t * Entry point for events in Application level\n\t * @private\n\t */\n\t_handleEvent(event) {\n\t\tconst isEventFromMe = event.body && event.body.user && event.body.user.user_id === this.me.id;\n\n\t\tif (event.type.startsWith('sip')) {\n\t\t\tsipEventHandler._handleSipCallEvent(event);\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.cid in this.conversations) {\n\t\t\tthis.conversations[event.cid]._handleEvent(event);\n\t\t\tif ((event.type === 'member:joined' || event.type === 'member:invited')\n\t\t\t\t&& isEventFromMe) {\n\t\t\t\tthis._handleApplicationEvent(event);\n\t\t\t}\n\t\t} else {\n\t\t\t//get the conversation you don't know about (case: joined by another user)\n\t\t\tthis.getConversation(event.cid)\n\t\t\t\t.then((conversation) => {\n\t\t\t\t\tthis.conversations[event.cid] = conversation;\n\t\t\t\t\tconversation._handleEvent(event);\n\t\t\t\t\tthis._handleApplicationEvent(event);\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tthis.log.error(error);\n\t\t\t\t});\n\t\t}\n\t}\n\n    /**\n     * update user's token\n     * @param {string} token - the new token\n     * @returns {Promise}\n     */\n\tupdateToken(token) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.session.sendRequest({\n\t\t\t\ttype: 'session:update-token',\n\t\t\t\tbody: {\n\t\t\t\t\ttoken: token\n\t\t\t\t}\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === \"session:update-token:success\") {\n\t\t\t\t\tif (this.me) {\n\t\t\t\t\t\tthis.session._updateTokenInCache(token, this.me.name);\n\t\t\t\t\t}\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Update the event to map local generated events\n\t * in case we need a more specific event to pass in the application listener\n\t * or f/w the event as it comes\n\t * @private\n\t */\n\t_handleApplicationEvent(event) {\n\t\tconst processed_event = applicationEventsHandler.handleEvent(event);\n\t\tthis.emit(processed_event.type, this.conversations[event.cid].members[processed_event.from], processed_event);\n\t}\n\n\t/**\n\t * Creates a call to specified user/s.\n\t * @classdesc creates a call between the defined users\n\t * @param {string[]} usernames - the user names for those we want to call\n\t * @returns {Call} a Call object with all the call properties\n\t */\n\tcall(usernames) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!usernames || !Array.isArray(usernames) || usernames.length === 0) {\n\t\t\t\treturn reject(new NexmoClientError(\"error:application:call:params\"));\n\t\t\t}\n\t\t\tconst call = new Call(this);\n\t\t\treturn call.createCall(usernames)\n\t\t\t\t.then(() => {\n\t\t\t\t\tcall.direction = call.CALL_DIRECTION.OUTBOUND;\n\t\t\t\t\treturn resolve(call);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Creates a call to phone a number.\n\t * The call object is created under application.calls when the call has started.\n\t * listen for it with application.on(\"call:status:changed\")\n\t *\n\t * You don't need to start the stream, the SDK will play the audio for you\n\t *\n\t * @classdesc creates a call to a phone number\n\t * @param {string} phoneNumber - the number you want to call\n\t * @returns {Promise<Call>}\n\t * @example <caption>Create a call to a phone</caption>\n\t *        application.on(\"call:status:changed\", (call) => {\n\t\t\tif (call.status === call.CALL_STATUS.STARTED) {\n\t\t\t\tconsole.log('the call has started');\n\t *\t\t}\n\t * application.callPhone(phone_number).then(() => {\n\t *                 console.log('Calling phone ' + phone_number);\n\t *      });\n\t */\n\tcallPhone(phoneNumber) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!phoneNumber || (typeof phoneNumber) !== 'string') {\n\t\t\t\treturn reject(new NexmoClientError(\"error:application:callPhone:params\"));\n\t\t\t}\n\t\t\tconst call = new Call(this);\n\t\t\tcall.direction = call.CALL_DIRECTION.OUTBOUND;\n\t\t\treturn call.createPhoneCall(phoneNumber)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tcall.knocking_id = response.body.id;\n\t\t\t\t\tthis._call_draft_list.set(call.knocking_id, call);\n\t\t\t\t\treturn resolve(call);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Query the service to create a new conversation\n\t * The conversation name must be unique per application.\n\t * @param {object} [params] - leave empty to get a GUID as name\n\t * @param {string} params.name - the name of the conversation. A UID will be assigned if this is skipped\n\t * @param {string} params.display_name - the display_name of the conversation.\n\t * @returns {Promise<Conversation>} - the created Conversation\n\t * @example <caption>Create a conversation and join</caption>\n\t * application.newConversation().then((conversation) => {\n\t *\n\t *         //join the created conversation\n\t *         conversation.join().then((member) => {\n\t *             //Get the user's member belonging in this conversation.\n\t *             //You can also access it via conversation.me\n\t *\n\t *                 console.log(\"Joined as \" + member.user.name);\n\t *             });\n\t *\n\t *     }).catch((error) => {\n\t *     console.log(error);\n\t * });\n\t */\n\tnewConversation(params) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.session.sendRequest({\n\t\t\t\ttype: 'new:conversation',\n\t\t\t\tbody: params\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'new:conversation:success') {\n\t\t\t\t\tconst conv = new Conversation(this, response.body);\n\t\t\t\t\tthis.conversations[conv.id] = conv;\n\t\t\t\t\t// do a get conversation to get the whole model as shaped in the service,\n\t\t\t\t\tthis.getConversation(conv.id)\n\t\t\t\t\t\t.then((conversation) => {\n\t\t\t\t\t\t\tresolve(conversation);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Query the service to create a new conversation and join it\n\t * The conversation name must be unique per application.\n\t * @param {object} [params] - leave empty to get a GUID as name\n\t * @param {string} params.name - the name of the conversation. A UID will be assigned if this is skipped\n\t * @param {string} params.display_name - the display_name of the conversation.\n\t * @returns {Promise<Conversation>} - the created Conversation\n\t * @example <caption>Create a conversation and join</caption>\n\t * application.newConversationAndJoin().then((conversation) => {\n\t *         //join the created conversation\n\t *         conversation.join().then((member) => {\n\t *             //Get the user's member belonging in this conversation.\n\t *             //You can also access it via conversation.me\n\t *                 console.log(\"Joined as \" + member.user.name);\n\t *             });\n\t *     }).catch((error) => {\n\t *     console.log(error);\n\t * });\n\t */\n\tnewConversationAndJoin(params) {\n\t\treturn this.newConversation(params).then((conversation) => {\n\t\t\treturn conversation.join().then(() => {\n\t\t\t\treturn conversation;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Query the service to see if this conversation exists with the\n\t * logged in user as a member and retrieve the data object\n\t * Result added (or updated) in this.conversations\n\t *\n\t * @param {string} id - the id of the conversation to fetch\n\t * @returns {Promise<Conversation>} - the requested conversation\n\t */\n\tgetConversation(id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.session.sendRequest({\n\t\t\t\ttype: 'conversation:get',\n\t\t\t\tcid: id,\n\t\t\t\tbody: {}\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'conversation:get:success') {\n\t\t\t\t\tconst conversation_object = this.updateOrCreateConversation(response.body);\n\t\t\t\t\t// Populate the events\n\t\t\t\t\tconversation_object.getEvents()\n\t\t\t\t\t\t.then((events) => {\n\t\t\t\t\t\t\tconversation_object.events = events;\n\t\t\t\t\t\t\tresolve(conversation_object);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Query the service to obtain a complete list of conversations of which the\n\t * logged-in user is a member with a state of `JOINED` or `INVITED`.\n\t *\n\t * @returns {Promise<Object<Conversation>>} - Populate Application.conversations.\n\t */\n\tgetConversations(params) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.session.sendRequest({\n\t\t\t\ttype: 'user:conversations',\n\t\t\t\tbody: params\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'user:conversations:success') {\n\t\t\t\t\t// Iterate and create the conversations if not existent\n\t\t\t\t\tresponse.body.forEach((c) => {\n\t\t\t\t\t\tthis.updateOrCreateConversation(c);\n\t\t\t\t\t});\n\t\t\t\t\tthis.syncConversations(response.body);\n\t\t\t\t\tresolve(this.conversations);\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Application listening sync status.\n\t *\n\t * @event Application#sync:progress\n\t *\n\t * @property {number} status.sync_progress - Percentage of fetched conversations\n\t * @example <caption>listening for changes in the synchronisation progress</caption>\n\t *  application.on(\"sync:progress\",(status) => {\n\t *\t\t\tconsole.log(data.sync_progress);\n\t *       });\n\t *  });\n\t */\n\tsyncConversations(conversations) {\n\t\tconst conversations_length = conversations.length;\n\n\t\tconst d = new Date();\n\t\tthis.start_sync_time = (typeof window !== \"undefined\" && window.performance) ? window.performance.now() : d.getTime();\n\n\t\tconst fetchConversationForStorage = () => {\n\t\t\tthis.synced_conversations_percentage = ((this.synced_conversations_count / conversations_length) * 100).toFixed(2);\n\n\t\t\tconst status_payload = {\n\t\t\t\tsync_progress: this.synced_conversations_percentage\n\t\t\t};\n\t\t\tthis.emit('sync:progress', status_payload);\n\n\t\t\tthis.log.debug('Loading sync progress: ' + this.synced_conversations_count + '/' +\n\t\t\t\tconversations_length + ' - ' + this.synced_conversations_percentage + '%');\n\t\t\tif (this.synced_conversations_percentage >= 100) {\n\t\t\t\tconst d = new Date();\n\t\t\t\tthis.stop_sync_time = (typeof window !== \"undefined\" && window.performance) ? window.performance.now() : d.getTime();\n\t\t\t\tthis.log.info('Loaded conversations in ' + (this.stop_sync_time - this.start_sync_time) + 'ms');\n\t\t\t}\n\t\t\tif (this.synced_conversations_count < conversations_length) {\n\t\t\t\tthis.getConversation(conversations[this.synced_conversations_count].id).then(() => {\n\t\t\t\t\tfetchConversationForStorage();\n\t\t\t\t});\n\t\t\t\tthis.synced_conversations_count++;\n\t\t\t\tthis.sync_progress_buffer++;\n\t\t\t}\n\t\t};\n\t\tfetchConversationForStorage();\n\n\t}\n\n\t/**\n\t * Get Details of a user\n\t * @param {string} [id] - the id of the user to fetch, if skipped, it returns your own user details\n\t * @returns {Promise<User>}\n\t */\n\tgetUser(user_id = this.me.id) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst params = {\n\t\t\t\tuser_id: user_id\n\t\t\t};\n\t\t\tthis.session.sendRequest({\n\t\t\t\ttype: 'user:get',\n\t\t\t\tfrom: this.me.id,\n\t\t\t\tbody: params\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'user:get:success') {\n\t\t\t\t\tresolve(new User(this, response.body));\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = Application;\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n","/*\n * Nexmo Stitch SDK\n *  Utility functions\n *\n * Copyright (c) Nexmo Inc. 2015-2018\n */\nvar uuid = require('uuid');\n\n\n\n/**\n * Utilities class for the SDK.\n *  \n * @class Utils\n */\nclass Utils {\n    /**\n     * Get the Member from the username of a conversation\n     * \n     * @param {string} username the username of the member to get\n     * @param {Conversation} conversation the Conversation to search in\n     * @returns {Member} the requested Member\n     * @static\n     * @private\n     */\n    static getMemberFromNameOrNull(conversation, username) {\n        if (!conversation || !username) return null;\n        for (var member_id in conversation.members) {\n            if (conversation.members[member_id].user.name === username) {\n                return conversation.members[member_id];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Perform a network GET request to the given url with the given data object\n     * \n     * @param {string} url the url to GET\n     * @param {object} [data] the data to send\n     * @returns {Promise<XMLHttpRequest.response>} the XMLHttpRequest.response\n     * @static\n     * @private\n     */\n    static networkFetch(url, data) {\n        return Utils.getToken().then((token) => {\n\n            return new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url);\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                xhr.responseType = 'arraybuffer';\n                xhr.onload = function() {\n                    if (xhr.readyState === 4 && xhr.status === 200) {\n                        resolve(this.response);\n                    }\n                };\n                xhr.onerror = (error) => {\n                    reject(new NexmoClientError(error));\n                }\n                xhr.send(data);\n            });\n        });\n    }\n\n    /**\n     * Perform a network POST request to the given url with the given data object\n     * \n     * @param {string} url the url to POST\n     * @returns {Promise<XMLHttpRequest>} the XMLHttpRequest\n     * @static\n     * @private\n     */\n    static networkSend(url, data) {\n        return Utils.getToken().then((token) => {\n            return new Promise((resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"POST\", url);\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                xhr.onloadstart = () => {\n                    resolve(xhr);\n                };\n                xhr.onerror = (error) => {\n                    reject(new NexmoClientError(error));\n                }\n                xhr.send(data);\n            });\n        });\n    }\n\n    static getToken() {\n        if (!localStorage.getItem(\"NXMO_user_data\")) {\n            return Promise.reject(new NexmoClientError(\"error:user:relogin\"));\n        } else {\n            return Promise.resolve(JSON.parse(localStorage.getItem(\"NXMO_user_data\")).token);\n        }\n    }\n\n    static allocateUUID() {\n        return uuid.v4();\n    }\n}\n\nmodule.exports = Utils;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nmodule.exports = function(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n};\n","/*\n * Nexmo Stitch SDK\n *  Text Event Object Model\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nconst Event = require('./event');\n\n/**\n * A text event\n *\n * @class TextEvent\n * @extends Event\n */\nclass TextEvent extends Event {\n    constructor(conversation, params) {\n        super(conversation, params);\n        this.type = \"text\";\n        this.conversation = conversation;\n        this.state = {\n            seen_by: {},\n            delivered_to: {}\n        };\n        if (params && params.body && params.body.timestamp) {\n            this.timestamp = params.body.timestamp;\n        }\n        Object.assign(this, params);\n    }\n\n    /**\n     * Set the message status to 'seen'\n     * @returns {Promise}\n     */\n    seen() {\n        return super.seen();\n    }\n\n    /**\n     * Set the message status to 'delivered'.\n     * handled by the SDK\n     * @returns {Promise}\n     */\n    delivered() {\n        return super.delivered();\n    }\n\n    /**\n     * Delete the event\n     * @returns {Promise}\n     */\n    del() {\n        return super.del();\n    }\n}\nmodule.exports = TextEvent;\n","/*\n * Nexmo Stitch SDK\n *  Member Object Model\n *\n * Copyright (c) Nexmo Inc. 2015-2018\n */\n\nconst WildEmitter = require('wildemitter');\nconst Event = require('./events/event');\n\n// Conversation Client Error\nconst ConversationClientError = require('./conversationClientError');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * An individual user (i.e. conversation member).\n * @class Member\n * @param {Conversation} conversation\n * @param {object} params\n */\nclass Member {\n    constructor(conversation, params) {\n        this.conversation = conversation;\n        this._normalise(params);\n        WildEmitter.mixin(Member);\n    }\n    /**\n\t * Update object instance and align attribute names\n\t *\n     * Handle params input to keep consistent the member object\n\t * @param {object} params member attributes\n\t * @private\n\t */\n    _normalise(params) {\n        if (params) {\n\n            this.user = this.user || {};\n            this.channel = params.channel || {\n                type: \"app\"\n            };\n\n            for (let key in params) {\n                switch (key) {\n                    case \"member_id\":\n                        this.id = params.member_id;\n                        break;\n                    case \"timestamp\":\n                        this.timestamp = params.timestamp;\n                        break;\n                    case \"state\":\n                        this.state = params.state;\n                        break;\n                    case \"from\":\n                        this.id = params.from; //special case for member events\n                        break;\n                    case \"user_id\":\n                        this.user.id = params.user_id;\n                        break;\n                    case \"name\":\n                        this.user.name = params.name;\n                        break;\n                    case \"user\":\n                        this.user = {\n                            name: params.user.name,\n                            id: params.user.user_id || params.user.id\n                        };\n                        break;\n                    case \"invited_by\":\n                        this.invited_by = params.invited_by;\n                        break;\n                    case \"conversation\":\n                        break;\n                    default:\n                        if (!params.type) //TODO identify when an event payload comes to update a member object.\n                            this[key] = params[key];\n                }\n            }\n\n            // join conversation returns our member with only id,\n            // compare it for now and use the username we have in the application object\n            if (this.conversation.application.me && params.user_id === this.conversation.application.me.id) {\n                this.user.name = this.conversation.application.me.name;\n            }\n            //make sure we don't keep a member.user_id, name in any flow\n            delete this.user_id;\n            delete this.name;\n            delete this.user.user_id;\n        }\n    }\n\n    /**\n     * Play the given stream only to this member within the conversation\n     *\n     * @param {string} [params]\n     *\n     * @returns {Promise<Event>}\n     * @private\n     */\n    playStream(params) {\n        return new Promise((resolve, reject) => {\n            this.conversation.application.session.sendRequest({\n                type: 'audio:play',\n                cid: this.id,\n                to: this.id,\n                body: params\n            }, (response) => {\n                if (response.type === 'audio:play:success') {\n                    resolve(new Event(this.conversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Speak the given text only to this member within the conversation\n     *\n     * @param {string} [params]\n     *\n     * @returns {Promise<Event>}\n     * @private\n     */\n    sayText(params) {\n        return new Promise((resolve, reject) => {\n            this.conversation.application.session.sendRequest({\n                type: 'audio:say',\n                cid: this.id,\n                from: this.conversation.me.id,\n                to: this.id,\n                body: params\n            }, (response) => {\n                if (response.type === 'audio:say:success') {\n                    resolve(new Event(this.conversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Kick this member from the conversation\n     *\n     * @returns {Promise}\n     */\n    kick() {\n        return new Promise((resolve, reject) => {\n            this.conversation.application.session.sendRequest({\n                type: 'conversation:member:delete',\n                cid: this.conversation.id,\n                from: this.conversation.me.id,\n                to: this.id,\n                body: {\n                    \"member_id\": this.id\n                }\n            }, (response) => {\n                if (response.type === 'conversation:member:delete:success') {\n                    resolve(response.body);\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Mute our member\n     *\n     * @param {number} [streamIndex] stream id to set\n     * @param {boolean} [mute] true for mute, false for unmute\n     * @param {boolean} [audio=true] true for audio stream\n     * @param {boolean} [video=false] true for video stream\n     * @example <caption>Mute audio stream</caption>\n     * media.mute(true, true, false)\n     * @example <caption>Mute audio and video streams</caption>\n     * media.mute(true, true, true)\n     * @example <caption>Mute only video</caption>\n     * media.mute(true, false, true)\n     */\n    mute(mute) {\n        return this.conversation.media.mute(mute);\n    }\n\n    /**\n     * Earmuff this member\n     *\n     * @param {boolean} [params]\n     *\n     * @returns {Promise}\n     *\n     */\n    earmuff(earmuff) {\n        return this.conversation.media.earmuff(earmuff)\n    }\n\n    /**\n\t * Handle member object events\n\t *\n     * Handle events that are modifying this member instance\n\t * @param {Event} event invited, joined, left, media events\n\t * @private\n\t */\n    _handleEvent(event) {\n        switch (event.type) {\n            case 'member:invited':\n                this._normalise(event.body); // take care of misaligned objects.\n                this.state = 'INVITED';\n                this.timestamp.invited = event.body.timestamp.invited;\n                break;\n            case 'member:joined':\n                this._normalise(event.body); // take care of misaligned objects.\n                this.state = 'JOINED';\n                this.timestamp.joined = event.body.timestamp.joined;\n                break;\n            case 'member:left':\n                this._normalise(event.body); // take care of misaligned objects.\n                this.state = 'LEFT';\n                this.timestamp.left = event.body.timestamp.left;\n                break;\n            case 'member:media':\n                this.media = event.body;\n                break;\n            default:\n                break;\n        }\n    }\n}\nmodule.exports = Member;\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/*\n * Nexmo Stitch SDK\n *  Main wrapper\n *\n * Copyright (c) Nexmo Inc. 2017\n */\n\nconst WildEmitter = require('wildemitter');\nconst socket_io = require('socket.io-client');\nconst logger = require('loglevel');\nconst prefix = require('loglevel-plugin-prefix');\n\nconst Utils = require('./utils');\nconst RTC_Cache = require('./modules/rtc_cache');\nconst Application = require('./application');\nconst ErrorsEmitter = require('./modules/errors_emitter');\nconst User = require('./user')\n\nprefix.reg(logger);\n\nprefix.apply(logger, {\n\ttemplate: '[%t] %l (NXM-%n):',\n\ttimestampFormatter: (date) => {\n\t\treturn date.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1');\n\t},\n\tlevelFormatter: (level) => {\n\t\treturn level.toUpperCase();\n\t},\n\tnameFormatter: (name) => {\n\t\treturn name || 'SDK';\n\t}\n});\n\n// Conversation Client Error\nconst ConversationClientError = require('./conversationClientError');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * The parent ConversationClient class.\n *\n * @class ConversationClient\n * @param {object} [params]\n * @param {Boolean} params.debug=false set mode to debug\n * @param {string} params.url=nexmo_ws_url Nexmo Conversation Websocket url\n * @param {string} params.path=/rtc Nexmo Conversation Websocket url path suffix\n * @param {Boolean} params.reconnection=true socket.io reconnection attribute\n * @param {object} params.rtcstats set reporting for stream statistics (Websocket or internal event emit)\n * @param {string} params.rtcstats.ws_url='' endpoint (weboscket) to send rtc stats.\n * @param {Boolean} params.rtcstats.emit_events=false receive rtcstats:report event\n * @param {Boolean} params.forceNew=true socket.io forceNew attribute\n * @param {Boolean} params.autoConnect=true socket.io autoConnect attribute\n * @param {string} params.ips_url=ips_url Nexmo IPS url for image upload\n * @param {string} params.environment='production' development / production environment\n * @param {object} params.iceServers=[{'stun:stun.l.google.com:19302'}] iceServers for RTCPeerConnection\n *\n * @emits ConversationClient#ready\n * @emits ConversationClient#rtcstats:report\n */\n\nclass ConversationClient {\n\tconstructor(params) {\n\t\t//save an array of instances\n\t\tconst options = params || {};\n\t\tconst config = this.config = {\n\t\t\tautoConnect: true,\n\t\t\tbugsnag_key: 'cd2dcd56892c3cd260b12caf6eecf022',\n\t\t\tcache: true,\n\t\t\tdebug: false,\n\t\t\tenable_log_reporter: true,\n\t\t\tenvironment: 'production',\n\t\t\tforceNew: true,\n\t\t\tips_url: 'https://api.nexmo.com/v1/image',\n\t\t\tpath: '/rtc',\n\t\t\treconnection: true,\n\t\t\trepository: 'https://github.com/Nexmo/conversation-js-sdk',\n\t\t\tscreenShareExtensionId: '',\n\t\t\tSDK_version: '2.1.0',\n\t\t\turl: 'https://ws.nexmo.com',\n\t\t\ticeServers: [{\n\t\t\t\turls: 'stun:stun.l.google.com:19302'\n\t\t\t}],\n\t\t\trtcstats: {\n\t\t\t\tws_url: '',\n\t\t\t\temit_events: false\n\t\t\t}\n\t\t};\n\t\tlet connection;\n\t\tthis.sessionReady = false;\n\t\tthis.requests = {};\n\t\tthis.application = null;\n\t\t// set our config from options\n\t\tObject.assign(this.config, options);\n\n\t\tif (config.debug === true) {\n\t\t\tlogger.setLevel(\"debug\");\n\t\t} else {\n\t\t\tlogger.setLevel(\"silent\");\n\t\t}\n\t\tthis.log = logger.noConflict();\n\n\t\t//inject bug reporting tool\n\t\tif (config.enable_log_reporter) {\n\t\t\tfunction j(u, c) {\n\t\t\t\tlet h = document.getElementsByTagName('head')[0],\n\t\t\t\t\ts = document.createElement('script');\n\t\t\t\ts.async = true;\n\t\t\t\ts.src = u;\n\t\t\t\ts.onload = s.onreadystatechange = function() {\n\t\t\t\t\tif (!s.readyState || /loaded|complete/.test(s.readyState)) {\n\t\t\t\t\t\ts.onload = s.onreadystatechange = null;\n\t\t\t\t\t\ts = undefined;\n\t\t\t\t\t\tif (c) {\n\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\th.insertBefore(s, h.firstChild);\n\t\t\t}\n\n\n\t\t\tif (typeof document !== \"undefined\") {\n\t\t\t\tj(\"//d2wy8f7a9ursnm.cloudfront.net/bugsnag-3.min.js\", () => {\n\t\t\t\t\tif (typeof Bugsnag !== \"undefined\") {\n\t\t\t\t\t\tif (!Bugsnag.apiKey) {\n\t\t\t\t\t\t\tBugsnag.apiKey = this.config.bugsnag_key;\n\t\t\t\t\t\t\tBugsnag.releaseStage = this.config.environment;\n\t\t\t\t\t\t\tBugsnag.appVersion = this.config.SDK_version;\n\t\t\t\t\t\t\tBugsnag.repository = this.config.repository;\n\t\t\t\t\t\t\tBugsnag.disableAutoBreadcrumbs();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Create the socket.io connection and allow multiple instances\n\t\tconnection = socket_io.connect(config.url, {\n\t\t\tpath: config.path,\n\t\t\tforceNew: config.forceNew,\n\t\t\treconnection: config.reconnection,\n\t\t\tautoConnect: config.autoConnect,\n\t\t\ttransports: ['websocket']\n\t\t});\n\n\t\tthis.connection = connection;\n\n\t\tif (config.cache) {\n\t\t\tthis.cache = new RTC_Cache(this);\n\t\t\tthis.cache.init(this);\n\t\t}\n\n\t\t/**\n\t\t * Ready event.\n\t\t *\n\t\t * @event ConversationClient#ready\n\t\t * @example <caption>Listen to websocket ready event </caption>\n\t\t *     rtc.on(\"ready\", () => {\n\t\t *      console.log(\"connection ready\");\n\t\t *     });\n\t\t */\n\t\tconnection.on('connect', () => {\n\t\t\tthis.emit('ready');\n\t\t\tthis.sessionReady = true;\n\t\t\tthis.log.info('websocket ready');\n\t\t});\n\n\t\t// Listen to socket.io events\n\t\t/**\n\t\t * Connecting event.\n\t\t *\n\t\t * @event ConversationClient#connecting\n\t\t * @example <caption>Listen to websocket connecting event </caption>\n\t\t *     rtc.on(\"connecting\", () => {\n\t\t *      console.log(\"connecting\");\n\t\t *     });\n\t\t */\n\t\tconnection.on('connecting', () => {\n\t\t\tthis.emit('connecting');\n\t\t\tthis.log.info('websocket connecting');\n\t\t});\n\t\t/**\n\t\t * Disconnect event.\n\t\t *\n\t\t * @event ConversationClient#disconnect\n\t\t * @example <caption>Listen to websocket disconnect event </caption>\n\t\t *     rtc.on(\"disconnect\", () => {\n\t\t *      console.log(\"disconnect\");\n\t\t *     });\n\t\t */\n\t\tconnection.on('disconnect', () => {\n\t\t\tthis.emit('disconnect');\n\t\t\tthis.log.info('websocket disconnected');\n\t\t});\n\t\t/**\n\t\t * Reconnect event.\n\t\t *\n\t\t * @event ConversationClient#reconnect\n\t\t * @example <caption>Listen to websocket reconnect event </caption>\n\t\t *     rtc.on(\"reconnect\", (retry_number) => {\n\t\t *      console.log(\"reconnect\", retry_number);\n\t\t *     });\n\t\t */\n\t\tconnection.on('reconnect', (retry_number) => {\n\t\t\tthis.emit('reconnect', retry_number);\n\t\t\tif (this.cache && this.cache.user_data) {\n\t\t\t\tthis.login(this.cache.user_data.token);\n\t\t\t\tthis.log.info('websocket reconnected');\n\t\t\t}\n\t\t});\n\t\t/**\n\t\t * Reconnecting event.\n\t\t *\n\t\t * @event ConversationClient#reconnecting\n\t\t * @example <caption>Listen to websocket reconnecting event </caption>\n\t\t *     rtc.on(\"reconnecting\", (retry_number) => {\n\t\t *      console.log(\"reconnecting\", retry_number);\n\t\t *     });\n\t\t */\n\t\tconnection.on('reconnecting', (retry_number) => {\n\t\t\tthis.emit('reconnecting', retry_number);\n\t\t\tthis.log.info('websocket reconnecting');\n\t\t});\n\t\t/**x\n\t\t * Error event.\n\t\t *\n\t\t * @event ConversationClient#error\n\t\t * @example <caption>Listen to websocket error event </caption>\n\t\t *     rtc.on(\"error\", (error) => {\n\t\t *      console.log(\"error\", error);\n\t\t *     });\n\t\t */\n\t\tconnection.on('error', (error) => {\n\t\t\tthis.emit('error', new NexmoClientError(error))\n\t\t\tthis.log.error(\"Socket.io reported a generic error\", error);\n\t\t});\n\n\t\tconnection.io.on('packet', (packet) => {\n\t\t\tif (packet.type !== 2) return;\n\t\t\tif (packet.data[0] === 'echo') return; //ignore echo events\n\t\t\tconst response = packet.data[1];\n\t\t\t// Set the type of the response\n\t\t\tresponse.type = packet.data[0];\n\t\t\tthis.log.debug('<--', response.type, response);\n\t\t\tif (response.rid in this.requests) {\n\t\t\t\tconst callback = this.requests[response.rid].callback;\n\t\t\t\tdelete this.requests[response.rid];\n\t\t\t\tdelete response.delay;\n\t\t\t\tif (this.errorsEmitter) {\n\t\t\t\t\tthis.errorsEmitter.emitResponseIfError(response);\n\t\t\t\t}\n\t\t\t\tcallback(response);\n\t\t\t} else {\n\t\t\t\t// This is an unsolicited event\n\t\t\t\t// we emit it in application level.\n\t\t\t\tif (this.application)\n\t\t\t\t\tthis.application._handleEvent(response);\n\t\t\t}\n\t\t});\n\t\tWildEmitter.mixin(ConversationClient);\n\t}\n\n\t/**\n\t * Conversation listening for text events.\n\t *\n\t * @event Conversation#text\n\t *\n\t * @property {Member} sender - The sender of the text\n\t * @property {Text} text - The text message received\n\t * @example <caption>listen for text events</caption>\n\t * conversation.on(\"text\",(sender, message) => {\n\t *      console.log(sender,message);\n\t *\n\t * // Identify your own message.\n\t *      if (message.from !== conversation.me.id)\n\t *\n\t * // Identify if the event corresponds to the currently open conversation.\n\t *      if (message.cid === conversation.id)\n\t * });\n\t */\n\t/**\n\t *\n\t *  Conversation listening for image events.\n\t *\n\t * @event Conversation#image\n\t *\n\t * @property {Member} sender - The sender of the image\n\t * @property {ImageEvent} image - The image message received\n\t * @example <caption>listen for image events</caption>\n\t * conversation.on(\"image\", (sender, image) => {\n\t *      console.log(sender,image);\n\t *\n\t * // Identify your own imageEvent.\n\t *      if (image.from !== conversation.me.id)\n\t *\n\t *  // Identify if the event corresponds to the currently open conversation.\n\t *      if (image.cid === conversation.id)\n\t * });\n\t */\n\t/**\n\t * Conversation listening for deleted events.\n\t *\n\t * @event Conversation#event:delete\n\t *\n\t * @property {Member} member - the member who deleted an event\n\t * @property {Event} event - deleted event: event.id\n\t * @example <caption>get details about the deleted event</caption>\n\t * conversation.on(\"event:delete\", (member, event) => {\n\t *      console.log(event.id);\n\t *      console.log(event.body.timestamp.deleted);\n\t * });\n\t */\n\t/**\n\t * Conversation listening for new members.\n\t *\n\t * @event Conversation#member:joined\n\t *\n\t * @property {Member} member - the member that joined\n\t * @property {Event} event - the join event\n\t * @example <caption>get the name of the new member</caption>\n\t * conversation.on(\"member:joined\", (member, event) => {\n\t * \t\tconsole.log(event.id)\n\t *      console.log(member.user.name+ \" joined the conversation\");\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members being invited.\n\t *\n\t * @event Conversation#member:invited\n\t *\n\t * @property {Member} member - the member that is invited\n\t * @property {Event} event - data regarding the receiver of the invitation\n\t * @example <caption>get the name of the invited member</caption>\n\t * conversation.on(\"member:invited\", (member, event) => {\n\t *      console.log(member.user.name + \" invited to the conversation\");\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members leaving (kicked or left).\n\t *\n\t * @event Conversation#member:left\n\t *\n\t * @property {Member} member - the member that has left\n\t * @property {Event} event - data regarding the receiver of the invitation\n\t * @example <caption>get the username of the member that left</caption>\n\t * conversation.on(\"member:left\", (member , event) => {\n\t *      console.log(member.user.name + \" left\");\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members typing.\n\t *\n\t * @event Conversation#text:typing:on\n\t *\n\t * @property {Member} member - the member that started typing\n\t * @property {Event} event - the start typing event\n\t * @example <caption>get the username of the member that is typing</caption>\n\t * conversation.on(\"text:typing:on\", (data) => {\n\t *      console.log(data.name + \" is typing...\");\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members stopped typing.\n\t *\n\t * @event Conversation#text:typing:off\n\t *\n\t * @property {Member} member - the member that stopped typing\n\t * @property {Event} event - the stop typing event\n\t * @example <caption>get the username of the member that stopped typing</caption>\n\t * conversation.on(\"text:typing:off\", (data) => {\n\t *      console.log(data.name + \" stopped typing...\");\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members' seen texts.\n\t *\n\t * @event Conversation#text:seen\n\t *\n\t * @property {Member} member - the member that saw the text\n\t * @property {Text} text - the text that was seen\n\t * @example <caption>listen for seen text events</caption>\n\t * conversation.on(\"text:seen\", (data, text) => {\n\t *      console.log(text);\n\t *\n\t * // Check if the event belongs to this conversation\n\t *      if (text.cid === conversation.id)\n\t *\n\t * // Get the list of members that have seen this event\n\t *      for (let member_id in text.state.seen_by) {\n\t *          if (conversation.me.id !== member_id) {\n\t *              console.log(conversation.members[member_id].name);\n\t *          }\n\t *       }\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members' seen images.\n\t * @event Conversation#image:seen\n\t *\n\t * @property {Member} member - the member that saw the image\n\t * @property {ImageEvent} image - the image that was seen\n\t * @example <caption>listen for seen image events</caption>\n\t * conversation.on(\"image:seen\", (data, image) => {\n\t *      console.log(image);\n\t *\n\t * // Check if the event belongs to this conversation\n\t *      if (image.cid === conversation.id)\n\t * // Get the list of members that have seen this event\n\t *      for (let member_id in image.state.seen_by) {\n\t *           if (conversation.me.id !== member_id) {\n\t *               console.log(conversation.members[member_id].name);\n\t *            }\n\t *       }\n\t * });\n\t */\n\t/**\n\t * Conversation listening for members media changes (audio, video,text)\n\t *\n\t * Change in media presence state. They are in the conversation with text, audio or video.\n\t *\n\t * @event Conversation#member:media\n\t *\n\t * @property {Member} member - the member object linked to this event\n\t * @property {Event} event - information about media presence state\n\t * @property {boolean} event.body.audio  - is audio enabled\n\t * @example <caption>get every member's media change events </caption>\n\t * conversation.on(\"member:media\", (from, media) => {\n\t *      console.log(from.media.audio); //true\n\t * \t\tconsole.log(event.body.media); //{\"audio\":true}\n\t * });\n\t */\n\tsendRequest(request, callback) {\n\t\t// Add a message ID to the request and set up a listener for the reply (or error)\n\t\trequest.tid = Utils.allocateUUID();\n\t\tconst type = request.type;\n\t\tdelete request.type;\n\t\tthis.log.debug('-->', type, request);\n\t\tthis.log.info('-->', type, request.tid);\n\t\tthis.connection.emit(type, request);\n\t\tthis.requests[request.tid] = {\n\t\t\ttype: type,\n\t\t\trequest: request,\n\t\t\tcallback: callback\n\t\t};\n\t}\n\n\t/**\n\t * Login to the cloud.\n\t * @param {string} params.token - the login token\n\t */\n\tlogin(token) {\n\n\t\t// return a promise for the application\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t//make sure the token gets removed from localstorage\n\t\t\tif (typeof (Storage) !== \"undefined\") {\n\t\t\t\tlocalStorage.removeItem(\"NXMO_user_data\");\n\t\t\t}\n\t\t\tthis.sendRequest({\n\t\t\t\ttype: 'session:login',\n\t\t\t\tbody: {\n\t\t\t\t\ttoken: token,\n\t\t\t\t\tSDK_version: this.config.SDK_version,\n\t\t\t\t\tOS_family: 'js',\n\t\t\t\t\tOS_revision: (typeof navigator !== \"undefined\") ? navigator.userAgent : (typeof window !== \"undefined\") ? window.navigator.userAgent : \"Generic JS navigator\"\n\t\t\t\t}\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === \"session:success\") {\n\t\t\t\t\tif (!this.application || (this.application.me && this.application.me.id !== response.body.user_id)) {\n\t\t\t\t\t\tthis.application = new Application(this);\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.application.me) {\n\t\t\t\t\t\tthis.application.me = new User(this.application, {\n\t\t\t\t\t\t\tid: response.body.user_id,\n\t\t\t\t\t\t\tname: response.body.name\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.errorsEmitter) {\n\t\t\t\t\t\tthis.errorsEmitter = new ErrorsEmitter(this.application);\n\t\t\t\t\t}\n\t\t\t\t\tthis._updateTokenInCache(token, response.body.name);\n\t\t\t\t\tif (typeof (Bugsnag) !== \"undefined\") {\n\t\t\t\t\t\tBugsnag.user = {\n\t\t\t\t\t\t\tid: this.application.me.id\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// Retrieve the existing conversation data for this user\n\t\t\t\t\tthis.application.getConversations()\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t// Complete the login process\n\t\t\t\t\t\t\tresolve(this.application);\n\t\t\t\t\t\t}, (reason) => {\n\t\t\t\t\t\t\treject(new NexmoApiError(reason));\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t\t//TODO move this in cache module\n\t\t\t\t\tif (this.cache && this.cache.worker) {\n\t\t\t\t\t\tthis.cache.worker.terminate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * logout from the cloud.\n\t */\n\tlogout() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst logoutRequest = () => {\n\t\t\t\treturn this.sendRequest({\n\t\t\t\t\ttype: 'session:logout',\n\t\t\t\t\tbody: {}\n\t\t\t\t}, (response) => {\n\t\t\t\t\tif (response.type === \"session:logged-out\" || response.type === \"session:terminated\") {\n\t\t\t\t\t\tthis.disconnect();\n\t\t\t\t\t\tdelete this.errorsEmitter;\n\t\t\t\t\t\tdelete this.application;\n\t\t\t\t\t\tdelete this.cache;\n\t\t\t\t\t\tthis.callbacks = {};\n\t\t\t\t\t\tthis.requests = {};\n\t\t\t\t\t\tthis.sessionReady = false;\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t\t\tif (typeof Bugsnag !== \"undefined\") Bugsnag.notifyException(Error(response.reason));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// prepare for logout\n\t\t\tif (this.application) {\n\t\t\t\tlet disablePromises = [];\n\t\t\t\tfor (let conversation_id in this.application.conversations) {\n\t\t\t\t\tdisablePromises.push(this.application.conversations[conversation_id].media.disable());\n\t\t\t\t}\n\t\t\t\tPromise.all(disablePromises)\n\t\t\t\t\t.catch((err) => { this.log.info(err); }).then(() => {\n\t\t\t\t\t\tlogoutRequest();\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlogoutRequest();\n\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Disconnect from the cloud.\n\t *\n\t */\n\tdisconnect() {\n\t\treturn this.connection.disconnect();\n\t}\n\n\t/**\n\t * Connect from the cloud.\n\t *\n\t */\n\tconnect() {\n\t\treturn this.connection.connect();\n\t}\n\n\t_updateTokenInCache(token, username) {\n\t\tif (this.cache) {\n\t\t\tthis.cache.updateToken({\n\t\t\t\ttoken: token,\n\t\t\t\tusername: username\n\t\t\t});\n\t\t}\n\t}\n}\nmodule.exports = ConversationClient;\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.loading)?_c('div',[_c('h1',{staticClass:\"mdl-typography--display-1\"},[_vm._v(\"Loading...\")]),_c('div',{staticClass:\"mdl-progress mdl-js-progress mdl-progress__indeterminate\"})]):_vm._e(),(!_vm.loading)?_c('div',[_c('div',{staticClass:\"mdl-card mdl-shadow--2dp\"},[_c('div',{staticClass:\"mdl-card__title\"},[_c('h2',{staticClass:\"mdl-card__title-text speaker\"},[_vm._v(_vm._s(_vm.talk.speaker))]),_c('h2',{staticClass:\"mdl-card__title-text\"},[_vm._v(_vm._s(_vm.talk.title))])]),_c('div',{staticClass:\"mdl-card__menu\"},[_c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_vm._v(_vm._s(_vm.talk.venue))])]),(_vm.live)?_c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_vm._v(\"Live\")])]):_vm._e()]),_c('div',{staticClass:\"mdl-card__supporting-text\"},[(!_vm.live)?_c('span',[_c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_vm._v(_vm._s(_vm.talk.start_date.split(' ')[0]))])]),_c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_vm._v(_vm._s(_vm.talk.start_time))])]),_vm._m(0),_c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_vm._v(_vm._s(_vm.talk.end_time))])])]):_vm._e(),_c('p',[_vm._v(_vm._s(_vm.talk.description))])]),_c('div',{staticClass:\"mdl-card__supporting-text caption\"},[_vm._v(\"\\n          \"+_vm._s(_vm.caption)+\"\\n      \")])])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"mdl-chip\"},[_c('span',{staticClass:\"mdl-chip__text\"},[_c('i',{staticClass:\"material-icons time-spacer\"},[_vm._v(\"chevron_right\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div v-if=\"loading\">\n      <h1 class=\"mdl-typography--display-1\">Loading...</h1>\n      <div class=\"mdl-progress mdl-js-progress mdl-progress__indeterminate\"></div>\n    </div>\n    <div v-if=\"!loading\">\n      <div class=\"mdl-card mdl-shadow--2dp\">\n        <div class=\"mdl-card__title\">\n            <h2 class=\"mdl-card__title-text speaker\">{{ talk.speaker }}</h2>\n            <h2 class=\"mdl-card__title-text\">{{ talk.title }}</h2>\n        </div>\n        <div class=\"mdl-card__menu\">\n          <span class=\"mdl-chip\">\n              <span class=\"mdl-chip__text\">{{ talk.venue }}</span>\n          </span>\n          <span class=\"mdl-chip\" v-if=\"live\">\n              <span class=\"mdl-chip__text\">Live</span>\n          </span>\n        </div>\n        <div class=\"mdl-card__supporting-text\">\n          <span v-if=\"!live\">\n            <span class=\"mdl-chip\">\n                <span class=\"mdl-chip__text\">{{ talk.start_date.split(' ')[0] }}</span>\n            </span>\n            <span class=\"mdl-chip\">\n                <span class=\"mdl-chip__text\">{{ talk.start_time }}</span>\n            </span>\n            <span class=\"mdl-chip\">\n                <span class=\"mdl-chip__text\"><i class=\"material-icons time-spacer\">chevron_right</i></span>\n            </span>\n            <span class=\"mdl-chip\">\n                <span class=\"mdl-chip__text\">{{ talk.end_time }}</span>\n            </span>\n          </span>\n            <p>{{ talk.description }}</p>\n        </div>\n        <div class=\"mdl-card__supporting-text caption\">\n            {{ caption }}\n        </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<style>\n.time-spacer {\n  font-size: 9px;\n  vertical-align: middle;\n  transform: scale(3);\n}\n\n.mdl-typography--display-4,\n.mdl-progress {\n  width: 100%;\n}\n\n.mdl-card {\n  width: calc(100% - 40px);\n  margin: 20px;\n}\n\n.mdl-card__title {\n  background-color: #4051b5;\n  color: #ffffff;\n  flex-flow: column;\n}\n\n.mdl-chip {\n  background-color: #ffffff;\n  color: #673ab7;\n  margin-left: 5px;\n}\n\n.mdl-card__title-text {\n  align-self: flex-start;\n  text-align: left;\n  margin: 10px 0;\n}\n\n.mdl-card__title-text.speaker {\n  text-transform: capitalize;\n}\n\n.mdl-card__supporting-text {\n  width: 97%;\n  text-align: left;\n  margin: 0 auto;\n  padding: 16px 0;\n}\n\n.mdl-card__supporting-text .mdl-chip {\n  background-color: #4051b5;\n  color: #ffffff;\n  margin-bottom: 15px;\n}\n.mdl-card__supporting-text.caption {\n  border-top: 3px solid #4051b5;\n}\n\n@media (max-width: 479px) {\n  .mdl-card {\n    width: 100%;\n    margin: 0;\n  }\n\n  .mdl-card__supporting-text {\n    width: 90%;\n  }\n}\n</style>\n\n<script>\nimport axios from 'axios';\nimport ConversationClient from 'nexmo-stitch';\n\nexport default {\n  name: 'talk',\n  data() {\n    return {\n      loading: true,\n      talk: undefined,\n      caption: 'There is no caption yet, please check back later.',\n      live: false,\n    };\n  },\n  methods: {\n    getConversation(app) {\n      console.log('*** Logged into app', app);\n      return app.getConversation(this.talk.conversation_id);\n    },\n    setConversation(conversation) {\n      conversation.getEvents().then((events) => {\n        if (\n          events.size > 1 &&\n          this.caption === 'There is no caption yet, please check back later.'\n        ) {\n          this.caption = '';\n        }\n\n        events.forEach((value, key) => {\n          if (value.type === 'text') {\n            this.caption += value.body.text;\n          }\n        });\n\n        this.loading = false;\n      });\n      conversation.on('text', (sender, message) => {\n        this.live = true;\n\n        if (\n          this.caption === 'There is no caption yet, please check back later.'\n        ) {\n          this.caption = '';\n        }\n\n        this.caption += message.body.text;\n      });\n    },\n    loginAndGetConversation() {\n      axios\n        .get('https://nexmo-emf-schedule.herokuapp.com/api/jwt/schedule.json')\n        .then((response) => {\n          // JSON responses are automatically parsed.\n          new ConversationClient({ debug: false, rtcstats_enabled: false })\n            .login(response.data.user_jwt)\n            .then(this.getConversation)\n            .then(this.setConversation);\n        })\n        .catch(console.error);\n    },\n  },\n  mounted() {\n    axios\n      .get('https://nexmo-emf-schedule.herokuapp.com/data/nexmo-schedule.json')\n      .then((response) => {\n        // JSON responses are automatically parsed.\n        this.talk = response.data.filter((talk) => {\n          if (talk.slug === this.$route.params.slug) return talk;\n        })[0];\n      })\n      .then(this.loginAndGetConversation)\n      .catch(console.error);\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Talk.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Talk.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Talk.vue?vue&type=template&id=0f690076&\"\nimport script from \"./Talk.vue?vue&type=script&lang=js&\"\nexport * from \"./Talk.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Talk.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Talk.vue\"\nexport default component.exports","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype)) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      if (args.candidate && args.candidate.length) {\n        // Augment the native candidate with the parsed fields.\n        var nativeCandidate = new NativeRTCIceCandidate(args);\n        var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n        var augmentedCandidate = Object.assign(nativeCandidate,\n            parsedCandidate);\n\n        // Add a serializer that does not serialize the extra attributes.\n        augmentedCandidate.toJSON = function() {\n          return {\n            candidate: augmentedCandidate.candidate,\n            sdpMid: augmentedCandidate.sdpMid,\n            sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n            usernameFragment: augmentedCandidate.usernameFragment,\n          };\n        };\n        return augmentedCandidate;\n      }\n      return new NativeRTCIceCandidate(args);\n    };\n    window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    utils.wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  },\n\n  shimMaxMessageSize: function(window) {\n    if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n      return;\n    }\n    var browserDetails = utils.detectBrowser(window);\n\n    if (!('sctp' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n        get: function() {\n          return typeof this._sctp === 'undefined' ? null : this._sctp;\n        }\n      });\n    }\n\n    var sctpInDescription = function(description) {\n      var sections = SDPUtils.splitSections(description.sdp);\n      sections.shift();\n      return sections.some(function(mediaSection) {\n        var mLine = SDPUtils.parseMLine(mediaSection);\n        return mLine && mLine.kind === 'application'\n            && mLine.protocol.indexOf('SCTP') !== -1;\n      });\n    };\n\n    var getRemoteFirefoxVersion = function(description) {\n      // TODO: Is there a better solution for detecting Firefox?\n      var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n      if (match === null || match.length < 2) {\n        return -1;\n      }\n      var version = parseInt(match[1], 10);\n      // Test for NaN (yes, this is ugly)\n      return version !== version ? -1 : version;\n    };\n\n    var getCanSendMaxMessageSize = function(remoteIsFirefox) {\n      // Every implementation we know can send at least 64 KiB.\n      // Note: Although Chrome is technically able to send up to 256 KiB, the\n      //       data does not reach the other peer reliably.\n      //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n      var canSendMaxMessageSize = 65536;\n      if (browserDetails.browser === 'firefox') {\n        if (browserDetails.version < 57) {\n          if (remoteIsFirefox === -1) {\n            // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n            // fragmentation.\n            canSendMaxMessageSize = 16384;\n          } else {\n            // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n            // messages. Thus, supporting ~2 GiB when sending.\n            canSendMaxMessageSize = 2147483637;\n          }\n        } else if (browserDetails.version < 60) {\n          // Currently, all FF >= 57 will reset the remote maximum message size\n          // to the default value when a data channel is created at a later\n          // stage. :(\n          // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n          canSendMaxMessageSize =\n            browserDetails.version === 57 ? 65535 : 65536;\n        } else {\n          // FF >= 60 supports sending ~2 GiB\n          canSendMaxMessageSize = 2147483637;\n        }\n      }\n      return canSendMaxMessageSize;\n    };\n\n    var getMaxMessageSize = function(description, remoteIsFirefox) {\n      // Note: 65536 bytes is the default value from the SDP spec. Also,\n      //       every implementation we know supports receiving 65536 bytes.\n      var maxMessageSize = 65536;\n\n      // FF 57 has a slightly incorrect default remote max message size, so\n      // we need to adjust it here to avoid a failure when sending.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n      if (browserDetails.browser === 'firefox'\n           && browserDetails.version === 57) {\n        maxMessageSize = 65535;\n      }\n\n      var match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n      if (match.length > 0) {\n        maxMessageSize = parseInt(match[0].substr(19), 10);\n      } else if (browserDetails.browser === 'firefox' &&\n                  remoteIsFirefox !== -1) {\n        // If the maximum message size is not present in the remote SDP and\n        // both local and remote are Firefox, the remote peer can receive\n        // ~2 GiB.\n        maxMessageSize = 2147483637;\n      }\n      return maxMessageSize;\n    };\n\n    var origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      var pc = this;\n      pc._sctp = null;\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        var maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        var sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get: function() {\n            return maxMessageSize;\n          }\n        });\n        pc._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  },\n\n  shimSendThrowTypeError: function(window) {\n    if (!(window.RTCPeerConnection &&\n        'createDataChannel' in window.RTCPeerConnection.prototype)) {\n      return;\n    }\n\n    // Note: Although Firefox >= 57 has a native implementation, the maximum\n    //       message size can be reset for all data channels at a later stage.\n    //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n    function wrapDcSend(dc, pc) {\n      var origDataChannelSend = dc.send;\n      dc.send = function() {\n        var data = arguments[0];\n        var length = data.length || data.size || data.byteLength;\n        if (dc.readyState === 'open' &&\n            pc.sctp && length > pc.sctp.maxMessageSize) {\n          throw new TypeError('Message too large (can send a maximum of ' +\n            pc.sctp.maxMessageSize + ' bytes)');\n        }\n        return origDataChannelSend.apply(dc, arguments);\n      };\n    }\n    var origCreateDataChannel =\n      window.RTCPeerConnection.prototype.createDataChannel;\n    window.RTCPeerConnection.prototype.createDataChannel = function() {\n      var pc = this;\n      var dataChannel = origCreateDataChannel.apply(pc, arguments);\n      wrapDcSend(dataChannel, pc);\n      return dataChannel;\n    };\n    utils.wrapPeerConnectionEvent(window, 'datachannel', function(e) {\n      wrapDcSend(e.channel, e.target);\n      return e;\n    });\n  }\n};\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nmodule.exports = {\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var pc = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(pc, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var pc = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            pc.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(function(stream) {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              var event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n        }\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n        }\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/*\n * Nexmo Stitch SDK\n *  Media Object Model\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nconst ConversationClientError = require('../conversationClientError');\nconst RtcHelper = require('./rtc_helper');\nconst TraceWS = require('./rtcstats/trace-ws');\nconst RTCStats = require('./rtcstats/rtcstats');\nconst logger = require('loglevel');\nconst Utils = require('../utils');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * WebRTC Media class\n * @class Media\n * @property {Application} application The parent application object\n * @property {object} eventsQueue Incoming sip events queue (used for buffering while we're not ready to process them)\n * @property {Conversation} parentConversation the conversation object this media instance belongs to\n * @property {Member[]} parentConversation.remoteMembers The remote members\n * @property {number} parentConversation.streamIndex the index of the streams, updated in each new peer offer\n * @property {object} parentConversation.rtcObjects data related to the rtc connection\n * @property {string} parentConversation.rtcObjects.id the rtc_id\n * @property {PeerConnection} parentConversation.rtcObjects.pc the current PeerConnection object\n * @property {Stream} parentConversation.rtcObjects.localStream the stream of the specific rtc_id\n * @property {string} parentConversation.rtcObjects.type=video|screenshare the type of the stream\n * @property {number} parentConversation.rtcObjects.streamIndex the index number of the stream (e.g. use to mute)\n * @property {Promise[]} rtcNewPromises an array that contains all the promises of the rtc:new requests\n * @emits Application#rtcstats:report\n * @emits Member#media:stream:on\n */\n\n/**\n * Application listening for calls.\n *\n * @event Member#media:stream:on\n *\n * @property {number} payload.index the index number of this stream\n * @property {string} payload.remote_member_id the id of the Member the stream belongs to\n * @property {string} payload.name the stream's display name\n * @property {MediaStream} payload.stream the stream that is activated\n * @property {boolean} payload.video_mute if the video is hidden\n * @property {boolean} payload.audio_mute if the audio is muted\n *\n */\n\n\nclass Media {\n    constructor(conversation) {\n\n        this.log = logger.getLogger(this.constructor.name);\n        if (conversation) {\n            this.rtcHelper = new RtcHelper();\n            this.application = conversation.application;\n            this.application.activeStream = {};\n            this.application.activeStreams = [];\n            this.eventsQueue = [];\n            this.parentConversation = conversation;\n            this.parentConversation.remoteMembers = [];\n            this.parentConversation.rtcObjects = {};\n            this.rtcNewPromises = [];\n            this.streamIndex = 0;\n            this.rtcstats = {};\n            if (this.application.session.config && this.application.session.config.rtcstats) {\n                this.rtcstats = {\n                    emit_events: this.application.session.config.rtcstats.emit_events,\n                    ws_url: this.application.session.config.rtcstats.ws_url\n                }\n            }\n            if (this.application.session.config && this.application.session.config.screenShareExtensionId !== '') {\n                this.rtcHelper._setScreenShareExtensionId(this.application.session.config.screenShareExtensionId);\n            }\n            if (this.rtcstats.emit_events) {\n                this._initStatsReporting();\n            }\n        } else {\n            this.log.warn('No conversation object in Media');\n        }\n    }\n\t/**\n\t * Application listening for RTC stats.\n\t *\n\t * @event Application#rtcstats:report\n\t *\n\t * @property {number} MOS - the calculated MOS score\n\t * @property {Object} report - the stats report from WebRTC\n\t * @property {Conversation} Conversation - the conversation the report belongs to\n\t *\n\t * @example <caption>listening for quality mos score</caption>\n\t *  application.on(\"rtcstats:report\",(mos, report, conversation) => {\n\t *              console.log(\"call quality\", mos);\n\t *              });\n\t *      });\n\t */\n\n    /**\n     * Switch on the rtcStat reporting to the websocket connection and events\n     * @param ws_url\n     * @private\n     */\n    _enableStatsReporting(ws_url) {\n        this.application.session.config.rtcstats.ws_url = ws_url;\n        this.rtcstats.ws_url = ws_url;\n        this._initStatsReporting();\n    }\n\n    /**\n     * Switch on the rtc stats emit events\n     * @private\n     */\n    _enableStatsEvents() {\n        this.application.session.config.rtcstats.emit_events = true;\n        this.rtcstats.emit_events = true;\n        this._initStatsEvents();\n    }\n\n    _initStatsReporting() {\n        if (!this.rtcHelper.isNode() && this.application.session.config.rtcstats.ws_url) {\n            this.rtcStats_wsConnection = new TraceWS();\n            this.rtcStats = new RTCStats(\n                this.rtcStats_wsConnection.trace,\n                false,// isCallback\n                1000, // interval at which getStats will be polled,\n                [''] // RTCPeerConnection prefixes to wrap.\n            );\n            this.rtcStats_wsConnection.init({\n                rtcstatsUri: this.application.session.config.rtcstats.ws_url\n            });\n        }\n    }\n\n    _initStatsEvents() {\n        if (!this.rtcHelper.isNode()) {\n            const emit_event = (type, mos, report) => {\n                if (type === 'mos') {\n                    if (mos) {\n                        this.application.emit('rtcstats:report', mos, report, this.parentConversation);\n                    }\n                }\n            }\n            this.rtcStats = new RTCStats(\n                emit_event,\n                true, // isCallback\n                1000, // interval at which getStats will be polled,\n                [''] // RTCPeerConnection prefixes to wrap.\n            );\n        }\n    }\n\n    /**\n     * Switch off the rtcStat reporting\n     * @private\n     */\n    _disableStatsReporting() {\n        this.application.session.config.rtcstats.ws_url = '';\n        this.rtcstats.ws_url = '';\n        this.this.rtcStats_wsConnection.disable();\n    }\n\n    /**\n     * Switch off the rtcStat events\n     * @private\n     */\n    _disableStatsEvents() {\n        this.application.session.config.rtcstats.emit_events = false;\n        this.rtcstats.emit_events = false;\n        this.rtcStats.disable();\n    }\n\n    _handleVideo(params) {\n        return Promise.resolve()\n            .then(() => {\n                if (params.video) {\n                    let direction = 'none';\n                    let name = 'video';\n                    let videoConstraints;\n                    let audioConstraints;\n                    if (params.video === Object(params.video)) {\n                        direction = params.video.direction;\n                        name = params.video.name || 'video';\n                        videoConstraints = params.video.constraints;\n\n                    } else {\n                        direction = params.video;\n                    }\n                    if (params.audio) {\n                        audioConstraints = params.audio.constraints;\n                    }\n                    switch (direction) {\n                        case 'both':\n                        case 'send_only':\n                        case true:\n                            return this.rtcHelper.getUserVideo(videoConstraints, audioConstraints).then((localStream) => {\n                                return this._handleVideoSend(localStream, direction === 'send_only', 'video', name, params);\n                            });\n                        case 'receive_only':\n                            this.log.debug('video - receive_only not implemented yet');\n                            return Promise.reject(new NexmoApiError('Not implemented yet'));\n                        case 'none':\n                            break;\n                        default:\n                            if (direction === false) {\n                                let rtcObjectWithType = this._findRtcObjectByType('video');\n                                if (rtcObjectWithType) {\n                                    return this._disableLeg(rtcObjectWithType.id);\n                                }\n                            }\n                            break;\n                    }\n                } else {\n                    Promise.resolve();\n                }\n            }).then(() => {\n                if (params.screenshare) {\n                    let direction = false;\n                    let name = 'screenshare';\n                    let sources = ['screen', 'window', 'tab'];\n                    if (params.screenshare === Object(params.screenshare)) {\n                        direction = params.screenshare.direction;\n                        name = params.screenshare.name || 'screenshare';\n                        sources = params.screenshare.sources || sources;\n                    } else {\n                        direction = params.screenshare;\n                    }\n                    switch (direction) {\n                        case 'send_only':\n                        case true:\n                            return this.rtcHelper.getUserScreen(sources).then((localStream) => {\n                                return this._handleVideoSend(localStream, true, 'screenshare', name, params);\n                            });\n                        case 'none':\n                            break;\n                        default:\n                            if (direction === false) {\n                                let rtcObjectWithType = this._findRtcObjectByType('screenshare');\n                                if (rtcObjectWithType) {\n                                    return this._disableLeg(rtcObjectWithType.id);\n                                }\n                            }\n                            break;\n                    }\n                } else {\n                    Promise.resolve();\n                }\n            })\n    }\n\n    _emitEventsByRtcId(rtc_id) {\n        this.eventsQueue.filter((event) => event.id === rtc_id)\n            .forEach((event) => {\n                event.func();\n                event.ran = true;\n            });\n        this.eventsQueue = this.eventsQueue.filter((event) => event.ran === false);\n    }\n\n    _runWhenLegInitialized(rtc_id, func) {\n        if (this.parentConversation.rtcObjects[rtc_id]) {\n            func();\n        } else {\n            this.eventsQueue.push({\n                id: rtc_id,\n                func: func,\n                ran: false\n            })\n        }\n    }\n\n    _handleVideoSend(localStream, isSendOnly, type, name, params) {\n        const clientId = Utils.allocateUUID();\n        const pc = this.rtcHelper.createRTCPeerConnection({\n            'iceServers': this.application.session.config.iceServers,\n            'iceTransportPolicy': 'all',\n            'bundlePolicy': 'balanced',\n            'rtcpMuxPolicy': 'require',\n            'iceCandidatePoolSize': '0'\n        }, {\n                optional: [{\n                    'DtlsSrtpKeyAgreement': 'true'\n                }]\n            }, clientId);\n\n        pc.trace('conversation_id', this.parentConversation.id);\n        pc.trace('member_id', this.parentConversation.me.id);\n\n        // We want to be able to handle these events, for this  member, before they get propagated out\n        if (!this.listeningToRtcEvent) {\n            this.parentConversation.on('rtc:answer', 'media_module', (event) => {\n                let setRemoveDescriptionFunc =\n                    () => {\n                        this.parentConversation.rtcObjects[event.body.rtc_id].pc.setRemoteDescription(new RTCSessionDescription({\n                            type: 'answer',\n                            sdp: event.body.answer\n                        })).then(() => {\n                            this.log.debug('remote description is set');\n                        }).catch((e) => {\n                            this.log.warn('set remote description failed with error', e);\n                        });\n                    };\n\n                this._runWhenLegInitialized(event.body.rtc_id, setRemoveDescriptionFunc)\n            });\n        }\n\n        if (!isSendOnly && !this.listeningToRtcEvent) {\n            this.parentConversation.on('rtc:offer', 'media_module', (event) => {\n                let handleOfferFunc = () => {\n                    this._handleNewOffer(params, event);\n                };\n                this._runWhenLegInitialized(event.body.leg_id, handleOfferFunc);\n            });\n\n            this.parentConversation.on('rtc:terminate', 'media_module', (event) => {\n                this._handleParticipantRtcTerminate(event);\n            })\n\n\n            this.parentConversation.on('member:left', 'media_module', (member_left) => {\n                this._handleMemberLeft(member_left);\n            })\n        }\n\n        this.listeningToRtcEvent = true;\n        pc.ontrack = (evt) => {\n            this.log.debug('ontrack');\n            this.application.activeStreams.push(evt.streams[0]);\n        };\n\n        pc.addStream(localStream);\n        let index = this.streamIndex;\n        this.streamIndex++;\n        const p = new Promise((resolve, reject) => {\n            pc.createOffer()\n                .then((desc) => {\n                    return pc.setLocalDescription(desc);\n                })\n                .then(() => {\n                    const direction = isSendOnly ? 'send_only' : 'both';\n                    const event_to_emit = {\n                        type: 'rtc:new',\n                        cid: this.parentConversation.id,\n                        from: this.parentConversation.me.id,\n                        body: {\n                            offer: {\n                                sdp: pc.localDescription.sdp\n                            },\n                            video: {\n                                direction,\n                                name\n                            }\n                        }\n                    };\n                    if (params && params.label) {\n                        event_to_emit.label = params.label;\n                    }\n                    this.application.session.sendRequest(event_to_emit, (response) => {\n                        if (response.type === 'rtc:new:success') {\n                            const rtc_id = response.body.rtc_id;\n                            this.parentConversation.rtcObjects[rtc_id] = {\n                                id: rtc_id,\n                                pc: pc,\n                                localStream: localStream,\n                                type: type,\n                                streamIndex: index\n                            };\n                            this._emitEventsByRtcId(rtc_id);\n                            pc.trace('rtc_id', rtc_id);\n                            if (type === 'screenshare') {\n                                localStream.getVideoTracks()[0].onended = () => {\n                                    this._disableLeg(rtc_id)\n                                        .then(() => {\n                                            this.parentConversation.me.emit(\"media:stream:off\", index);\n                                        })\n                                        .catch(() => {\n                                            this.parentConversation.me.emit(\"media:stream:off\", index);\n                                        })\n                                };\n                            }\n                            resolve(rtc_id);\n                        } else {\n                            reject(new NexmoApiError(response));\n                        }\n                    });\n                }).catch((e) => {\n                    reject(new NexmoApiError(e));\n                })\n        });\n        this.rtcNewPromises.push(p);\n        this.parentConversation.me.emit(\"media:stream:on\", {\n            type,\n            name: name,\n            index: index,\n            localStream\n        });\n        const promisesArray = [];\n        pc.onicecandidate = (event) => {\n            p.then((rtc_id) => {\n                const body = {};\n                this._onIceCandidate(promisesArray, event, body, rtc_id);\n            })\n        };\n\n        pc.oniceconnectionstatechange = (status) => {\n            switch (pc.iceConnectionState) {\n                //https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\n                case 'disconnected':\n                    this.log.warn('One or more transports is disconnected', pc.iceConnectionState);\n                    break;\n                case 'failed':\n                    this.log.warn('One or more transports has terminated unexpectedly or in an error', status);\n                    break;\n                default:\n                    this.log.debug('The ice connection status changed', pc.iceConnectionState);\n                    break;\n            }\n        }\n        pc.onicegatheringstatechange = () => {\n            switch (pc.iceGatheringState) {\n                case 'new':\n                    this.log.debug('ice gathering new');\n                    break;\n                case 'complete':\n                    this.log.debug('ice gathering complete');\n                    break;\n                case 'gathering':\n                    this.log.debug('ice gathering gathering');\n                    break;\n            }\n        }\n        //on member delete (our this)\n        //terminate media\n        this.parentConversation.on('member:left', 'media_module', (member) => {\n            if (member.user.id === this.application.me.id) {\n                this.disable();\n            }\n        });\n        this.log.debug('sending local stream');\n\n        return p;\n    }\n\n    _sendIceRequest(body, rtc_id) {\n\n        return new Promise((resolve, reject) => {\n            const event_to_emit = {\n                type: 'rtc:ice',\n                cid: this.parentConversation.id,\n                from: this.parentConversation.me.id,\n                rtc_id: rtc_id,\n                body: body\n            }\n\n            this.application.session.sendRequest(event_to_emit, (response) => {\n                if (response.type === 'rtc:ice:success') {\n                    resolve();\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        })\n    }\n\n    _onIceCandidate(promiseArray, event, body, rtc_id) {\n\n        const bodyToSend = body;\n\n        if (event.candidate) {\n            bodyToSend.candidates = event.candidate;\n            this.log.debug('sending trickle candidates: ', bodyToSend);\n            promiseArray.push(this._sendIceRequest(bodyToSend, rtc_id))\n        } else {\n            bodyToSend.candidates = {\n                completed: true\n            };\n            return Promise.all(promiseArray)\n                .then(this._sendIceRequest(bodyToSend, rtc_id))\n                .then(() => {\n                    this.log.debug('successfully sent trickle candidates', bodyToSend);\n                })\n                .catch(() => {\n                    this.log.error('failed to sent trickle candidates', bodyToSend);\n                });\n        }\n    }\n\n    _handleNewOffer(params, event) {\n        const remoteMemberObject = {\n            remote_member_id: event.body.member_id,\n            remote_leg_id: event.body.member_leg_id,\n            local_leg_id: event.body.leg_id,\n            name: event.body.name,\n            streamIndex: this.streamIndex\n        };\n        this.streamIndex++;\n\n        const video_mute = event.body.media_settings && event.body.media_settings.video ?\n            event.body.media_settings.video.muted : false;\n        const audio_mute = event.body.media_settings && event.body.media_settings.audio ?\n            event.body.media_settings.audio.muted : false;\n\n        for (let member_id in this.parentConversation.members) {\n            if (member_id === event.body.member_id) {\n                remoteMemberObject.remote_member = this.parentConversation.members[member_id];\n            }\n        }\n\n        this.parentConversation.remoteMembers.push(remoteMemberObject);\n        this.log.debug('handle rtc:offer for member ' + remoteMemberObject.remote_member_id);\n\n        const clientId = Utils.allocateUUID();\n        remoteMemberObject.pc = this.rtcHelper.createRTCPeerConnection({\n            'iceServers': this.application.session.config.iceServers,\n            'iceTransportPolicy': 'all',\n            'bundlePolicy': 'balanced',\n            'rtcpMuxPolicy': 'require',\n            'iceCandidatePoolSize': '0'\n        }, {\n                optional: [{\n                    'DtlsSrtpKeyAgreement': 'true'\n                }]\n            }, clientId);\n\n        remoteMemberObject.pc.trace('conversation_id', this.parentConversation.id);\n        remoteMemberObject.pc.trace('member_id', this.parentConversation.me.id);\n        remoteMemberObject.pc.trace('rtc_id', remoteMemberObject.local_leg_id);\n        remoteMemberObject.pc.trace('other_member_id', remoteMemberObject.remote_member_id);\n\n        remoteMemberObject.pc.ontrack = (evt) => {\n            if (remoteMemberObject.stream !== evt.streams[0]) {\n                remoteMemberObject.stream = evt.streams[0];\n                remoteMemberObject.remote_member.emit(\"media:stream:on\", {\n                    index: remoteMemberObject.streamIndex,\n                    remote_member_id: remoteMemberObject.remote_member_id,\n                    name: remoteMemberObject.name,\n                    stream: remoteMemberObject.stream,\n                    video_mute: video_mute,\n                    audio_mute: audio_mute\n                });\n            }\n        };\n\n        let p = Promise.resolve();\n        const promisesArray = [];\n        remoteMemberObject.pc.onicecandidate = (event) => {\n\n            p = p.then(() => {\n                const body = {\n                    other_member_id: remoteMemberObject.remote_member_id,\n                    leg_id: remoteMemberObject.remote_leg_id\n                };\n                this._onIceCandidate(promisesArray, event, body, remoteMemberObject.local_leg_id);\n            })\n        }\n\n        remoteMemberObject.pc.oniceconnectionstatechange = (status) => {\n            switch (remoteMemberObject.pc.iceConnectionState) {\n                //https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\n                case 'disconnected':\n                    this.log.warn('One or more transports is disconnected', remoteMemberObject.pc.iceConnectionState);\n                    break;\n                case 'failed':\n                    this.log.warn('transports has terminated or failed for member ' + event.body.member_id, status);\n                    break;\n                default:\n                    this.log.debug('The ice connection status changed for member ' + event.body.member_id, remoteMemberObject.pc.iceConnectionState);\n                    break;\n            }\n        };\n        remoteMemberObject.pc.onicegatheringstatechange = () => {\n            switch (remoteMemberObject.pc.iceGatheringState) {\n                case 'new':\n                    this.log.debug('ice gathering new for member ' + event.body.member_id);\n                    break;\n                case 'complete':\n                    this.log.debug('ice gathering complete for member ' + event.body.member_id);\n                    break;\n                case 'gathering':\n                    this.log.debug('ice gathering gathering for member ' + event.body.member_id);\n                    break;\n            }\n        };\n        const rtcAnswerFunc = () => {\n            remoteMemberObject.pc.setRemoteDescription(new RTCSessionDescription({\n                type: 'offer',\n                sdp: event.body.sdp\n            }))\n                .then(() => {\n                    return remoteMemberObject.pc.createAnswer()\n                })\n                .then((answer) => {\n                    return remoteMemberObject.pc.setLocalDescription(answer);\n                })\n                .then(() => {\n                    const event_to_emit = {\n                        type: 'rtc:answer',\n                        cid: this.parentConversation.id,\n                        rtc_id: remoteMemberObject.local_leg_id,\n                        from: this.parentConversation.me.id,\n                        body: {\n                            other_member_id: remoteMemberObject.remote_member_id,\n                            answer: remoteMemberObject.pc.localDescription.sdp,\n                            leg_id: remoteMemberObject.remote_leg_id\n                        }\n                    };\n\n                    if (params && params.label) {\n                        event_to_emit.label = params.label;\n                    }\n\n                    this.application.session.sendRequest(event_to_emit,\n                        (response) => {\n                            if (response.type === 'rtc:answer:success') {\n                                this.log.debug('successfully set answer for member ' + remoteMemberObject.remote_member_id);\n                            } else {\n                                this.log.error(response.type + ': failed to set answer for member ' + remoteMemberObject.remote_member_id);\n                            }\n                        });\n                });\n        }\n\n        this._runWhenLegInitialized(remoteMemberObject.local_leg_id, rtcAnswerFunc);\n    }\n\n    _handleMemberLeft(member_left) {\n        const member_id = member_left.id;\n        const member_legs = this.parentConversation.remoteMembers.filter((member) => {\n            return member.remote_member_id === member_id\n        });\n        member_legs.forEach((member_leg) => {\n            this._handleParticipantRtcTerminate({ body: { rtc_id: member_leg.remote_leg_id } });\n        })\n    }\n\n    _handleParticipantRtcTerminate(event) {\n        const member = this.parentConversation.remoteMembers.find((member) => {\n            return member.remote_leg_id === event.body.rtc_id\n        });\n\n        if (!member) {\n            this.log.error('rtc:terminate was sent with invalid member id');\n            return;\n        }\n\n        this.parentConversation.remoteMembers = this.parentConversation.remoteMembers.filter((remoteMember) => {\n            return remoteMember.remote_leg_id !== event.body.rtc_id\n        });\n        this._deleteMemberMedia(member);\n        member.remote_member.emit(\"media:stream:off\", {\n            remote_member_id: member.remote_member_id,\n            index: member.streamIndex\n        });\n    }\n\n    _deleteMemberMedia(member) {\n        this._closeStream(member.stream);\n        member.pc.close();\n    }\n\n    _findRtcObjectByType(type) {\n        return Object.values(this.parentConversation.rtcObjects)\n            .find((rtcObject) => rtcObject.type === type);\n    }\n\n    update(params) {\n        return new Promise((resolve, reject) => {\n            this._validateUpdateParams(params)\n                .then(() => {\n                    if (params.video) {\n                        const rtcObject = this._findRtcObjectByType('video');\n                        if ((rtcObject && params.video.direction) || (!rtcObject && !params.video.direction)) {\n                            return reject(new NexmoClientError('error:media:update:invalid'));\n                        }\n                    } else if (params.screenshare) {\n                        const rtcObject = this._findRtcObjectByType('screenshare');\n                        if ((rtcObject && params.screenshare.direction) || (!rtcObject && !params.screenshare.direction)) {\n                            return reject(new NexmoClientError('error:media:update:invalid'));\n                        }\n                    }\n                    return this._handleVideo(params).then(resolve).catch(reject);\n                }).catch(err => reject(err));\n        })\n    }\n\n    _validateUpdateParams(params) {\n        return new Promise((resolve, reject) => {\n            if (params && (params.video || params.screenshare)) {\n                if (params.video && params.screenshare) {\n                    return reject(new NexmoClientError('error:media:update:streams'));\n                }\n            } else {\n                return reject(new NexmoClientError('error:media:update:unsupported'));\n            }\n            resolve();\n        });\n    }\n\n    _closeStream(stream) {\n        stream.getTracks().forEach((track) => {\n            track.stop();\n        });\n    }\n\n    _disableActiveStream() {\n        if (!this.application.activeStream || !this.application.activeStream.rtc_id) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            this.application.session.sendRequest({\n                type: 'rtc:terminate',\n                cid: this.parentConversation.id,\n                from: this.parentConversation.me.id,\n                rtc_id: this.application.activeStream.rtc_id\n            }, (response) => {\n                if (response.type === 'rtc:terminate:success') {\n                    resolve(response.type);\n                } else {\n                    //make sure we have cleaned the objects\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    _cleanConversationProperties() {\n        return Promise.resolve().then(() => {\n            if (this.parentConversation.pc) {\n                this.parentConversation.pc.close();\n            }\n            if (this.parentConversation.remoteMembers) {\n                this.parentConversation.remoteMembers.forEach((member) => {\n                    member.remote_member.emit('media:stream:off', {\n                        remote_member_id: member.remote_member_id,\n                        index: member.streamIndex\n                    });\n                    this._deleteMemberMedia(member);\n                });\n            }\n\n            // stop active stream\n            if (this.application.localStream) {\n                this._closeStream(this.application.localStream);\n            }\n            if (this.application.activeStream && this.application.activeStream.stream) {\n                this._closeStream(this.application.activeStream.stream);\n            }\n            if (this.parentConversation.localStream) {\n                this._closeStream(this.parentConversation.localStream);\n            }\n            delete this.parentConversation.pc;\n            delete this.parentConversation.localStream;\n            this.application.activeStream = {};\n            this.parentConversation.remoteMembers = [];\n            this.parentConversation.releaseGroup('media_module');\n        });\n    }\n\n    _disableLeg(leg_id) {\n        const csRequestPromise = new Promise((resolve, reject) => {\n            this.application.session.sendRequest({\n                type: 'rtc:terminate',\n                cid: this.parentConversation.id,\n                from: this.parentConversation.me.id,\n                rtc_id: leg_id\n            }, (response) => {\n                if (response.type === 'rtc:terminate:success') {\n                    resolve(response.type);\n                } else {\n                    //make sure we have cleaned the objects\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n        const closeResourcesPromise = Promise.resolve().then(() => {\n            if (this.parentConversation.rtcObjects[leg_id].pc) this.parentConversation.rtcObjects[leg_id].pc.close();\n            if (this.parentConversation.rtcObjects[leg_id].localStream) {\n                this._closeStream(this.parentConversation.rtcObjects[leg_id].localStream);\n            }\n        });\n        return Promise.all([csRequestPromise, closeResourcesPromise]).then(() => {\n            this.parentConversation.me.emit(\"media:stream:off\", this.parentConversation.rtcObjects[leg_id].streamIndex);\n            delete this.parentConversation.rtcObjects[leg_id];\n            return Promise.resolve('rtc:terminate:success')\n        }).catch((error) => {\n            return Promise.reject(error);\n        });\n    }\n\n    _sendMuteRequest(rtc_id, type, callback) {\n        let params = {\n            rtc_id: rtc_id\n        };\n        let request = {\n            type: type,\n            cid: this.parentConversation.id,\n            to: this.parentConversation.me.id,\n            from: this.parentConversation.me.id,\n            body: params\n        };\n        this.application.session.sendRequest(request, callback);\n    }\n\n    _enableMediaTracks(tracks, enabled) {\n        tracks.forEach((mediaTrack) => {\n            mediaTrack.enabled = enabled;\n        });\n    }\n\n\t/**\n\t * Send a mute request with the rtc_id and enable/disable the tracks\n\t * If the mute request fails revert the changes in the tracks\n\t * @private\n\t */\n    _setMediaTracksAndMute(rtc_id, tracks, mute, mediaType, mediaSuccess) {\n        this._enableMediaTracks(tracks, !mute);\n        return new Promise((resolve, reject) => {\n            this._sendMuteRequest(rtc_id, mediaType, (response) => {\n                if (response.type === mediaSuccess) {\n                    resolve(response.body);\n                } else {\n                    this._enableMediaTracks(tracks, mute);\n                    reject(new NexmoApiError(response));\n                }\n            })\n        })\n    }\n\n\t/**\n\t * Wait for all the rtc:new requests to be done.\n\t * Even if some of them fail resolve the promise and log a warn\n\t * @private\n\t */\n    _waitAllRtcNewAreCompleted() {\n        return Promise.all(this.rtcNewPromises)\n            .catch(() => {\n                this.log.warn('Some of the enable requests failed.');\n            });\n    }\n\n\t/**\n\t * Mute our member\n\t *\n\t * @param {boolean} [mute=false] true for mute, false for unmute\n\t * @param {boolean} [audio=true] true for audio stream - relevant only in video conversation\n\t * @param {boolean} [video=false] true for video stream - relevant only in video conversation\n\t * @param {number} [streamIndex=0] stream id to set - relevant only in video conversation\n\t * @example <caption>Mute audio stream in non video conversation</caption>\n\t * media.mute(true)\n\t * @example <caption>Mute audio and video streams in video conversation</caption>\n\t * media.mute(true, true, true, 0)\n\t * @example <caption>Mute only video in video conversation</caption>\n\t * media.mute(true, false, true, 0)\n\t */\n    mute(mute = false, audio = true, video = false, streamIndex = 0) {\n        const state = mute ? 'on' : 'off';\n        const audioType = 'audio:mute:' + state;\n        const videoType = 'video:mute:' + state;\n        const audioSuccess = audioType + ':success';\n        const videoSuccess = videoType + ':success';\n\n        return this._waitAllRtcNewAreCompleted()\n            .then(() => {\n                const rtcObject = Object.values(this.parentConversation.rtcObjects).find((rtcObj => rtcObj.streamIndex === streamIndex));\n                if (!rtcObject) {\n                    throw new NexmoClientError('error:media:stream:not-found');\n                }\n\n                let promises = [];\n\n                if (audio) {\n                    const audioTracks = rtcObject.localStream.getAudioTracks();\n                    const audioPromise = this._setMediaTracksAndMute(rtcObject.id, audioTracks, mute, audioType, audioSuccess);\n                    promises.push(audioPromise);\n                }\n\n                if (video) {\n                    const videoTracks = rtcObject.localStream.getVideoTracks();\n                    const videoPromise = this._setMediaTracksAndMute(rtcObject.id, videoTracks, mute, videoType, videoSuccess);\n                    promises.push(videoPromise);\n                }\n\n                return Promise.all(promises);\n            });\n    }\n\n    /**\n     * Earmuff our member\n     *\n     * @param {boolean} [params]\n     *\n     * @returns {Promise}\n     * @private\n     */\n    earmuff(earmuff) {\n        return new Promise((resolve, reject) => {\n            if (this.me === null) {\n                reject(new NexmoClientError(\"error:self\"));\n            } else {\n                let type = 'audio:earmuff:off';\n                if (earmuff) {\n                    type = 'audio:earmuff:on';\n                }\n                this.application.session.sendRequest({\n                    type: type,\n                    cid: this.parentConversation.id,\n                    to: this.parentConversation.me.id\n                }, (response) => {\n                    const onoff = (earmuff) ? 'on' : 'off';\n                    if (response.type === 'audio:earmuff:' + onoff + ':success') {\n                        resolve(response.body);\n                    } else {\n                        reject(new NexmoApiError(response));\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n       * Enable media participation in the conversation for this application (requires WebRTC)\n       * @param {object} params - rtc params\n       * @param {string} params.label - Label is an application defined tag, eg. ‘fullscreen’\n       * @param {object} [params.audio=true] - audio enablement mode. possible values \"both\", \"send_only\", \"receive_only\", \"none\", true or false\n       * * <!-- the following line should be added when deploying video to prod.\n       * @param {object} [params.video=false] - video enablement mode. possible values \"both\", \"send_only\", \"receive_only\", \"none\", true or false\n       * @param {object} [params.video={direction: 'some_direction', constraints: constraints_object}] - video enablement mode.\n       * possible values for direction \"both\", \"send_only\", \"receive_only\", \"none\", true or false\n       * @param {object} [params.screenshare=false] -screen sharing enablement mode. possible values \"send_only\", \"none\", true or false\n       * @param {object} [params.screenshare={direction: 'some_direction'}] - screen sharing enablement mode. possible values for direction \"send_only\", \"none\", true or false  -->\n       * @returns {Promise<MediaStream>}\n       * @example <caption>Enable media in this conversation</caption>\n       * function enable() {\n       *   conversation.media.enable()\n       *      .then((stream) => {\n                  const media = document.createElement(\"audio\");\n                  const source = document.createElement(\"source\");\n                  const media_div = document.createElement(\"div\");\n\n                  media.appendChild(source);\n                  media_div.appendChild(media);\n                  document.insertBefore(media_div);\n\n                  // Older browsers may not have srcObject\n                  if (\"srcObject\" in media) {\n                      media.srcObject = stream;\n                  } else {\n                      // Avoid using this in new browsers, as it is going away.\n                      media.src = window.URL.createObjectURL(stream);\n                  }\n\n                  media.onloadedmetadata = (e) => {\n                      media.play();\n                  };\n          *\n       * \t\t }).catch((error) => {\n       *           console.log(error);\n       *       });\n       * }\n       *\n       *\n       *\n       **/\n    enable(params) {\n        return new Promise((resolve, reject) => {\n            const onClientError = (error) => {\n                this.log.error(error);\n                reject(new NexmoClientError(error));\n            }\n            if (this.parentConversation.me === null) {\n                reject(new NexmoClientError('error:self'));\n            } else {\n                if (params && this.parentConversation.is_video_conversation) {\n                    return this._handleVideo(params).catch(reject)\n                        .then(() => {\n                            const types = ['video', 'screenshare'];\n                            let disablePromises = [];\n                            types.forEach((type) => {\n                                if (!params[type]) {\n                                    let rtcObjectWithType = this._findRtcObjectByType(type);\n                                    if (rtcObjectWithType) {\n                                        disablePromises.push(this._disableLeg(rtcObjectWithType.id));\n                                    }\n                                }\n                            });\n                            return Promise.all(disablePromises)\n                                .then(resolve)\n                                .catch(reject);\n                        })\n                }\n                if (this.application.activeStream.rtc_id) {\n                    return onClientError(new NexmoClientError('error:media:already-connecting'));\n                }\n                // this needs to happen soon before we use pc.trace\n                // ps.trace is injected in rtcstats module\n                if (this.rtcstats.emit_events) {\n                    this._initStatsEvents();\n                }\n                return this._handleAudio(params)\n                    .then((result) => resolve(result))\n                    .catch((error) => reject(error));\n            }\n        });\n    }\n\n\t/**\n\t * Handles the enabling of audio only stream with rtc:new\n\t * @private\n\t */\n    _handleAudio(params) {\n        const rtcNewPromise = new Promise((resolve, reject) => {\n            const onClientError = (error) => {\n                this.log.error(error);\n                reject(new NexmoClientError(error));\n            }\n            const streamIndex = this.streamIndex;\n            this.streamIndex++;\n            this.rtcHelper.getUserAudio()\n                .then((localStream) => {\n                    if (this.application.activeStream.rtc_id) {\n                        return onClientError(new NexmoClientError('error:media:already-connecting'));\n                    }\n                    const clientId = Utils.allocateUUID();\n                    const pc_config = {\n                        'iceTransportPolicy': 'all',\n                        'bundlePolicy': 'balanced',\n                        'rtcpMuxPolicy': 'require',\n                        'iceCandidatePoolSize': '0'\n                    };\n                    if (this.application.session.config && this.application.session.config.iceServers) {\n                        pc_config.iceServers = this.application.session.config.iceServers\n                    }\n                    const pc = this.rtcHelper.createRTCPeerConnection(pc_config, {\n                        optional: [{\n                            'DtlsSrtpKeyAgreement': 'true'\n                        }]\n                    }, clientId);\n\n                    pc.trace('conversation_id', this.parentConversation.id);\n                    pc.trace('member_id', this.parentConversation.me.id);\n\n                    this.parentConversation.pc = pc;\n                    this.application.activeStream.pc = pc;\n\n                    this.parentConversation.localStream = localStream;\n                    pc.ontrack = (evt) => {\n                        this.application.activeStream.stream = evt.streams[0];\n                        resolve(evt.streams[0]);\n                    };\n                    pc.addStream(localStream);\n\n                    pc.onnegotiationneeded = () => {\n                        pc.createOffer().then((offer) => {\n                            return pc.setLocalDescription(offer);\n                        }).then(() => {\n\n                            // Send the offer to the remote peer through the signaling server\n                        }).catch(onClientError);\n                    }\n\n                    pc.oniceconnectionstatechange = (status) => {\n                        switch (pc.iceConnectionState) {\n                            //https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\n                            case 'disconnected':\n                                this.log.warn('One or more transports is disconnected', pc.iceConnectionState);\n                                break;\n                            case 'failed':\n                                onClientError(status);\n                                this.log.warn('One or more transports has terminated unexpectedly or in an error', status);\n                                break;\n                            default:\n                                this.log.debug('The ice connection status changed', pc.iceConnectionState);\n                                break;\n                        }\n                    }\n                    let gatheringTimer = null;\n                    let rtc_sent = false;\n                    pc.onicegatheringstatechange = () => {\n                        const do_gatherDone = () => {\n                            if (!this.parentConversation.pc) {\n                                return;\n                            }\n                            const event_to_emit = {\n                                type: 'rtc:new',\n                                cid: this.parentConversation.id,\n                                from: this.parentConversation.me.id,\n                                body: {\n                                    offer: this.parentConversation.pc.localDescription\n                                }\n                            }\n                            if (params && params.label) {\n                                event_to_emit.label = params.label;\n                            }\n                            this.application.session.sendRequest(event_to_emit, (response) => {\n                                if (response.type === 'rtc:new:success') {\n                                    const rtc_id = response.body.rtc_id;\n                                    this.application.activeStream.rtc_id = rtc_id;\n                                    pc.trace('rtc_id', rtc_id);\n                                    this.parentConversation.rtcObjects[rtc_id] = {\n                                        id: rtc_id,\n                                        pc: pc,\n                                        localStream: localStream,\n                                        // type: 'audio,\n                                        streamIndex: streamIndex\n                                    };\n                                } else {\n                                    reject(new NexmoApiError(response));\n                                }\n                            });\n                        };\n\n                        switch (pc.iceGatheringState) {\n                            case 'new':\n\n                                this.log.debug('ice gathering new');\n                                break;\n                            case 'complete':\n                                window.clearTimeout(gatheringTimer);\n                                gatheringTimer = null;\n                                if (!rtc_sent) {\n                                    do_gatherDone();\n                                }\n                                this.log.debug('ice gathering complete');\n\n                                break;\n                            case 'gathering':\n                                gatheringTimer = setTimeout(() => {\n                                    do_gatherDone();\n                                    rtc_sent = true;\n                                }, 2000);\n                                this.log.debug('ice gathering gathering');\n                                break;\n                        }\n                    }\n                })\n                .then(() => {\n                    // We want to be able to handle these events, for this  member, before they get propagated out\n                    this.parentConversation.once('rtc:answer', 'media_module', (event) => {\n\n                        if (!this.application.activeStream.rtc_id) {\n                            this.log.warn(\"RTC: rtc:new hasn't been resolved yet\");\n                        } else if (this.application.activeStream.rtc_id !== event.body.rtc_id) {\n                            this.log.warn(\"RTC: skipping  rtc answer for different rtc_id\");\n                            return;\n                        }\n                        if (!this.parentConversation.pc) {\n                            this.log.warn('RTC: received an answer too late');\n                            return;\n                        }\n                        this.parentConversation.pc.setRemoteDescription(new RTCSessionDescription({\n                            type: 'answer',\n                            sdp: event.body.answer\n                        }),\n                            () => {\n                                this.log.debug('remote description is set');\n                            },\n                            onClientError);\n                    });\n                    //on member delete (our this)\n                    //terminate media\n                    this.parentConversation.on('member:left', 'media_module', (member) => {\n                        if (member.user.id === this.application.me.id && this.application.activeStream) {\n                            this.disable();\n                        }\n                    });\n                })\n                .catch((error) => {\n                    reject(new NexmoClientError(error));\n                });\n        });\n        this.rtcNewPromises.push(rtcNewPromise);\n\n        return rtcNewPromise;\n    }\n\n    /**\n     * Disable media particiaption in the conversation for this application\n     *\n     * @returns {Promise}\n     * @example\n     *\n     * function disable() {\n     *   conversation.media.disable()\n     *      .then((response) => {\n     *       }).catch((error) => {\n     *           console.log(error);\n     *       });\n     * }\n     *\n     **/\n    disable() {\n        if (this.rtcStats) {\n            this.rtcStats.disable();\n        }\n        let promises = [];\n        promises.push(this._disableActiveStream());\n        promises.push(this._cleanConversationProperties());\n\n        for (const leg_id in this.parentConversation.rtcObjects) {\n            promises.push(this._disableLeg(leg_id));\n        }\n        return Promise.all(promises);\n    }\n\n    /**\n     * Play a voice text in a conversation\n     * @param {object} params\n     * @param {string} params.text - the text to say in the conversation\n     * @param {string} params.voice_name -\n     * @param {number} params.level - [0] -\n     * @param {boolean} params.queue -\n     * @param {boolean} params.loop -\n     *\n     * @returns {Promise<Event>}\n     * @example\n     *   conversation.media.say({text:'hi'})\n     **/\n    sayText(params) {\n        return new Promise((resolve, reject) => {\n            const msg = {\n                type: 'audio:say',\n                cid: this.parentConversation.id,\n                body: {\n                    text: params.text,\n                    voice_name: params.voice_name || 'Amy',\n                    level: params.level || 1,\n                    queue: params.queue || true,\n                    loop: params.loop || 1,\n                    ssml: params.ssml || false\n                }\n            };\n            this.application.session.sendRequest(msg, (response) => {\n                if (response.type === 'audio:say:success') {\n                    msg.id = response.body.id;\n                    resolve(new Event(this.parentConversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Record the audio stream in a conversation\n     * @param {object} params\n     * @param {string} params.format = (mp3, wav, ogg)\n     * @param {boolean} params.streamed -\n     * @param {number} params.validity_time -\n     * @param {boolean} params.beep_start -\n     * @param {boolean} params.beep_stop -~\n     * @param {boolean} params.detect_speech -\n     *\n     * @returns {Promise<Recording>}\n     * @example\n     *   conversation.audio.record()\n     */\n    record(params) {\n        return new Promise((resolve, reject) => {\n            const msg = {\n                type: 'audio:record',\n                cid: this.id,\n                body: {\n                    format: params.format,\n                    destination_url: params.destination_url,\n                    streamed: params.streamed,\n                    validity_time: params.validity_time,\n                    beep_start: params.beep_start,\n                    beep_stop: params.beep_stop,\n                    detect_speech: params.detect_speech\n                }\n            };\n            this.application.session.sendRequest(msg, (response) => {\n                if (response.type === 'audio:record:success') {\n                    msg.id = response.body.id;\n                    resolve(new Recording(this.parentConversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Download the recoding file\n     * @param {string} url the recording url coming in the recording event\n     * @returns {Promise<Event>}\n     */\n    fetchRecording(url) {\n        return new Promise((resolve, reject) => {\n            if (!localStorage.getItem(\"NXMO_user_data\")) {\n                reject(new NexmoClientError(\"error:user:relogin\"));\n            } else {\n                const xhr = new XMLHttpRequest();\n                const token = JSON.parse(localStorage.getItem(\"NXMO_user_data\")).token;\n                xhr.open(\"GET\", url);\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n                xhr.setRequestHeader('Content-Type', 'application/json');\n                xhr.responseType = 'blob';\n                xhr.onload = () => {\n                    if (xhr.readyState === 4 && xhr.status === 200) {\n                        const blob = new Blob([xhr.response], {\n                            type: 'audio/ogg'\n                        });\n                        resolve(URL.createObjectUrl(blob));\n                    } else {\n                        reject(new NexmoClientError(\"error:fetch-recording\"));\n                    }\n                };\n                xhr.send();\n            }\n        });\n    }\n\n    /**\n     * Play an audio stream in a conversation\n     * @returns {Promise<Event>}\n     */\n    playStream(params) {\n        return new Promise((resolve, reject) => {\n            const msg = {\n                type: 'audio:play',\n                cid: this.parentConversation.id,\n                body: params\n            };\n            this.application.session.sendRequest(msg, (response) => {\n                if (response.type === 'audio:play:success') {\n                    msg.id = response.body.id;\n                    resolve(new Event(this.parentConversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Send start ringing event\n     * @returns {Promise<Event>}\n     * @example\n     * Send ringing event\n     * function startRinging() {\n     *   conversation.media.startRinging()\n     *      .then((response) => {\n     *       }).catch((error) => {\n     *           console.log(error);\n     *       });\n     * }\n     *\n     * conversation.on('audio:ringing:start', (data) => {\n     * console.log(\"ringing\");\n     * });\n     */\n    startRinging() {\n        return new Promise((resolve, reject) => {\n            const msg = {\n                type: 'audio:ringing:start',\n                cid: this.parentConversation.id,\n                from: this.parentConversation.me.id,\n                body: {}\n            };\n            this.application.session.sendRequest(msg, (response) => {\n                if (response.type === 'audio:ringing:start:success') {\n                    resolve(new Event(this.parentConversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Send stop ringing event\n     * @returns {Promise<Event>}\n     * @example\n     * Send ringing event\n     * function stopRinging() {\n     *   conversation.media.stopRinging()\n     *      .then(function(response) {\n     *       }).catch(function(error) {\n     *           console.log(error);\n     *       });\n     * }\n     *\n     * conversation.on('audio:ringing:stop', function(data)){\n     * console.log(\"ringing stopped\");\n     * }\n     */\n    stopRinging() {\n        return new Promise((resolve, reject) => {\n            const msg = {\n                type: 'audio:ringing:stop',\n                cid: this.parentConversation.id,\n                from: this.parentConversation.me.id,\n                body: {}\n            };\n            this.application.session.sendRequest(msg, (response) => {\n                if (response.type === 'audio:ringing:stop:success') {\n                    resolve(new Event(this.parentConversation, response));\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n}\n\nmodule.exports = Media;\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\n// Utility methods.\nmodule.exports = {\n  extractVersion: extractVersion,\n  wrapPeerConnectionEvent: wrapPeerConnectionEvent,\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    if (navigator.mozGetUserMedia) { // Firefox.\n      result.browser = 'firefox';\n      result.version = extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera.\n      // Version matches Chrome/WebRTC version.\n      result.browser = 'chrome';\n      result.version = extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (window.RTCPeerConnection &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n      result.browser = 'safari';\n      result.version = extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  }\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/*\n * Nexmo Stitch SDK\n *  Call Object Model\n *\n * Copyright (c) Nexmo Inc. 2018\n */\n\nconst WildEmitter = require('wildemitter');\nconst ConversationClientError = require('../conversationClientError');\nconst logger = require('loglevel');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * Conversation Call Object.\n * @class Call\n * @param {Application} application - The Application object.\n * @param {Conversation} conversation - The Conversation object that belongs to this call.\n * @param {Member} from - The member that initiated the call.\n * @property {Application} application -  The Application object that the call belongs to.\n * @property {Conversation} conversation -  The Conversation object that belongs to this call.\n * @property {Member} from - The caller. The member object of the caller (not a reference to the one in conversation.members)\n * @property {Member[]} to - The callees. The members that receive the call (not a reference to conversation.members)\n * @property {Call.CALL_STATUS} this.CALL_STATUS=\"started\" - the available call statuses\n * @property {Call.CALL_DIRECTION} direction - the Direction of the call, Outbound, Inbound\n * @property {Call.MEMBER_CALL_STATES} MEMBER_CALL_STATES - the available member call states\n * @property {Call.STATUS_PERMITTED_FLOW} STATUS_PERMITTED_FLOW - the permitted call status transition map, describes the \"from\" and allowed \"to\" transitions\n * @emits Application#member:call\n * @emits Application#call:status:changed\n * @emits Call#member:call:state\n */\n\n/**\n * Application listening for calls.\n *\n * @event Application#member:call\n *\n * @property {Member} member - the member that initiated the call\n * @property {Call} call -  resolves the call object\n *\n * @example <caption>listen for calls in Application level</caption>\n *  application.on(\"member:call\", (member, call) => {\n *              console.log(\"Call \", call);\n *              });\n *      });\n */\n\n/**\n * Call listening for member state changed events.\n *\n * @event Call#member:call:state\n * @property {Member} from - the member that is changed\n * @property {Call.MEMBER_CALL_STATES} state - the new state\n * @property {Event} event -  the actual event\n * @example <caption>listen for member state events</caption>\n *  call.on(\"member:call:state\",(from, state, event) => {\n *              console.log(\"member: \" + member.user.name + \" has \" + state);\n *       });\n *   });\n */\n\n/**\n * Call listening for call status changed events.\n *\n * @event Application#call:status:changed\n * @property {Call} call -  the actual event\n * @example <caption>listen for call status events</caption>\n *  application.on(\"call:status:changed\",(call) => {\n *              console.log(\"call: \" + call.status);\n *       });\n *   });\n */\nclass Call {\n\tconstructor(application, conversation, from) {\n\t\tthis.application = application;\n\t\tthis.log = logger.getLogger(this.constructor.name);\n\t\tthis.from = from;\n\t\tthis.conversation = null;\n\n\t\t/**\n\t\t * Enum for Call status.\n\t\t * @readonly\n\t\t * @enum {string}\n\t\t * @alias Call.CALL_STATUS\n\t\t */\n\t\tthis.CALL_STATUS = {\n\t\t\t/** The Call is in started status */\n\t\t\tSTARTED: 'started',\n\t\t\t/** The Call is in ringing status */\n\t\t\tRINGING: 'ringing',\n\t\t\t/** The Call is in answered status */\n\t\t\tANSWERED: 'answered',\n\t\t\t/** The Call is in completed status */\n\t\t\tCOMPLETED: 'completed',\n\t\t\t/** The Call is in busy status */\n\t\t\tBUSY: 'busy',\n\t\t\t/** The Call is in timeout status */\n\t\t\tTIMEOUT: 'timeout',\n\t\t\t/** The Call is in unanswered status */\n\t\t\tUNANSWERED: 'unanswered',\n\t\t\t/** The Call is in rejected status */\n\t\t\tREJECTED: 'rejected',\n\t\t\t/** The Call is in failed status */\n\t\t\tFAILED: 'failed'\n\t\t};\n\n\t\t/**\n\t\t * Enum for Call direction.\n\t\t * @readonly\n\t\t * @enum {string}\n\t\t * @alias Call.CALL_DIRECTION\n\t\t */\n\t\tthis.CALL_DIRECTION = {\n\t\t\t/** The Call started from another end */\n\t\t\tINBOUND: 'inbound',\n\t\t\t/** The Call started from this client */\n\t\t\tOUTBOUND: 'outbound'\n\t\t};\n\t\tObject.freeze(this.CALL_DIRECTION);\n\n\t\t/**\n\t\t * Enum for Call Member states.\n\t\t * @readonly\n\t\t * @alias Call.MEMBER_CALL_STATES\n\t\t * @enum {string}\n\t\t */\n\t\tthis.MEMBER_CALL_STATES = {\n\t\t\t/** A Member is in ringing state */\n\t\t\tRINGING: 'ringing',\n\t\t\t/** A Member hung up the call */\n\t\t\tHUNGUP: 'hungup',\n\t\t\t/** A Member answered the call */\n\t\t\tANSWERED: 'answered',\n\t\t\t/** A Member rejected the call */\n\t\t\tREJECTED: 'rejected'\n\t\t}\n\t\tObject.freeze(this.MEMBER_CALL_STATES);\n\n\t\t/**\n\t\t * Enum for the permitted call status transition.\n\t\t * @readonly\n\t\t * @alias Call.STATUS_PERMITTED_FLOW\n\t\t * @enum {Map<string, Set<Call.CALL_STATUS>>}\n\t\t */\n\t\tthis.STATUS_PERMITTED_FLOW = new Map([\n\t\t\t/** Permitted transition array from STARTED  */\n\t\t\t[\"STARTED\", new Set([\n\t\t\t\tthis.CALL_STATUS.RINGING,\n\t\t\t\tthis.CALL_STATUS.ANSWERED,\n\t\t\t\tthis.CALL_STATUS.FAILED,\n\t\t\t\tthis.CALL_STATUS.TIMEOUT,\n\t\t\t\tthis.CALL_STATUS.UNANSWERED,\n\t\t\t\tthis.CALL_STATUS.REJECTED,\n\t\t\t\tthis.CALL_STATUS.BUSY\n\t\t\t])],\n\t\t\t/** Permitted transition array from RINGING  */\n\t\t\t[\"RINGING\", new Set([\n\t\t\t\tthis.CALL_STATUS.ANSWERED,\n\t\t\t\tthis.CALL_STATUS.FAILED,\n\t\t\t\tthis.CALL_STATUS.TIMEOUT,\n\t\t\t\tthis.CALL_STATUS.UNANSWERED,\n\t\t\t\tthis.CALL_STATUS.REJECTED,\n\t\t\t\tthis.CALL_STATUS.BUSY\n\t\t\t])],\n\t\t\t/** Permitted transition set from ANSWERED  */\n\t\t\t[\"ANSWERED\", new Set([\n\t\t\t\tthis.CALL_STATUS.COMPLETED,\n\t\t\t\tthis.CALL_STATUS.FAILED\n\t\t\t])]\n\t\t]);\n\t\tObject.freeze(this.STATUS_PERMITTED_FLOW);\n\n\t\tthis.status = null;\n\t\tthis.direction = this.CALL_DIRECTION.INBOUND;\n\t\tthis._setupConversationObject(conversation);\n\t\tWildEmitter.mixin(Call);\n\t}\n\t/**\n\t * Enable Call stats to be emitted in application.call.on('call:stats:report');\n\t * @private\n\t */\n\t_enableStatsEvents() {\n\t\tif (this.application.session.config && this.application.session.config.rtcstats && !this.application.session.config.rtcstats.emit_events) {\n\t\t\treturn this.conversation.media._enableStatsEvents();\n\t\t}\n\t}\n\n\t/**\n\t * Attach member event listeners from the conversation\n\t * map them to member:call:state events\n\t * provided states member: hungup, rejected and answered\n\t * @private\n\t */\n\t_attachCallListeners() {\n\t\t// Conversation level listeners\n\t\tthis.conversation.releaseGroup('call_module');\n\t\tthis.conversation.on('member:left', 'call_module', (from, event) => {\n\t\t\tlet state = null;\n\t\t\tif (from.timestamp.joined) {\n\t\t\t\tstate = this.MEMBER_CALL_STATES.HUNGUP;\n\t\t\t} else {\n\t\t\t\tstate = this.MEMBER_CALL_STATES.REJECTED;\n\t\t\t}\n\t\t\tthis.emit('member:call:state', from, state, event);\n\t\t\tthis._hangUpIfAllLeft();\n\t\t});\n\t\tthis.conversation.on('member:joined', 'call_module', (from, event) => {\n\t\t\tconst state = this.MEMBER_CALL_STATES.ANSWERED;\n\t\t\tthis.emit('member:call:state', from, state, event);\n\t\t});\n\t\tthis.conversation.on('member:invited', 'call_module', (from, event) => {\n\t\t\tconst state = this.MEMBER_CALL_STATES.RINGING;\n\t\t\tthis.emit('member:call:state', from, state, event);\n\t\t});\n\t\tthis.conversation.on('member:media', 'call_module', (from, event) => {\n\t\t\tif (this.application.calls && this.application.calls.has(this.conversation.id)) {\n\t\t\t\tthis.application.calls.get(this.conversation.id)._handleStatusChange(event);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Validate the current call status transition\n\t * If a transition is not defined, return false\n\t * @param {string} status the status to validate\n\t * @returns {boolean} false if the transition is not permitted\n\t * @private\n\t */\n\t_isValidStatusTransition(status) {\n\t\tif (!status) {\n\t\t\tthrow new NexmoClientError(`Provide the status to validate the transition from '${this.status}'`);\n\t\t}\n\t\t// if the call object is just initialised allow any state\n\t\tif (!this.status) {\n\t\t\treturn true;\n\t\t}\n\t\tconst current_status = this.status.toUpperCase();\n\t\tif (!this.STATUS_PERMITTED_FLOW.has(current_status)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.status === status) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (this.STATUS_PERMITTED_FLOW.get(current_status).has(status))\n\t}\n\n\t/**\n\t * Go through the members of the conversation and if .me is the only one (JOINED or INVITED)\n\t * call call.hangUp().\n\t * @returns {Promise} - empty promise or the call.hangUp promise chain\n\t * @private\n\t */\n\t_hangUpIfAllLeft() {\n\t\tif (!this.conversation.me || this.conversation.me.state === \"LEFT\" || Object.keys(this.conversation.members).length <= 1) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tfor (const member_id in this.conversation.members) {\n\t\t\tif (!this.conversation.members[member_id]) continue;\n\t\t\tconst member = this.conversation.members[member_id];\n\t\t\tif (member.state !== \"LEFT\" && (this.conversation.me.user.id !== member.user.id)) {\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\t\t}\n\t\treturn this.hangUp();\n\t}\n\n\t/**\n\t * Process raw events to figure out the call status\n\t * @private\n\t */\n\t_handleStatusChange(event) {\n\t\t// for knocking case the conversation object is not yet set in the call. We know the action is initiated from us\n\t\tconst _isEventFromMe = (this.conversation) ? this.conversation.me.id === event.from : true;\n\t\tconst _isOutbound = this.direction === this.CALL_DIRECTION.OUTBOUND;\n\n\t\tconst _handleStatusChangeMap = {\n\t\t\t'member:joined': () => {\n\t\t\t\tif (event.body.channel && event.body.channel.knocking_id) {\n\t\t\t\t\treturn this.conversation.media.enable()\n\t\t\t\t\t\t.then((stream) => {\n\t\t\t\t\t\t\tthis.conversation.media.rtcHelper._playAudioStream(stream);\n\t\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.STARTED);\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.FAILED);\n\t\t\t\t\t\t\tthis.log.error(error);\n\t\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t},\n\t\t\t'member:invited': () => {\n\t\t\t\tif (event.body.invited_by === null\n\t\t\t\t\t&& event.body.user.media\n\t\t\t\t\t&& event.body.user.media.audio) {\n\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.STARTED);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t},\n\t\t\t'member:left': () => {\n\t\t\t\tif (this.status === this.CALL_STATUS.ANSWERED) {\n\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.COMPLETED);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t} else {\n\t\t\t\t\tif (_isEventFromMe && _isOutbound || !_isEventFromMe && !_isOutbound) {\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.UNANSWERED);\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.REJECTED);\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'member:media': () => {\n\t\t\t\tif (this.status !== this.CALL_STATUS.ANSWERED && event.body.audio) {\n\t\t\t\t\tif (!_isEventFromMe || !_isOutbound) {\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.ANSWERED);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t},\n\t\t\t'sip:ringing': () => {\n\t\t\t\tif (this.status !== this.CALL_STATUS.RINGING) {\n\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.RINGING);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t},\n\t\t\t'sip:hangup': () => {\n\t\t\t\tswitch (event.body.reason.sip_code) {\n\t\t\t\t\tcase 486:\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.BUSY);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 487:\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.TIMEOUT);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 403:\n\t\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.FAILED);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t},\n\t\t\t'knocking:delete:success': () => {\n\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.UNANSWERED);\n\t\t\t\treturn Promise.resolve();\n\n\t\t\t}\n\t\t};\n\t\tif (_handleStatusChangeMap.hasOwnProperty(event.type)) {\n\t\t\treturn _handleStatusChangeMap[event.type].call(this);\n\t\t}\n\t}\n\n\t/**\n\t * Set the conversation object of the Call\n\t * update call.from, and call.to attributes based on the conversation members\n\t * @private\n\t */\n\t_setupConversationObject(conversation) {\n\t\tif (!conversation) return;\n\t\tthis.conversation = conversation;\n\t\tif (!conversation.me) {\n\t\t\tthis.log.debug(\"missing own member object iin conversation\");\n\t\t} else {\n\t\t\tthis.to = Object.assign({}, conversation.members);\n\t\t\tif (this.from) {\n\t\t\t\tdelete this.to[this.from.id];\n\t\t\t}\n\t\t}\n\t\tthis._attachCallListeners();\n\t}\n\n\t/**\n\t * Set the from object of the Call\n\t * @private\n\t */\n\t_setFrom(from) {\n\t\tthis.from = from;\n\t}\n\n\t/**\n\t * Set the call.status and emit a call:status:changed event\n\t *\n\t * @param {Call.CALL_STATUS} this.CALL_STATUS the call status to set\n\t * @emits Application#call:status:changed\n\t * @private\n\t */\n\t_setStatusAndEmit(status) {\n\t\tif (!this._isValidStatusTransition(status)) {\n\t\t\tthis.log.warn(`status attempt switch from ${this.status} to ${status}`);\n\t\t\treturn;\n\t\t}\n\t\tthis.status = status;\n\t\tthis.application.emit(\"call:status:changed\", this);\n\t}\n\n\t/**\n\t * Answers an incoming call\n\t * Join the conversation that you are invited\n\t * Create autoplay Audio object\n\t *\n\t * @returns {Promise<Audio>}\n\t */\n\n\tanswer() {\n\t\tif (this.conversation) {\n\t\t\treturn this.conversation.join()\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.conversation.media.enable().then(this.conversation.media.rtcHelper._playAudioStream)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.FAILED);\n\t\t\t\t\tthis.log.error(error);\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.reject(new NexmoClientError(\"error:call:answer\"));\n\t\t}\n\t}\n\n\t/**\n\t * Trigger the call flow for the input users.\n\t * Create a conversation with prefix name \"CALL_\"\n\t * and invite all the users.\n\t * If at least one user is successfully invited, enable the audio.\n\t * The audio stream will be automatically attached to start playing\n\t *\n\t * @param {string[]} usernames the usernames of the users to call\n\t * @returns {Promise[]} an array of the invite promises for the provided usernames\n\t * @private\n\t */\n\tcreateCall(usernames) {\n\t\tif (!usernames || !Array.isArray(usernames) || usernames.length === 0) {\n\t\t\treturn Promise.reject(new NexmoClientError(\"error:application:call:params\"));\n\t\t}\n\n\t\treturn this.application.newConversationAndJoin(\n\t\t\t{ display_name: \"CALL_\" + this.application.me.name + \"_\" + usernames.join(\"_\").replace(\" \", \"\") })\n\t\t\t.then((conversation) => {\n\t\t\t\tthis.from = conversation.me;\n\t\t\t\tthis.successful_invited_members = [];\n\t\t\t\tconst invites = usernames.map((username) => {\n\t\t\t\t\t//check all invites, if at least one is resolved enable audio\n\t\t\t\t\t// we need to catch rejections to allow all the chain to go through (all invites)\n\t\t\t\t\t// we then catch-reject a promise so that the errors are passing through the end of the chain\n\t\t\t\t\treturn conversation.inviteWithAudio({ user_name: username })\n\t\t\t\t\t\t.then((member) => {\n\t\t\t\t\t\t\tthis.successful_invited_members.push(member);\n\t\t\t\t\t\t\treturn Promise.resolve(member);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\tthis.log.warn(error);\n\t\t\t\t\t\t\t// resolve the error to allow the promise.all to collect\n\t\t\t\t\t\t\t// and return all the promises\n\t\t\t\t\t\t\treturn Promise.resolve(error);\n\t\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\t//helper function to process in Promise.all() the failed invites too\n\t\t\t\tconst process_invites = () => {\n\t\t\t\t\tif (this.successful_invited_members.length > 0) {\n\t\t\t\t\t\treturn conversation.media.enable({ audio: { muted: false, earmuffed: false } })\n\t\t\t\t\t\t\t.then((stream) => {\n\t\t\t\t\t\t\t\tconversation.media.rtcHelper._playAudioStream(stream);\n\t\t\t\t\t\t\t\treturn Promise.resolve(invites);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(invites);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t// we need to continue the invites even if one fails,\n\t\t\t\t// in process_invites we do the check if at least one was successful\n\t\t\t\treturn Promise.all(invites)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis._setupConversationObject(conversation);\n\t\t\t\t\t\treturn process_invites();\n\t\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.log.warn(error);\n\t\t\t\tthis._setStatusAndEmit(this.CALL_STATUS.FAILED);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t});\n\t}\n\n\t/**\n\t * Trigger the call flow for the phone call.\n\t * Create a knocking event\n\t *\n\t * @param {string} phoneNumber the phone number to call\n\t * @returns {Promise}\n\t * @private\n\t */\n\tcreatePhoneCall(phoneNumber) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.application.session.sendRequest({\n\t\t\t\ttype: 'knocking:new',\n\t\t\t\tbody: {\n\t\t\t\t\tchannel: {\n\t\t\t\t\t\ttype: \"app\",\n\t\t\t\t\t\tfrom: {\n\t\t\t\t\t\t\ttype: \"app\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tto: {\n\t\t\t\t\t\t\ttype: \"phone\",\n\t\t\t\t\t\t\tnumber: phoneNumber\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, (response) => {\n\t\t\t\tif (response.type === 'knocking:new:success') {\n\t\t\t\t\tresolve(response);\n\t\t\t\t} else {\n\t\t\t\t\treject(new NexmoApiError(response));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\t/**\n\t * Hangs up the call\n\t *\n\t * If there is a knocking active, do a knocking:delete\n\t * otherwise\n\t * Leave from the conversation\n\t * Disable the audio\n\t *\n\t * @returns {Promise}\n\t */\n\thangUp() {\n\t\tif (this.conversation) {\n\t\t\tthis.conversation.media.disable();\n\t\t}\n\t\tif (!this.knocking_id) {\n\t\t\treturn this.conversation.leave();\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.application.session.sendRequest({\n\t\t\t\t\ttype: 'knocking:delete',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tknocking_id: this.knocking_id\n\t\t\t\t\t}\n\t\t\t\t}, (response) => {\n\t\t\t\t\tif (response.type === 'knocking:delete:success') {\n\t\t\t\t\t\tconst call = this.application._call_draft_list.get(this.knocking_id);\n\t\t\t\t\t\tcall._handleStatusChange(response);\n\t\t\t\t\t\tthis.application._call_draft_list.delete(this.knocking_id);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Don't switch yet to fail state, it could be an expected race between knocking:delete and conversation.leave\n\t\t\t\t\t\tif (!this.conversation) {\n\t\t\t\t\t\t\tthis.log.warn(\"Problem cancelling the call: Knocking cancel failed and Conversation.leave not available\");\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.conversation.leave()\n\t\t\t\t\t\t\t\t.then(resolve).catch(reject);\n\t\t\t\t\t\t\tthis.log.warn(new NexmoApiError(response));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Rejects an incoming call\n\t * Leave from the conversation that you are invited\n\t *\n\t * @returns {Promise}\n\t */\n\treject() {\n\t\tif (this.conversation) {\n\t\t\treturn this.conversation.leave();\n\t\t} else {\n\t\t\treturn Promise.reject(new NexmoClientError(\"error:call:reject\"));\n\t\t}\n\t}\n}\nmodule.exports = Call;\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*\n * Nexmo Stitch SDK\n *  Event Object Model\n *\n * Copyright (c) Nexmo Inc. 2017\n */\n\nconst WildEmitter = require('wildemitter');\nconst ConversationClientError = require('../conversationClientError');\n\nconst NexmoApiError = ConversationClientError.NexmoApiError;\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * Conversation Event Object.\n * @class Event\n */\nclass Event {\n    constructor(conversation, params) {\n        this.conversation = conversation;\n        if (params) {\n            for (const key in params) {\n                switch (key) {\n                    case \"type\":\n                        this.type = params.type;\n                        break;\n                    case \"cid\":\n                        this.cid = params.cid;\n                        break;\n                    case \"from\":\n                        this.from = params.from;\n                        break;\n                    case \"timestamp\":\n                        this.timestamp = params.timestamp;\n                        break;\n                    case \"id\":\n                        this.id = params.id;\n                        break;\n                    case \"state\":\n                        this.state = params.state;\n                        break;\n                    case \"index\":\n                        this.index = params.index;\n                        break;\n                    case \"body\":\n                        this.body = params.body;\n                        if (this.body.user && this.body.user.user_id) {\n                            this.body.user.id = this.body.user.user_id;\n                            delete this.body.user.user_id;\n                        }\n                        break;\n                }\n            }\n        }\n        WildEmitter.mixin(Event);\n    }\n\n    /**\n     * Delete the event\n     * @param {number} [event_id=this.event_id] if the event id param is not present, \"this\" event will be default\n     * @returns {Promise}\n     * @private\n     */\n    del(event_id = this.id) {\n        return new Promise((resolve, reject) => {\n            this.conversation.application.session.sendRequest({\n                type: 'event:delete',\n                cid: this.conversation.id,\n                from: this.conversation.me.id,\n                body: {\n                    event_id: event_id\n                }\n            }, (response) => {\n                if (response.type === 'event:delete:success') {\n                    resolve();\n                } else {\n                    reject(new NexmoApiError(response));\n                }\n            });\n        });\n    }\n\n    /**\n     * Mark as Delivered the event\n     * @param {number} [event_id=this.event_id] if the event id is not provided, the this event will be used\n     * @returns {Promise}\n     * @private\n     */\n    delivered(event_id = this.id) {\n        if (this.type !== \"text\" && this.type !== \"image\") {\n            this.type = \"event\";\n        }\n        return new Promise((resolve, reject) => {\n            if (this.conversation.me.id === this.from) {\n                reject(new NexmoClientError(\"error:delivered:own-message\"));\n            } else if (this.state && this.state.delivered_to && this.state.delivered_to[this.conversation.me.id]) {\n                reject(new NexmoClientError(\"error:already-delivered\"));\n            } else {\n                const params = {\n                    event_id: event_id\n                };\n                this.conversation.application.session.sendRequest({\n                    type: this.type + ':delivered',\n                    from: this.conversation.me.id,\n                    cid: this.conversation.id,\n                    body: params\n                }, (response) => {\n                    if (response.type === this.type + ':delivered:success') {\n                        resolve();\n                    } else {\n                        reject(new NexmoApiError(response));\n                    }\n                });\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Mark as Seen the event\n     * @param {number} [event_id=this.event_id] if the event id is not provided, the this event will be used\n     * @returns {Promise}\n     * @private\n     */\n    seen(event_id = this.id) {\n        if (this.type !== \"text\" && this.type !== \"image\") {\n            this.type = \"event\";\n        }\n        return new Promise((resolve, reject) => {\n            if (this.conversation.me.id === this.from) {\n                reject(new NexmoClientError(\"error:seen:own-message\"));\n            } else if (this.state && this.state.seen_by && this.state.seen_by[this.conversation.me.id]) {\n                reject(new NexmoClientError(\"error:already-seen\"));\n            } else {\n                const params = {\n                    event_id: event_id\n                };\n                this.conversation.application.session.sendRequest({\n                    type: this.type + ':seen',\n                    from: this.conversation.me.id,\n                    cid: this.conversation.id,\n                    body: params\n                }, (response) => {\n                    if (response.type === this.type + ':seen:success') {\n                        resolve();\n                    } else {\n                        reject(new NexmoApiError(response));\n                    }\n                });\n            }\n        });\n    }\n}\nmodule.exports = Event;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n","/*\r\nWildEmitter.js is a slim little event emitter by @henrikjoreteg largely based\r\non @visionmedia's Emitter from UI Kit.\r\n\r\nWhy? I wanted it standalone.\r\n\r\nI also wanted support for wildcard emitters like this:\r\n\r\nemitter.on('*', function (eventName, other, event, payloads) {\r\n\r\n});\r\n\r\nemitter.on('somenamespace*', function (eventName, payloads) {\r\n\r\n});\r\n\r\nPlease note that callbacks triggered by wildcard registered events also get\r\nthe event name as the first argument.\r\n*/\r\n\r\nmodule.exports = WildEmitter;\r\n\r\nfunction WildEmitter() { }\r\n\r\nWildEmitter.mixin = function (constructor) {\r\n    var prototype = constructor.prototype || constructor;\r\n\r\n    prototype.isWildEmitter= true;\r\n\r\n    // Listen on the given `event` with `fn`. Store a group name if present.\r\n    prototype.on = function (event, groupName, fn) {\r\n        this.callbacks = this.callbacks || {};\r\n        var hasGroup = (arguments.length === 3),\r\n            group = hasGroup ? arguments[1] : undefined,\r\n            func = hasGroup ? arguments[2] : arguments[1];\r\n        func._groupName = group;\r\n        (this.callbacks[event] = this.callbacks[event] || []).push(func);\r\n        return this;\r\n    };\r\n\r\n    // Adds an `event` listener that will be invoked a single\r\n    // time then automatically removed.\r\n    prototype.once = function (event, groupName, fn) {\r\n        var self = this,\r\n            hasGroup = (arguments.length === 3),\r\n            group = hasGroup ? arguments[1] : undefined,\r\n            func = hasGroup ? arguments[2] : arguments[1];\r\n        function on() {\r\n            self.off(event, on);\r\n            func.apply(this, arguments);\r\n        }\r\n        this.on(event, group, on);\r\n        return this;\r\n    };\r\n\r\n    // Unbinds an entire group\r\n    prototype.releaseGroup = function (groupName) {\r\n        this.callbacks = this.callbacks || {};\r\n        var item, i, len, handlers;\r\n        for (item in this.callbacks) {\r\n            handlers = this.callbacks[item];\r\n            for (i = 0, len = handlers.length; i < len; i++) {\r\n                if (handlers[i]._groupName === groupName) {\r\n                    //console.log('removing');\r\n                    // remove it and shorten the array we're looping through\r\n                    handlers.splice(i, 1);\r\n                    i--;\r\n                    len--;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    // Remove the given callback for `event` or all\r\n    // registered callbacks.\r\n    prototype.off = function (event, fn) {\r\n        this.callbacks = this.callbacks || {};\r\n        var callbacks = this.callbacks[event],\r\n            i;\r\n\r\n        if (!callbacks) return this;\r\n\r\n        // remove all handlers\r\n        if (arguments.length === 1) {\r\n            delete this.callbacks[event];\r\n            return this;\r\n        }\r\n\r\n        // remove specific handler\r\n        i = callbacks.indexOf(fn);\r\n        callbacks.splice(i, 1);\r\n        if (callbacks.length === 0) {\r\n            delete this.callbacks[event];\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /// Emit `event` with the given args.\r\n    // also calls any `*` handlers\r\n    prototype.emit = function (event) {\r\n        this.callbacks = this.callbacks || {};\r\n        var args = [].slice.call(arguments, 1),\r\n            callbacks = this.callbacks[event],\r\n            specialCallbacks = this.getWildcardCallbacks(event),\r\n            i,\r\n            len,\r\n            item,\r\n            listeners;\r\n\r\n        if (callbacks) {\r\n            listeners = callbacks.slice();\r\n            for (i = 0, len = listeners.length; i < len; ++i) {\r\n                if (!listeners[i]) {\r\n                    break;\r\n                }\r\n                listeners[i].apply(this, args);\r\n            }\r\n        }\r\n\r\n        if (specialCallbacks) {\r\n            len = specialCallbacks.length;\r\n            listeners = specialCallbacks.slice();\r\n            for (i = 0, len = listeners.length; i < len; ++i) {\r\n                if (!listeners[i]) {\r\n                    break;\r\n                }\r\n                listeners[i].apply(this, [event].concat(args));\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    // Helper for for finding special wildcard event handlers that match the event\r\n    prototype.getWildcardCallbacks = function (eventName) {\r\n        this.callbacks = this.callbacks || {};\r\n        var item,\r\n            split,\r\n            result = [];\r\n\r\n        for (item in this.callbacks) {\r\n            split = item.split('*');\r\n            if (item === '*' || (split.length === 2 && eventName.slice(0, split[0].length) === split[0])) {\r\n                result = result.concat(this.callbacks[item]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n};\r\n\r\nWildEmitter.mixin(WildEmitter);\r\n","const logger = require('loglevel');\n\n/**\n * Handle sip Events\n *\n * @class SipEventHandler\n * @private\n  */\nclass SipEventHandler {\n\tconstructor(application) {\n\t\tthis.log = logger.getLogger(this.constructor.name);\n\t\tthis.application = application;\n\t}\n\n\t/**\n\t * Entry point for sip events\n\t * The event belongs to a call Object\n\t * @private\n\t */\n\t_handleSipCallEvent(event) {\n\t\tif (!this.application.calls.has(event.cid)) {\n\t\t\tthis.log.warn('There is no call object for this Conversation id.');\n\t\t\treturn;\n\t\t}\n\t\tconst event_call = this.application.calls.get(event.cid);\n\t\tconst _handleSipCallEventMap = {\n\t\t\t'sip:hangup': () => {\n\t\t\t\tevent_call._handleStatusChange(event);\n\t\t\t},\n\t\t\t'sip:ringing': () => {\n\t\t\t\tevent_call._handleStatusChange(event);\n\t\t\t}\n\t\t};\n\t\tif (_handleSipCallEventMap.hasOwnProperty(event.type)) {\n\t\t\treturn _handleSipCallEventMap[event.type].call(this);\n\t\t}\n\t}\n\n}\n\nmodule.exports = SipEventHandler;\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar filterIceServers = require('./filtericeservers');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n    // Edge currently only implements the RTCDtmfSender, not the\n    // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n    if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n      window.RTCDTMFSender = window.RTCDtmfSender;\n    }\n\n    var RTCPeerConnectionShim = shimRTCPeerConnection(window,\n        browserDetails.version);\n    window.RTCPeerConnection = function(config) {\n      if (config && config.iceServers) {\n        config.iceServers = filterIceServers(config.iceServers);\n      }\n      return new RTCPeerConnectionShim(config);\n    };\n    window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  }\n};\n","const logger = require('loglevel');\nconst Event = require('../events/event');\nconst TextEvent = require('../events/text_event');\nconst ImageEvent = require('../events/image_event');\nconst Recording = require('../events/recording');\n/**\n * Handle Conversation Events\n *\n * @class ConversationEventsHandler\n * @param {Application} application\n * @param {Conversation} conversation\n * @private\n  */\nclass ConversationEventHandler {\n    constructor(application, conversation) {\n        this.log = logger.getLogger(this.constructor.name);\n        this.application = application;\n        this.conversation = conversation;\n        this.constructed_event = null;\n        this._handleEventMap = {\n            'audio:record': this._processAudioRecord,\n            'audio:record:done': this._processAudioRecordDone,\n            'event:delete': this._processDelete,\n\n            'image': this._processImage,\n            'image:delivered': this._processDelivered,\n            'image:seen': this._processSeen,\n\n            'member:invited': this._processMember,\n            'member:joined': this._processMember,\n            'member:left': this._processMember,\n\n            'member:media': this._processMedia,\n\n            'text': this._processText,\n            'text:delivered': this._processDelivered,\n            'text:seen': this._processSeen,\n\n            'audio:mute:on': this._processMuteForMedia,\n            'audio:mute:off': this._processMuteForMedia,\n            'video:mute:on': this._processMuteForMedia,\n            'video:mute:off': this._processMuteForMedia\n        };\n\n    }\n\n\t/**\n\t * Handle and event.\n\t *\n\t * Identify the type of the event,\n\t * create the corresponding Class instance\n\t * emit to the corresponding Objects\n\t * @param {object} event\n\t * @private\n\t */\n    handleEvent(event) {\n        if (this._handleEventMap.hasOwnProperty(event.type)) {\n            return this._handleEventMap[event.type].call(this, event) || new Event(this.conversation, event);\n        }\n        return new Event(this.conversation, event);\n    }\n\n    /**\n     * return a simple Event object for the audio recording event\n\t * @param {object} event\n     * @returns {Event}\n     * @private\n     */\n    _processAudioRecord(event) {\n        return new Event(this.conversation, event);\n    }\n\n    /**\n     * return a Recording object for the audio recording event\n\t * @param {object} event\n     * @returns {Recording}\n     * @private\n     */\n    _processAudioRecordDone(event) {\n        return new Recording(this.conversation, event);\n    }\n\n    /**\n     * Mark the requested event as delivered\n     * use that event as constructed to update the local events' map\n\t * @param {object} event\n     * @returns the Event that is marked as delivered\n     * @private\n     */\n    _processDelivered(event) {\n        const delivered_id = event.body.event_id;\n        if (this.conversation.events.has(delivered_id)) {\n            let event_to_mark = this.conversation.events.get(delivered_id);\n            event_to_mark.state = event_to_mark.state || {};\n            event_to_mark.state.delivered_to = event_to_mark.state.delivered_to || {};\n            event_to_mark.state.delivered_to[event.from] = event.timestamp;\n            return event_to_mark;\n        } else {\n            this.log.warn('Event not found');\n            return null;\n        }\n    }\n\n    /**\n     * Delete the requested event\n     * empty the payload of the event (text or image)\n     * use that event as constructed to update the local events' map\n\t * @param {object} event\n     * @returns the deleted events\n     * @private\n     */\n    _processDelete(event) {\n        const event_to_delete = this.conversation.events.get(event.body.event_id);\n        if (this.conversation.events.has(event_to_delete.id)) {\n            if (event_to_delete.body.text) event_to_delete.body.text = \"\";\n            if (event_to_delete.body.representations) event_to_delete.body.representations = \"\";\n            event_to_delete.body.timestamp = {\n                deleted: event.timestamp\n            };\n            return event_to_delete;\n        } else {\n            this.log.warn('Event not found');\n            return null;\n        }\n    }\n\n    /**\n     * Return an ImageEvent with the corresponding image data\n\t * @param {object} event\n     * @returns {ImageEvent}\n     */\n    _processImage(event) {\n        const imageEvent = new ImageEvent(this.conversation, event);\n        // Automatically send a delivery\n        // avoid sending delivered to our own events\n        if (this.conversation.me.id !== imageEvent.from) {\n            imageEvent.delivered().catch((error) => {\n                this.log.debug(error);\n            });\n        }\n        return imageEvent;\n    }\n\n    /**\n     * Handle events for member state changes (joined, invited, left)\n     * in conversation level.\n     * Other members are going through here too.\n     * For .me member initial event (join, invite) use the application listener\n\t * @param {object} event\n     * @returns {Event}\n     * @private\n     */\n    _processMember(event) {\n        // needs to first process the call state and then alter the member\n        if (this.application.calls.has(this.conversation.id)) {\n            let call = this.application.calls.get(this.conversation.id);\n            call._handleStatusChange(event);\n        }\n        this.conversation.members[event.from]._handleEvent(event);\n        return new Event(this.conversation, event);\n    }\n\n    /**\n     * Handle member:media events\n     * use a call object if and the member object\n\t * @param {object} event\n     * @private\n     */\n    _processMedia(event) {\n        this.conversation.members[event.from]._handleEvent(event);\n        return null;\n    }\n\n    /**\n     * Handle *:mute:* events\n\t * @param {object} event\n     * @private\n     */\n    _processMuteForMedia(event) {\n        if (this.conversation.rtcObjects[event.body.rtc_id]) {\n            event.index = this.conversation.rtcObjects[event.body.rtc_id].streamIndex;\n        } else if (this.conversation.remoteMembers) {\n            const remote = this.conversation.remoteMembers\n                .find((remoteMember) =>\n                    remoteMember.remote_leg_id === event.body.rtc_id);\n            if (remote) {\n                event.index = remote.streamIndex;\n            }\n        }\n        return null;\n    }\n    /**\n     * Mark the requested event as seen\n     * use that event as constructed to update the local Events' map\n\t * @param {object} event\n     * @private\n     */\n    _processSeen(event) {\n        const seen_id = event.body.event_id;\n        if (this.conversation.events.has(seen_id)) {\n            let event_to_mark = this.conversation.events.get(seen_id);\n            event_to_mark.state = event_to_mark.state || {};\n            event_to_mark.state.seen_by = event_to_mark.state.seen_by || {};\n            event_to_mark.state.seen_by[event.from] = event.timestamp;\n            return event_to_mark;\n        } else {\n            this.log.warn('Event not found');\n            return null;\n        }\n    }\n\n    /**\n     * Create the TextEvent object and trigger .delivered()\n\t * @param {object} event\n     * @private\n     */\n    _processText(event) {\n        const textEvent = new TextEvent(this.conversation, event);\n        // Automatically send a delivery\n        // avoid sending delivered to our own events\n        if (this.conversation.me.id !== textEvent.from) {\n            textEvent.delivered().catch((error) => {\n                this.log.debug(error);\n            });\n        }\n        return textEvent;\n    }\n}\n\nmodule.exports = ConversationEventHandler;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*\n * Nexmo Stitch SDK\n *  Message Object Model\n *\n * Copyright (c) Nexmo Inc. 2015-2018\n */\n\nconst Event = require('./event');\n\n/**\n * Start a recording of the audio stream\n *\n * @class Recording\n */\nclass Recording extends Event {\n    constructor(conversation, params) {\n        super(conversation, params);\n        this.conversation = conversation;\n        Object.assign(this, params);\n    }\n\n    /**\n     * Stop the recording\n     * @returns {Promise}\n     */\n    stop() {\n        return super.del();\n    }\n}\nmodule.exports = Recording;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.prefix = factory(root);\n  }\n}(this, function (root) {\n  'use strict';\n\n  var merge = function (target) {\n    var i = 1;\n    var length = arguments.length;\n    var key;\n    for (; i < length; i++) {\n      for (key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          target[key] = arguments[i][key];\n        }\n      }\n    }\n    return target;\n  };\n\n  var defaults = {\n    template: '[%t] %l:',\n    levelFormatter: function (level) {\n      return level.toUpperCase();\n    },\n    nameFormatter: function (name) {\n      return name || 'root';\n    },\n    timestampFormatter: function (date) {\n      return date.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1');\n    },\n    format: undefined\n  };\n\n  var loglevel;\n  var configs = {};\n\n  var reg = function (rootLogger) {\n    if (!rootLogger || !rootLogger.getLogger) {\n      throw new TypeError('Argument is not a root logger');\n    }\n    loglevel = rootLogger;\n  };\n\n  var apply = function (logger, config) {\n    if (!logger || !logger.setLevel) {\n      throw new TypeError('Argument is not a logger');\n    }\n\n    /* eslint-disable vars-on-top */\n    var originalFactory = logger.methodFactory;\n    var name = logger.name || '';\n    var parent = configs[name] || configs[''] || defaults;\n    /* eslint-enable vars-on-top */\n\n    function methodFactory(methodName, logLevel, loggerName) {\n      var originalMethod = originalFactory(methodName, logLevel, loggerName);\n      var options = configs[loggerName] || configs[''];\n\n      var hasTimestamp = options.template.indexOf('%t') !== -1;\n      var hasLevel = options.template.indexOf('%l') !== -1;\n      var hasName = options.template.indexOf('%n') !== -1;\n\n      return function () {\n        var content = '';\n\n        var length = arguments.length;\n        var args = Array(length);\n        var key = 0;\n        for (; key < length; key++) {\n          args[key] = arguments[key];\n        }\n\n        // skip the root method for child loggers to prevent duplicate logic\n        if (name || !configs[loggerName]) {\n          /* eslint-disable vars-on-top */\n          var timestamp = options.timestampFormatter(new Date());\n          var level = options.levelFormatter(methodName);\n          var lname = options.nameFormatter(loggerName);\n          /* eslint-enable vars-on-top */\n\n          if (options.format) {\n            content += options.format(level, lname, timestamp);\n          } else {\n            content += options.template;\n            if (hasTimestamp) {\n              content = content.replace(/%t/, timestamp);\n            }\n            if (hasLevel) content = content.replace(/%l/, level);\n            if (hasName) content = content.replace(/%n/, lname);\n          }\n\n          if (args.length && typeof args[0] === 'string') {\n            // concat prefix with first argument to support string substitutions\n            args[0] = content + ' ' + args[0];\n          } else {\n            args.unshift(content);\n          }\n        }\n\n        originalMethod.apply(undefined, args);\n      };\n    }\n\n    if (!configs[name]) {\n      logger.methodFactory = methodFactory;\n    }\n\n    // for remove inherited format option if template option preset\n    config = config || {};\n    if (config.template) config.format = undefined;\n\n    configs[name] = merge({}, parent, config);\n\n    logger.setLevel(logger.getLevel());\n\n    if (!loglevel) {\n      logger.warn(\n        'It is necessary to call the function reg() of loglevel-plugin-prefix before calling apply. From the next release, it will throw an error. See more: https://github.com/kutuluk/loglevel-plugin-prefix/blob/master/README.md'\n      );\n    }\n\n    return logger;\n  };\n\n  var api = {\n    reg: reg,\n    apply: apply\n  };\n\n  var save;\n\n  if (root) {\n    save = root.prefix;\n    api.noConflict = function () {\n      if (root.prefix === api) {\n        root.prefix = save;\n      }\n      return api;\n    };\n  }\n\n  return api;\n}));\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*\n * Nexmo Stitch SDK\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nconst ConversationClientError = require('../conversationClientError');\n\nconst SCREEN_SHARE_INSTALLED_MESSAGE = 'screenshare-extension-installed';\nconst NexmoClientError = ConversationClientError.NexmoClientError;\n\n/**\n * Access Chrome specific screenShare plugin.\n * @class ChromeHelper\n * @private\n */\nclass ChromeHelper {\n\tconstructor(screenShareExtensionId) {\n\t\tthis.screenShareExtensionId = screenShareExtensionId;\n\t}\n\n\tcheckScreenShareInstalled() {\n    return new Promise((resolve, reject) => {\n      chrome.runtime.sendMessage(this.screenShareExtensionId, SCREEN_SHARE_INSTALLED_MESSAGE, (response) => {\n        if (response && response.type === 'success' && response.version === '0.1.0') {\n          resolve();\n        } else {\n          reject(new NexmoClientError('error:media:extension-not-installed'))\n        }\n      });\n    });\n\t}\n\n\tgetScreenShare(sources) {\n    return new Promise((resolve, reject) => {\n      chrome.runtime.sendMessage(this.screenShareExtensionId, { sources: sources }, (response) => {\n        if (!response || response.type === 'error') {\n          reject(new NexmoClientError('error:media:extension'));\n        } else if (response.type === 'success') {\n          resolve(response.streamId);\n        } else {\n          reject(new NexmoClientError('error:media:extension'));\n        }\n      });\n    });\n\t}\n}\n\nmodule.exports = ChromeHelper;\n","(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('nexmo-stitch', [], function () {\n      return (root['ConversationClient'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['ConversationClient'] = factory();\n  }\n}(this, function () {\n\n'use strict';\n\nlet ConversationClient = global.ConversationClient || {};\nConversationClient = require('./sdk')\n\nglobal.ConversationClient = ConversationClient;\n\nreturn ConversationClient;\n\n}));\n","/*\n * Nexmo Stitch SDK\n *  User Object Model\n *\n * Copyright (c) Nexmo Inc. 2015-2018\n */\n\nconst WildEmitter = require('wildemitter');\n\nclass User {\n    constructor(application, params) {\n        this.application = application;\n        Object.assign(this, params);\n        WildEmitter.mixin(User);\n    }\n}\nmodule.exports = User;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*\n * Nexmo Stitch SDK\n *  Errors Emitter\n *\n * Copyright (c) Nexmo Inc. 2018\n */\n\nconst logger = require('loglevel');\nconst NexmoClientError = require('../conversationClientError').NexmoClientError;\n\n/**\n * Class that can emit errors via any emitter passed to it.\n * @class ErrorsEmitter\n * @param {Emitter} emitter - Any event emitter that implements \"emit\" and \"releaseGroup\". Basically object that is mixed with Wildemitter.\n * @property {string} LISTENER_GROUP='Stitch-errors' - the group this emitter will register\n * @emits Emitter#Stitch-errors\n * @private\n */\n/**\n * Application listening for joins.\n *\n * @event Application#Stitch-errors\n *\n * @property {ConversationClientError} error\n *\n * @example <caption>listen for errors</caption>\n * application.on('*', 'Stitch-errors', (error) => {\n *    console.log('Error thrown with type ' + error.type);\n *  });\n * @example <caption>Update the token on expired-token error</caption>\n * application.on('system:error:expired-token', 'Stitch-errors', (error) => {\n * \tconsole.log('token expired');\n * \tapplication.updateToken(<token>);\n * });\n */\nclass ErrorsEmitter {\n    constructor(emitter) {\n        this.log = logger.getLogger(this.constructor.name);\n\n        if (!emitter) {\n            throw new NexmoClientError('no emitter object passed for the Error Emitter');\n        }\n        this.emitter = emitter;\n        this.LISTENER_GROUP = 'Stitch-errors';\n    }\n    /**\n     * Detect if the param.type includes error and emit that payload in the LISTENER_GROUP\n     * @param param - the payload to forward in the LISTENER_GROUP\n     * @param param.type - the type of the event to check if it's an error\n     */\n    emitResponseIfError(param) {\n        if (this._isTypeError(param.type)) {\n            return this.emitter.emit(param.type, this.LISTENER_GROUP, param);\n        }\n        return;\n    }\n\n    /**\n     * Release Group on the registered emitter (using the namespace LISTENER_GROUP that is set)\n     */\n    cleanup() {\n        return this.emitter.releaseGroup(this.LISTENER_GROUP);\n    }\n\n    /**\n     * Returns true if the param includes 'error'\n     * @param {string} type - the error type to check\n     */\n    _isTypeError(param) {\n        return param.indexOf('error') !== -1;\n    }\n}\n\nmodule.exports = ErrorsEmitter;\n","/*\n * Nexmo Stitch SDK\n *\n * Copyright (c) Nexmo Inc. 2017-2018\n */\n\nrequire('webrtc-adapter');\nconst browserDetect = require('detect-browser');\nconst logger = require('loglevel');\nconst ChromeHelper = require('./chrome_helper');\nconst NexmoClientError = require('../conversationClientError').NexmoClientError;\n\nconst browser = browserDetect.detect();\n\n/**\n * RTC helper object for accessing webRTC API.\n * @class RtcHelper\n * @private\n */\nclass RtcHelper {\n    constructor() {\n        this.log = logger.getLogger(this.constructor.name);\n    }\n    getUserAudio() {\n        return navigator.mediaDevices.getUserMedia({\n            video: false,\n            audio: true\n        });\n    }\n\n    getUserVideo(videoConstraints = true, audioConstraints = true) {\n        let constraintsToUse = {\n            video: videoConstraints,\n            audio: audioConstraints\n        };\n\n        return navigator.mediaDevices.getUserMedia(constraintsToUse);\n    }\n\n    getUserScreen(sources) {\n        return this.checkBrowserRunOnHttps()\n            .then(() => {\n                return this.checkChromeExtensionIsInstalled();\n            })\n            .then(() => {\n                return this.getShareScreenStream(sources);\n            });\n    }\n\n    createRTCPeerConnection(config, constraints, clientId) {\n        constraints.optional.push({ clientId: clientId });\n        const pc = new RTCPeerConnection(config, constraints);\n        // attaching the .trace to make easier the stats reporting implementation\n        pc.trace = () => { return; };\n        return pc;\n    }\n\n    checkBrowserRunOnHttps() {\n        return new Promise((resolve, reject) => {\n            if (this._getWindowLocationProtocol() !== 'https:') {\n                reject(new NexmoClientError('error:media:unsupported-browser'));\n            }\n            resolve();\n        });\n    }\n\n    checkChromeExtensionIsInstalled() {\n        if (this._getBrowserName() === 'chrome') {\n            if (!this.chromeHelper) {\n                this._initChromeHelper();\n            }\n            return this.chromeHelper.checkScreenShareInstalled();\n        } else {\n            // Firefox or others, no need for the extension (but this doesn't mean it will work)\n            return Promise.resolve();\n        }\n    }\n\n    getShareScreenStream(sources) {\n        switch (this._getBrowserName()) {\n            case 'chrome':\n                return this.chromeGetShareScreenStream(sources);\n            case 'firefox':\n                return this.fireFoxGetShareScreenStream();\n            default:\n                return Promise.reject(new NexmoClientError('error:media:unsupported-browser'));\n        }\n    }\n\n    fireFoxGetShareScreenStream() {\n        let constraints = {\n            video: {\n                mozMediaSource: 'screen',\n                mediaSource: 'screen'\n            },\n            audio: false\n        };\n        return navigator.mediaDevices.getUserMedia(constraints);\n    }\n\n    /**\n     * Get the ScreenShare stream\n     * video settings:\n     * chromeMediaSource: 'desktop',\n     * maxWidth: window.screen.width,\n     * maxHeight: window.screen.height,\n     * maxFrameRate: 15\n     * @private\n     */\n    chromeGetShareScreenStream(sources) {\n        if (!this.chromeHelper) {\n            this._initChromeHelper();\n        }\n        return this.chromeHelper.getScreenShare(sources)\n            .then((streamId) => {\n                const constraints = {\n                    audio: false,\n                    video: {\n                        mandatory: {\n                            chromeMediaSource: 'desktop',\n                            maxWidth: window.screen.width,\n                            maxHeight: window.screen.height,\n                            maxFrameRate: 15,\n                            chromeMediaSourceId: streamId\n                        },\n                        optional: []\n                    }\n                };\n                return navigator.mediaDevices.getUserMedia(constraints)\n\n            });\n    }\n\n    firefoxGetShareScreenStream() {\n        Promise.reject(new NexmoClientError('Not support'));\n    }\n\n    _playAudioStream(stream) {\n        const audio = new Audio();\n        audio.srcObject = stream;\n        audio.autoplay = true;\n        return audio;\n    }\n\n    _getWindowLocationProtocol() {\n        return window.location.protocol;\n    }\n\n    _getBrowserName() {\n        return browser.name;\n    }\n\n    /**\n     * sets this.screenShareExtensionId for cases we need Screen Share support for Chrome\n     * @param {string} screenShareExtensionId the screen share extension id to set\n     * @returns {Promise}\n     * @private\n     */\n    _setScreenShareExtensionId(screenShareExtensionId) {\n        if (typeof screenShareExtensionId !== \"string\") {\n            return Promise.reject(new NexmoClientError('not a valid extension id string'));\n        }\n        this.screenShareExtensionId = screenShareExtensionId;\n        return Promise.resolve();\n    }\n\n    /**\n     * sets this.chromeHelper object to enable screenshare capabilities\n     * @returns {Promise<ChromeHelper>} the generated instance of ChromeHelper\n     * @private\n     */\n    _initChromeHelper() {\n        if (!this.screenShareExtensionId) {\n            return Promise.reject(new NexmoClientError('screenShareExtensionId not set, set it with _setScreenShareExtensionId(screenShareExtensionId)'));\n        }\n        this.chromeHelper = new ChromeHelper(this.screenShareExtensionId);\n        return Promise.resolve(this.chromeHelper);\n    }\n\n    isNode() {\n        return browser.name === 'node';\n    }\n}\nmodule.exports = RtcHelper;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","const logger = require('loglevel');\nconst NexmoClientError = require('../../conversationClientError').NexmoClientError;\n\n/**\n * TraceWS connects the WebSocket and reports the webRTC trace\n * @param params.rtcstatsUri the Uri of the websocket service to send the report\n * @private\n */\nclass TraceWS {\n    constructor() {\n        this.log = logger.getLogger(this.constructor.name);\n\n        this.ws_config = {\n            PROTOCOL_VERSION: '1.0',\n            MAX_BUFFER_LENGTH: 50,\n            MAX_RECONNECT_RETRIES: 5,\n            RECONNECT_RETRY_TIMEOUT: 5000\n        }\n        this.buffer = [];\n        this.reconnectRetriesCount = 0;\n    }\n\n    init(params) {\n        this.rtcstatsUri = params.rtcstatsUri;\n        this.reconnect();\n    }\n\n    reconnect() {\n        this.log('TRACE-WS reconnect', this.connection ? this.connection.readyState : 'no connection');\n        if (this.connection && this.connection.readyState !== WebSocket.CLOSED) {\n            this.connection.close();\n        }\n        delete this.connection;\n        if (this.reconnectRetriesCount > this.ws_config.MAX_RECONNECT_RETRIES) {\n            return;\n        }\n        this.reconnectRetriesCount++;\n        if (this.rtcstatsUri) {\n            this.connection = new WebSocket(this.rtcstatsUri, this.ws_config.PROTOCOL_VERSION);\n            this.connection.onerror = (e) => {\n                this.log('TRACE-WS onerror', e);\n            };\n\n            this.connection.onopen = () => {\n                this.reconnectRetriesCount = 0;\n                this.log('TRACE-WS onopen', this.buffer.length);\n                while (this.buffer.length) {\n                    this.connection.send(JSON.stringify(this.buffer.shift()));\n                }\n            };\n\n            this.connection.onclose = (event) => {\n                this.log('TRACE-WS onclose', event);\n                setTimeout(() => {\n                    this.reconnect();\n                }, this.ws_config.RECONNECT_RETRY_TIMEOUT);\n            };\n        }\n        else {\n            throw new NexmoClientError('reporting rtcstatsUri not set use init( {rtcstatsUri:\"\"} )');\n        }\n    }\n\n    trace() {\n        let args = Array.prototype.slice.call(arguments);\n        args.push(new Date().getTime());\n        if (this.connection && this.connection.readyState === WebSocket.OPEN) {\n            this.connection.send(JSON.stringify(args));\n        } else {\n            if (this.buffer.length <= this.ws_config.MAX_BUFFER_LENGTH) {\n                this.buffer.push(args);\n            }\n        }\n    }\n\n    disable() {\n        this.connection.close();\n    }\n}\nmodule.exports = TraceWS;\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function(name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function(id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function(value) {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function(trackStat) {\n    result.forEach(function(stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    } else if (!('RTCRtpTransceiver' in window)) {\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        if (!e.transceiver) {\n          e.transceiver = {receiver: e.receiver};\n        }\n        return e;\n      });\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSenderReceiverGetStats: function(window) {\n    if (!(typeof window === 'object' && window.RTCPeerConnection &&\n        window.RTCRtpSender && window.RTCRtpReceiver)) {\n      return;\n    }\n\n    // shim sender stats.\n    if (!('getStats' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      if (origGetSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          var pc = this;\n          var senders = origGetSenders.apply(pc, []);\n          senders.forEach(function(sender) {\n            sender._pc = pc;\n          });\n          return senders;\n        };\n      }\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      if (origAddTrack) {\n        window.RTCPeerConnection.prototype.addTrack = function() {\n          var sender = origAddTrack.apply(this, arguments);\n          sender._pc = this;\n          return sender;\n        };\n      }\n      window.RTCRtpSender.prototype.getStats = function() {\n        var sender = this;\n        return this._pc.getStats().then(function(result) {\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          return filterStats(result, sender.track, true);\n        });\n      };\n    }\n\n    // shim receiver stats.\n    if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n      var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n      if (origGetReceivers) {\n        window.RTCPeerConnection.prototype.getReceivers = function() {\n          var pc = this;\n          var receivers = origGetReceivers.apply(pc, []);\n          receivers.forEach(function(receiver) {\n            receiver._pc = pc;\n          });\n          return receivers;\n        };\n      }\n      utils.wrapPeerConnectionEvent(window, 'track', function(e) {\n        e.receiver._pc = e.srcElement;\n        return e;\n      });\n      window.RTCRtpReceiver.prototype.getStats = function() {\n        var receiver = this;\n        return this._pc.getStats().then(function(result) {\n          return filterStats(result, receiver.track, false);\n        });\n      };\n    }\n\n    if (!('getStats' in window.RTCRtpSender.prototype &&\n        'getStats' in window.RTCRtpReceiver.prototype)) {\n      return;\n    }\n\n    // shim RTCPeerConnection.getStats(track).\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function() {\n      var pc = this;\n      if (arguments.length > 0 &&\n          arguments[0] instanceof window.MediaStreamTrack) {\n        var track = arguments[0];\n        var sender;\n        var receiver;\n        var err;\n        pc.getSenders().forEach(function(s) {\n          if (s.track === track) {\n            if (sender) {\n              err = true;\n            } else {\n              sender = s;\n            }\n          }\n        });\n        pc.getReceivers().forEach(function(r) {\n          if (r.track === track) {\n            if (receiver) {\n              err = true;\n            } else {\n              receiver = r;\n            }\n          }\n          return r.track === track;\n        });\n        if (err || (sender && receiver)) {\n          return Promise.reject(new DOMException(\n            'There are more than one sender or receiver for the track.',\n            'InvalidAccessError'));\n        } else if (sender) {\n          return sender.getStats();\n        } else if (receiver) {\n          return receiver.getStats();\n        }\n        return Promise.reject(new DOMException(\n          'There is no sender or receiver for the track.',\n          'InvalidAccessError'));\n      }\n      return origGetStats.apply(pc, arguments);\n    };\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrackWithNative: function(window) {\n    // shim addTrack/removeTrack with native variants in order to make\n    // the interactions with legacy getLocalStreams behave as in other browsers.\n    // Keeps a mapping stream.id => [stream, rtpsenders...]\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams).map(function(streamId) {\n        return pc._shimmedLocalStreams[streamId][0];\n      });\n    };\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      var sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      var existingSenders = pc.getSenders();\n      origAddStream.apply(this, arguments);\n      var newSenders = pc.getSenders().filter(function(newSender) {\n        return existingSenders.indexOf(newSender) === -1;\n      });\n      this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n    var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(function(streamId) {\n          var idx = pc._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            pc._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (pc._shimmedLocalStreams[streamId].length === 1) {\n            delete pc._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 65) {\n      return this.shimAddTrackRemoveTrackWithNative(window);\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var pc = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      pc._reverseStreams = pc._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return pc._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    } else {\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n      var OrigPeerConnection = window.RTCPeerConnection;\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n          var newIceServers = [];\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\n            var server = pcConfig.iceServers[i];\n            if (!server.hasOwnProperty('urls') &&\n                server.hasOwnProperty('url')) {\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n              server = JSON.parse(JSON.stringify(server));\n              server.urls = server.url;\n              newIceServers.push(server);\n            } else {\n              newIceServers.push(pcConfig.iceServers[i]);\n            }\n          }\n          pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var pc = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(pc, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var pc = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(pc, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var pc = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(pc, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  },\n\n  fixNegotiationNeeded: function(window) {\n    utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function(e) {\n      var pc = e.target;\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n      return e;\n    });\n  },\n\n  shimGetDisplayMedia: function(window, getSourceId) {\n    if ('getDisplayMedia' in window.navigator) {\n      return;\n    }\n    // getSourceId is a function that returns a promise resolving with\n    // the sourceId of the screen/window/tab to be shared.\n    if (typeof getSourceId !== 'function') {\n      console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n          'a function');\n      return;\n    }\n    navigator.getDisplayMedia = function(constraints) {\n      return getSourceId(constraints)\n        .then(function(sourceId) {\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: constraints.video.frameRate || 3\n            }\n          };\n          return navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n  }\n};\n"],"sourceRoot":""}